{"version":3,"sources":["shared/contexts/auth-context.js","shared/components/Navigation/MainHeader.js","shared/util/getAuth.js","api-list/host-url.js","api-list/api-list.js","shared/components/Navigation/NavLinks.js","images/konka_logo.png","images/back24-unsplash.jpg","shared/components/Navigation/MainNavigation.js","shared/components/UIELements/Card.js","shared/util/validators.js","shared/components/FormElements/Inputs.js","shared/components/FormElements/Button.js","shared/hooks/form-hooks.js","shared/components/UIELements/WithSpinner.js","images/konka.jpeg","Auth/pages/Authenticated.js","images/logo.png","Auth/pages/Auth.js","Scheduler/components/ControlBar.js","Scheduler/components/DataTable.js","Scheduler/components/Breadcrumbs.js","Scheduler/components/PageHeaders.js","shared/hooks/get-hooks.js","Scheduler/pages/Scheduler.js","HistoryReports/components/Breadcrumbs.js","HistoryReports/components/PageHeaders.js","HistoryReports/components/DataTable.js","HistoryReports/components/DetailTable.js","HistoryReports/components/ControlBar.js","HistoryReports/pages/Report.js","Scheduler/components/ScriptTree.js","Scheduler/components/ScriptSetting.js","Scheduler/components/PageHeadersSub.js","Scheduler/pages/SchedulerAdd.js","Scheduler/pages/SchedulerEdit.js","Authority/components/DataTable.js","Authority/components/FormData.js","Authority/components/Breadcrumbs.js","Authority/components/PageHeaders.js","Authority/components/GroupTransfer.js","Authority/components/AuthControlBar.js","Authority/pages/Authority.js","shared/components/FormElements/InputGroup.js","Auth/pages/Register.js","Auth/pages/Error404Page.js","Auth/pages/Error403Page.js","HistoryReports/components/ReportPage.js","HistoryReports/components/RecentReportControlBar.js","HistoryReports/pages/RecentReportContainer.js","HistoryReports/pages/RecentReport.js","Authority/components/GroupTabContent.js","Authority/components/GroupClassify.js","Authority/components/PageHeadersSub.js","Authority/pages/GroupSetting.js","Authority/components/GroupDistribute.js","Authority/pages/AuthSetting.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","UserData","isLoggedIn","Department","Role","login","logout","UserName","MainHeader","props","mode","className","children","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","removeAuthToken","removeItem","hostUrl","local","window","location","origin","getRecentReportsPicsApi","day","axios","create","baseURL","getSchedulerListApi","postSchedulerAddApi","postSchedulerUpdateApi","postSchedulerDeletehApi","getSchedulerTreeDataApi","getSchedulerGrouplistApi","getReportListDataApi","startTime","endTime","loginApi","authenticatedApi","refreshTokenApi","registerApi","postAuthorizeApi","getUserInfoApi","getGroupInfoApi","postAssigngroupApi","postAddDepartmentApi","postAddGroupApi","postUpdateGroupApi","postDeleteGroupApi","NavLinks","style","history","useHistory","auth","useContext","useState","displayStyle","setDisplayStyle","styles","backgroundColor","padding","fontSize","color","fontWeight","display","position","left","exact","to","placement","title","boxShadow","cursor","onClick","push","paddingTop","paddingBottom","paddingLeft","paddingRight","onMouseEnter","onMouseLeave","icon","faUserCircle","size","marginRight","marginLeft","faSignOutAlt","GlobalStyle","createGlobalStyle","imgUrl","MainNavigation","setMode","Fragment","imgLight","src","logo","alt","width","float","Card","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","length","test","InputReducer","state","action","isTouched","Inputs","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","touchHandler","changeHandler","event","target","element","placeholder","onChange","onBlur","prefix","UserOutlined","autoFocus","autofocus","Password","LockOutlined","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","rows","htmlFor","textAlign","label","errorText","Button","href","inverse","danger","disabled","formReducer","formIsValid","inputKey","inputs","inputId","useForm","initialInput","initialFormValidity","formState","useCallback","inputsData","formValidity","Spinner","WithSpinner","WrappedComponent","isLoading","height","getMe","a","config","headers","authorization","get","res","console","log","response","status","originalConfig","_retry","post","refreshtoken","AccessToken","data","Promise","reject","Auth","isLoginning","setIsLoginning","errMsg","setErrMsg","account","password","inputHandler","authSubmitHandler","e","preventDefault","loginInfo","AccountName","then","setTimeout","konkaLogo","component","variant","onSubmit","ControlBar","changeData","setScheduleData","fetchingDataAsync","setUserData","setIsLoggedIn","setUserRole","openNotificationWithIcon","name","notification","message","description","handleOnDelete","postJson","ress","getReportsList","catch","err","info","arr","List","map","x","idx","key","margin","justifyContent","pathname","borderRadius","PlusOutlined","EditFilled","onConfirm","okText","cancelText","DeleteFilled","onlyUnique","index","self","indexOf","DataTable","dataIndex","setChangeData","scheduleData","uniqueDep","department","filter","text","uniqueGroup","group","selectionType","nongId","setNongId","total","rowSelection","selectedRowKeys","selectedRows","searchTexts","setSearchText","searchedColumns","setSearchedColumn","searchInput","useRef","handleSearch","selectedKeys","confirm","columns","filterDropdown","setSelectedKeys","clearFilters","ref","onPressEnter","marginBottom","SearchOutlined","handleReset","closeDropdown","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","current","select","render","highlightStyle","searchWords","autoEscape","textToHighlight","filters","frequency","dayindex","timesetting","scroll","borderStyle","borderColor","borderWidth","pagination","pageSize","showTotal","dataSource","rowKey","onRow","Breadcrumbs","userRole","Item","overlay","PageHeaders","column","useGetData","apiInstance","fetchData","setFetchData","Error","DataTableWithSpinner","Scheduler","back","getCheckboxProps","rel","FileTextOutlined","DetailTable","detail","bordered","RangePicker","DatePicker","dateOriFormat","setStartTime","setEndTime","defaultValue","moment","format","dateStr","dateFormat","Report","setUserDepartment","listData","setListData","subtract","Title","Typography","ScriptTree","treeData","setSelectedScript","setSelectedScriptPath","selectedScriptKey","selectedScript","showLeafIcon","showLine","level","overflowY","overflowX","background","defaultExpandAll","onSelect","node","TimePickerStyle","styled","div","FontStyle","Option","Select","ScriptSetting","selectedScriptPath","groupData","descriptName","setDescriptName","dayIndex","setDayIndex","setValue","time","setTime","setDepartment","setGroup","handleOnTime","str","handleChange","handleOnSave","warning","script","scriptpath","success","error","editname","i","paddinLeft","overflow","flexGrow","border","departmentname","grouplist","y","addonBefore","Group","flexBasis","optionLabelProp","flexWrap","PageHeadersSub","onBack","ScriptSettingWithSpinner","SchedulerAdd","setGroupData","departmentlist","getGroupInfoList","SchedulerEdit","scriptkey","FormDataWithSpinner","editData","setUseInfo","ModalOpen","setModalOpen","groupInfo","Form","form","setFieldsValue","disabledRole","setDisabledRole","disabledGroup","setDisabledGroup","handleOnSendCheck","values","getUserInfoList","userArr","users","role","onOk","validateFields","onCancel","resetFields","labelCol","span","wrapperCol","layout","onValuesChange","changedValues","allValues","rules","required","optionType","buttonStyle","check","setGroupInfo","setEditData","handleOnEdit","GroupTransfer","json","chooseGroup","chooseDepartment","forEach","groupchosen","targetKeys","setTargetKeys","handleTransfer","result","RefreshToken","errs","showSearch","listStyle","titles","operations","direction","moveKeys","findIndex","item","AuthControlBar","dep","depIdx","userInfo","AuthControlBarWithSpinner","Authority","useInfo","PrefixListIcon","faBriefcase","InputGroup","alignItems","borderBottomLeftRadius","borderTopLeftRadius","borderLeft","depart","Register","successMsg","setSuccessMsg","registerSubmitHandler","clickNum","setClickNum","timeoutTag","clearTimeout","Error404Page","subTitle","extra","Error403Page","ReportPage","repoData","minValue","maxValue","loading","imageRef","setSize","gutter","slice","HtmlPath","flexDirection","hoverable","active","Path","onLoad","naturalHeight","naturalWidth","marginTop","ReportName","TimeStamp","RecentReportControlBar","setRecentReportDays","recentReportDays","getRecentReportsPics","ReportList","ReloadOutlined","RecentReportWithSpinner","setMinValue","setMaxValue","defaultCurrent","RecentReportContainer","GroupTabContent","open","setOpen","groupName","setGroupName","openEditGroup","setOpenEditGroup","groupRename","setGroupRename","groupOriname","setGroupOriname","handleRemoveGroup","tempIdx","removeJson","splice","postRemoveGroupInfoList","modalClose","postEditGroupInfoList","addJson","newgroupname","postGroupInfoList","onFinish","autoComplete","fields","block","concat","closable","UsergroupAddOutlined","renameJson","TabPane","Tabs","GroupTabContentWithSpinner","GroupClassifyWithSpinner","pane","setPane","activeKey","setActiveKey","departmentName","setDepartmentName","remove","targetKey","lastIndex","panes","String","slot","React","useMemo","hideAdd","onEdit","tabPosition","tabBarExtraContent","tab","tempPane","content","GroupSetting","SubMenu","Menu","GroupDistributeWithSpinner","setChooseGroup","setChooseDepartment","keyPath","domEvent","defaultSelectedKeys","AppstoreOutlined","GroupTransferWithSpinner","AuthSetting","App","routes","userDepartment","user","setUser","userData","mounted","path","replace","Provider","userName","userDatas","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8487eaf.chunk.js","sourcesContent":["import { createContext } from \"react\";\n//import { useHistory } from \"react-router-dom\";\n\nexport const AuthContext = createContext({\n  UserData: null,\n  isLoggedIn: false,\n  Department: null,\n  Role: null,\n  login: () => {},\n  logout: () => {\n    // const history = useHistory();\n    // history.push(\"/auth\");\n  },\n  UserName: null,\n});\n","import React from \"react\";\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  if (props.mode === \"light\")\n    return <div className=\"main-header\">{props.children}</div>;\n  else return <div className=\"main-header-dark\">{props.children}</div>;\n};\n\nexport default MainHeader;\n","const TOKEN_NAME = \"token\";\r\n\r\n// 將 token 存到 localStorage\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\n// 從 localStorage 讀取 token\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n\r\n// 移除 localStorage 內物件\r\nexport const removeAuthToken = (token) => {\r\n  localStorage.removeItem(TOKEN_NAME);\r\n};\r\n\r\nexport const getLocalRefreshToken = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  return user?.RefreshToken;\r\n};\r\n\r\nconst updateLocalAccessToken = (token) => {\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n  user.AccessToken = token;\r\n  localStorage.setItem(\"user\", JSON.stringify(user));\r\n};\r\n","const HOST_URL_LIST = {\n  //local: \"http://192.168.0.32:5050/api\",\n  //local: \"http://192.168.0.20:5050/api\",\n  local: window.location.origin + \"/api\",\n};\n// console.log(window.location.origin);\n\n//get the IP addresses associated with an account\n\nexport const hostUrl = HOST_URL_LIST.local;\n","import axios from \"axios\";\nimport { hostUrl } from \"./host-url\";\n\n//#region Recent Reports\n\n//顯示近期縮圖  //get\nexport const getRecentReportsPicsApi = (day) =>\n  axios.create({\n    baseURL: `${hostUrl}/RecentReports/${day}`,\n  });\n\n//點擊image導向Html //get\nexport const getRecentReportsDetailApi = (permissions, reportname) =>\n  axios.create({\n    baseURL: `${hostUrl}/RecentReports/detail/${permissions}/${reportname}`,\n  });\n\n//#endregion\n\n//#region Scheduler\n\n//顯示Scheduler列表  //get\nexport const getSchedulerListApi = axios.create({\n  baseURL: `${hostUrl}/Scheduler/list`,\n});\n\n//add button  //post\nexport const postSchedulerAddApi = axios.create({\n  baseURL: `${hostUrl}/Scheduler/addschedule`,\n});\n\n//update button  //post\nexport const postSchedulerUpdateApi = axios.create({\n  baseURL: `${hostUrl}/Scheduler/updateschedule`,\n});\n\n//delete button  //post\nexport const postSchedulerDeletehApi = axios.create({\n  baseURL: `${hostUrl}/Scheduler/deleteschedule`,\n});\n\n//get treedata  //get\nexport const getSchedulerTreeDataApi = axios.create({\n  baseURL: `${hostUrl}/Scheduler/localpath`,\n});\n\n//get user's department and group  //get\nexport const getSchedulerGrouplistApi = axios.create({\n  baseURL: `${hostUrl}/Scheduler/getgrouplist`,\n});\n//#endregion\n\n//#region Report\n\n//get report list //get\nexport const getReportListDataApi = (startTime, endTime) =>\n  axios.create({\n    baseURL: `${hostUrl}/Report/${startTime}/${endTime}`,\n  });\n\n//#endregion\n\n//登入  //post\nexport const loginApi = axios.create({\n  baseURL: `${hostUrl}/Account/login`,\n});\n\n//使用者驗證  //get\nexport const authenticatedApi = axios.create({\n  baseURL: `${hostUrl}/Account/isAuthenticated`,\n});\n\n//延長token驗證時間  //post\nexport const refreshTokenApi = axios.create({\n  baseURL: `${hostUrl}/Account/refresh-token`,\n});\n\n//登出  //post\nexport const logoutApi = axios.create({\n  baseURL: `${hostUrl}/Account/logout`,\n});\n\n//註冊  //post\nexport const registerApi = axios.create({\n  baseURL: `${hostUrl}/Account/add`,\n});\n\n//權限管理  //post\nexport const postAuthorizeApi = axios.create({\n  baseURL: `${hostUrl}/Account/authorize`,\n});\n\n//權限管理List  //get\nexport const getUserInfoApi = axios.create({\n  baseURL: `${hostUrl}/Account/getuserinfo`,\n});\n\n//群組管理List  //get\nexport const getGroupInfoApi = axios.create({\n  baseURL: `${hostUrl}/Account/getgroupinfo`,\n});\n\n//修改Group資訊  //post\n// export const postGroupinfoApi = axios.create({\n//   baseURL: `${hostUrl}/Account/setgroupinfo`,\n// });\n\n//修改Group資訊  //post\nexport const postAssigngroupApi = axios.create({\n  baseURL: `${hostUrl}/Account/assigngroup`,\n});\n\n//新增部門  //post\nexport const postAddDepartmentApi = axios.create({\n  baseURL: `${hostUrl}/Account/adddepartment`,\n});\n\n//新增群組  //post\nexport const postAddGroupApi = axios.create({\n  baseURL: `${hostUrl}/Account/addgroup`,\n});\n\n//修改群組名  //post\nexport const postUpdateGroupApi = axios.create({\n  baseURL: `${hostUrl}/Account/updategroup`,\n});\n\n//刪除群組  //post\nexport const postDeleteGroupApi = axios.create({\n  baseURL: `${hostUrl}/Account/deletegroup`,\n});\n","import React, { useContext, useState } from \"react\";\nimport { NavLink, useHistory, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts/auth-context\";\n//import Button from \"../FormElements/Button\";\nimport { Menu, Button, Tooltip } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./NavLinks.css\";\nimport { setAuthToken } from \"../../util/getAuth\";\nimport { logoutApi } from \"../../../api-list/api-list\";\nconst NavLinks = (props) => {\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const [displayStyle, setDisplayStyle] = useState(\"none\");\n  //console.log(auth);\n  const styles = {\n    backgroundColor: \"#0081a7\",\n    padding: \"0.5rem\",\n    fontSize: \"1.1rem\",\n    color: \"white\",\n    fontWeight: \"800\",\n    display: `${displayStyle}`,\n    // borderTopRightRadius: \"10px\",\n    //borderBottomRightRadius: \"10px\",\n  };\n\n  /*const handleLogout = async () => {\n    setAuthToken(\"\");\n    //setUser(null);\n    const res = await logoutApi.post(\"\");\n  };*/\n\n  // if (!auth.isLoggedIn) {\n  //   return (\n  //     <ul className=\"nav-links\">\n  //       <li>\n  //         <NavLink to=\"/auth\">登入</NavLink>\n  //       </li>\n  //     </ul>\n  //   );\n  // }\n  if (auth.isLoggedIn && auth.Department === \"Admin\") {\n    // const onClick = (e) => {\n    //   console.log(e.key);\n    //   props.setMode(\"dark\");\n    //   //message.info(`Click on item ${key}`);\n    // };\n    // const menu = (\n    //   <Menu>\n    //     {props.mode === \"light\" ? (\n    //       <Menu.Item\n    //         key=\"1\"\n    //         onClick={(e) => {\n    //           props.setMode(\"dark\");\n    //         }}\n    //       >\n    //         Dark Mode\n    //       </Menu.Item>\n    //     ) : (\n    //       <Menu.Item\n    //         key=\"1\"\n    //         onClick={(e) => {\n    //           props.setMode(\"light\");\n    //         }}\n    //       >\n    //         Light Mode\n    //       </Menu.Item>\n    //     )}\n    //     <Menu.Item key=\"2\">登出</Menu.Item>\n    //   </Menu>\n    // );\n\n    // const handleMouseEnter = () => {\n    //   setDisplayStyle(\"block\");\n    // };\n\n    let style;\n    if (props.mode === \"light\") style = \"nav-links\";\n    else style = \"nav-links dark\";\n\n    return (\n      <ul className={style}>\n        <div\n          style={{\n            display: \"flex\",\n            position: \"fixed\",\n            // left: \"calc(80px)\",\n            left: \"calc(170px)\",\n          }}\n        >\n          <li>\n            <NavLink exact to=\"/\">\n              HOME\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/scheduler\">SCHEDULER</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/report\">REPORT</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/authority\">AUTHORITY</NavLink>\n          </li>\n        </div>\n        {/* <li>\n          <Dropdown overlay={menu}>\n            <Avatar\n              size=\"large\"\n              icon={<UserOutlined />}\n              style={{\n                cursor: \"pointer\",\n                fontWeight: 1200,\n                color: props.mode === \"light\" ? \"#fff\" : \"white\",\n                backgroundColor: props.mode === \"light\" ? \"#ccc\" : \"#778da9\", //\"#183883\" //,\n              }}\n            />\n          </Dropdown>\n        </li> */}\n        <Tooltip placement=\"bottom\" title={<span>Logout</span>}>\n          <div\n            style={{\n              display: \"flex\",\n              // backgroundColor: \"#00afb9\",\n              boxShadow: \"0 6px 10px rgba(0, 0, 0, 0.26)\",\n              //padding: \"0.5rem\",\n              cursor: \"pointer\",\n              //borderRadius: \"20%\",\n            }}\n            onClick={() => {\n              auth.logout();\n              history.push(\"/\");\n            }}\n          >\n            <div\n              style={{\n                backgroundColor: \"#00afb9\",\n                paddingTop: \"0.4rem\",\n                paddingBottom: \"0.4rem\",\n                paddingLeft: \"0.4rem\",\n                paddingRight: \"0.8rem\",\n                color: \"white\",\n                fontSize: \"1.1rem\",\n                fontWeight: 600,\n\n                // borderTopLeftRadius: \"10px\",\n                //borderBottomLeftRadius: \"10px\",\n              }}\n              onMouseEnter={() => setDisplayStyle(\"block\")}\n              onMouseLeave={() => setDisplayStyle(\"none\")}\n            >\n              {/* <Avatar\n                icon={<UserOutlined />}\n                style={{\n                  fontWeight: 1200,\n                  color: \"#00afb9\",\n                  backgroundColor: \"white\",\n                  marginRight: \"8px\",\n                  marginLeft: \"5px\",\n                }}\n              /> */}\n              <FontAwesomeIcon\n                icon={faUserCircle}\n                size=\"lg\"\n                style={{\n                  marginRight: \"8px\",\n                  marginLeft: \"5px\",\n                }}\n              />\n              {auth.UserName}\n            </div>\n            <div\n              style={styles}\n              onMouseEnter={() => setDisplayStyle(\"block\")}\n              onMouseLeave={() => setDisplayStyle(\"none\")}\n            >\n              <FontAwesomeIcon icon={faSignOutAlt} />\n              {/* <LogoutOutlined /> */}\n            </div>\n          </div>\n        </Tooltip>\n        {/* <Button\n          icon={<UserOutlined />}\n          size=\"large\"\n          onClick={() => auth.logout()}\n        >\n          12345\n          <LogoutOutlined />\n        </Button> */}\n      </ul>\n    );\n  }\n  if (auth.isLoggedIn && auth.Department !== \"Admin\") {\n    let style;\n    if (props.mode === \"light\") style = \"nav-links\";\n    else style = \"nav-links dark\";\n\n    return (\n      <ul className={style}>\n        <div\n          style={{ display: \"flex\", position: \"fixed\", left: \"calc(170px)\" }}\n        >\n          <li>\n            <NavLink exact to=\"/\">\n              HOME\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/scheduler\">SCHEDULER</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/report\">REPORT</NavLink>\n          </li>\n          {auth.Role === \"Leader\" ? (\n            <li>\n              <NavLink to=\"/authority\">AUTHORITY</NavLink>\n            </li>\n          ) : null}\n        </div>\n        {/* <li>\n          <Dropdown overlay={menu}>\n            <Avatar\n              size=\"large\"\n              icon={<UserOutlined />}\n              style={{\n                cursor: \"pointer\",\n                fontWeight: 1200,\n                color: props.mode === \"light\" ? \"#fff\" : \"white\",\n                backgroundColor: props.mode === \"light\" ? \"#ccc\" : \"#778da9\", //\"#183883\" //,\n              }}\n            />\n          </Dropdown>\n        </li> */}\n        <Tooltip placement=\"bottom\" title={<span>Logout</span>}>\n          <div\n            style={{\n              display: \"flex\",\n              // backgroundColor: \"#00afb9\",\n              boxShadow: \"0 6px 10px rgba(0, 0, 0, 0.26)\",\n              //padding: \"0.5rem\",\n              cursor: \"pointer\",\n              //borderRadius: \"20%\",\n            }}\n            onClick={() => {\n              auth.logout();\n              history.push(\"/\");\n            }}\n          >\n            <div\n              style={{\n                backgroundColor: \"#00afb9\",\n                paddingTop: \"0.4rem\",\n                paddingBottom: \"0.4rem\",\n                paddingLeft: \"0.4rem\",\n                paddingRight: \"0.8rem\",\n                color: \"white\",\n                fontSize: \"1.1rem\",\n                fontWeight: 600,\n\n                // borderTopLeftRadius: \"10px\",\n                //borderBottomLeftRadius: \"10px\",\n              }}\n              onMouseEnter={() => setDisplayStyle(\"block\")}\n              onMouseLeave={() => setDisplayStyle(\"none\")}\n            >\n              {/* <Avatar\n                icon={<UserOutlined />}\n                style={{\n                  fontWeight: 1200,\n                  color: \"#00afb9\",\n                  backgroundColor: \"white\",\n                  marginRight: \"8px\",\n                  marginLeft: \"5px\",\n                }}\n              /> */}\n              <FontAwesomeIcon\n                icon={faUserCircle}\n                size=\"lg\"\n                style={{\n                  marginRight: \"8px\",\n                  marginLeft: \"5px\",\n                }}\n              />\n              {auth.UserName}\n            </div>\n            <div\n              style={styles}\n              onMouseEnter={() => setDisplayStyle(\"block\")}\n              onMouseLeave={() => setDisplayStyle(\"none\")}\n            >\n              <FontAwesomeIcon icon={faSignOutAlt} />\n              {/* <LogoutOutlined /> */}\n            </div>\n          </div>\n        </Tooltip>\n      </ul>\n    );\n  }\n\n  // if (auth.isLoggedIn && auth.userRole === \"QA\") {\n  //   return (\n  //     <ul className=\"nav-links\">\n  //       <li>\n  //         <NavLink to=\"/after-processing\">工作日報表</NavLink>\n  //       </li>\n  //       <li>\n  //         <Button onClick={() => auth.logout()}>登出</Button>\n  //       </li>\n  //     </ul>\n  //   );\n  // }\n  return (\n    <></>\n    // <ul className=\"nav-links\">\n    //   <li>\n    //     <NavLink to=\"/auth\">登入</NavLink>\n    //   </li>\n    // </ul>\n  );\n};\n\nexport default NavLinks;\n","export default __webpack_public_path__ + \"static/media/konka_logo.e8f57cb2.png\";","export default __webpack_public_path__ + \"static/media/back24-unsplash.142c11ba.jpg\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport \"./MainNavigation.css\";\nimport logo from \"../../../images/konka_logo.png\";\n//import logo from \"../../../images/fst-logo.png\";\nimport { createGlobalStyle } from \"styled-components\";\n//import imgLight from \"../../../images/back26-unsplash.jpg\";\nimport imgLight from \"../../../images/back24-unsplash.jpg\";\n// import imgDark from \"../../../images/back-unsplash.jpg\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background:url(${(props) => props.imgUrl});\n    background-size:cover;\n    background-color:#FAFAFA\n  }\n`;\n\nconst MainNavigation = ({ login }) => {\n  const [mode, setMode] = useState(\"light\");\n  return (\n    <React.Fragment>\n      {!login ? (\n        <GlobalStyle imgUrl={imgLight} />\n      ) : (\n        <GlobalStyle imgUrl={null} />\n      )}\n\n      {/* {mode === \"light\" ? (\n        <GlobalStyle imgUrl={imgLight} />\n      ) : (\n        <GlobalStyle imgUrl={imgDark} />\n      )} */}\n      {login && (\n        <MainHeader mode={mode}>\n          <h1 className=\"main-navigation__title\">\n            <Link to=\"/\">\n              <img src={logo} alt=\"\" style={{ width: \"15%\", float: \"left\" }} />\n              {/* <img src={logo} alt=\"\" style={{ width: \"50%\", float: \"left\" }} /> */}\n            </Link>\n          </h1>\n          <nav className=\"main-navigation__header-nav\">\n            <NavLinks mode={mode} setMode={setMode} />\n          </nav>\n        </MainHeader>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\nimport {\n  EyeInvisibleOutlined,\n  EyeTwoTone,\n  LockOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport { Input } from \"antd\";\nimport \"./Input.css\";\n\nconst InputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Inputs = (props) => {\n  const [inputState, dispatch] = useReducer(InputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n  const { id, onInput, className } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, isValid, onInput, value]);\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const changeHandler = (event) => {\n    // dispatch action obj\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      // <input\n      //   id={props.id}\n      //   type={props.type}\n      //   placeholder={props.placeholder}\n      //   onChange={changeHandler}\n      //   onBlur={touchHandler}\n      //   value={inputState.value}\n      // />\n      props.type === \"text\" ? (\n        <Input\n          id={props.id}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          size=\"large\"\n          autoFocus={props.autofocus}\n          // suffix={\n          //   <Tooltip title=\"Extra information\">\n          //     <InfoCircleOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />\n          //   </Tooltip>\n          // }\n        />\n      ) : (\n        <Input.Password\n          id={props.id}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n          prefix={<LockOutlined />}\n          size=\"large\"\n          iconRender={(visible) =>\n            visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n          }\n        />\n      )\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      } ${className && className}`}\n    >\n      <label htmlFor={props.id} style={{ textAlign: \"left\" }}>\n        {props.label}\n      </label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Inputs;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${\n          props.inverse && 'button--inverse'\n        } ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${\n          props.inverse && 'button--inverse'\n        } ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${\n        props.inverse && 'button--inverse'\n      } ${props.danger && 'button--danger'} ${\n        props.className && props.className\n      }`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useReducer, useCallback } from 'react';\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputKey in state.inputs) {\n        if (inputKey === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputKey].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid,\n          },\n        },\n        isValid: formIsValid,\n      };\n    case 'SET_FORM_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.isValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInput, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInput,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      inputId: id,\n      value,\n      isValid,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputsData, formValidity) => {\n    dispatch({\n      type: 'SET_FORM_DATA',\n      inputs: inputsData,\n      isValid: formValidity,\n    });\n  }, []);\n  return [formState, inputHandler, setFormData];\n};\n","import React from 'react';\nimport './WithSpinner.css';\n\nexport const Spinner = () => <div className=\"spinner-container\" />;\n\nconst WithSpinner = (WrappedComponent) => ({ isLoading, height, ...props }) => {\n  return isLoading ? (\n    <div className=\"spinner-overlay\" style={{ height: height && height }}>\n      <div className=\"spinner-container\" />\n    </div>\n  ) : (\n    <WrappedComponent {...props} />\n  );\n};\nexport default WithSpinner;\n","export default __webpack_public_path__ + \"static/media/konka.5b068042.jpeg\";","//import { useContext } from \"react\";\r\nimport { getAuthToken, setAuthToken } from \"../../shared/util/getAuth\";\r\nimport { authenticatedApi, refreshTokenApi } from \"../../api-list/api-list\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\n// 身分驗證\r\nexport const getMe = async () => {\r\n  // 從 localStorage 讀取 token\r\n  //const history=useHistory();\r\n  const token = getAuthToken();\r\n\r\n  const config = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  try {\r\n    const res = await authenticatedApi.get(\"\", config);\r\n    //.then((res) => res.data);\r\n    /*if (res.status === 200) {\r\n        history.push(\"/home\");\r\n      } */ //else return {};\r\n\r\n    return res;\r\n  } catch (err) {\r\n    console.log(err, err.response.status, err.config);\r\n    const originalConfig = err.config;\r\n    if (err.response.status === 401 && !originalConfig._retry) {\r\n      try {\r\n        const res = await refreshTokenApi.post(\r\n          \"\",\r\n          { refreshtoken: token },\r\n          config\r\n        );\r\n        const { AccessToken } = res.data;\r\n        setAuthToken(AccessToken);\r\n        //TokenService.updateLocalAccessToken(AccessToken);\r\n        //return instance(originalConfig);\r\n      } catch (error) {\r\n        return Promise.reject(error);\r\n      }\r\n    }\r\n    /*const res = await refreshTokenApi.post(\r\n      \"\",\r\n      { username: \"test\", password: \"test\" },\r\n      config\r\n    );\r\n    if (res) setAuthToken(res.data.AccessToken);\r\n    else setAuthToken(\"\");*/\r\n    //setAuthToken(\"\");\r\n    //history.push(\"/auth\");\r\n    /* setIsLoggedIn(false);\r\n    setUserRole(null);\r\n    setUser(null);*/\r\n    //setAuthToken(\"\");\r\n  }\r\n\r\n  //   return fetch(`${BASE_URL}/me`, {\r\n  //     headers: {\r\n  //       authorization: `Bearer ${token}`,\r\n  //     },\r\n  //   }).then((res) => res.json());\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.251d0e54.png\";","import React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIELements/Card\";\nimport Input from \"../../shared/components/FormElements/Inputs\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\nimport { useForm } from \"../../shared/hooks/form-hooks\";\nimport { loginApi } from \"../../api-list/api-list\";\nimport { Spinner } from \"../../shared/components/UIELements/WithSpinner\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { Typography } from \"antd\";\n//import fstLogo from \"../../images/fst-logo.png\";\nimport { Link } from \"react-router-dom\";\nimport { setAuthToken, removeAuthToken } from \"../../shared/util/getAuth\";\nimport konkaLogo from \"../../images/konka.jpeg\";\nimport fstLogo from \"../../images/logo.png\";\nimport { getMe } from \"./Authenticated\";\nimport \"./Auth.css\";\nimport { useHistory } from \"react-router-dom\";\n//import { Input, Space } from \"antd\";\n//import { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\n//import { Input, Tooltip } from \"antd\";\n//import { InfoCircleOutlined, UserOutlined } from \"@ant-design/icons\";\n\nconst Auth = () => {\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const [isLoginning, setIsLoginning] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  const [formState, inputHandler] = useForm(\n    {\n      account: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n  const authSubmitHandler = async (e) => {\n    e.preventDefault();\n\n    const { account, password } = formState.inputs;\n    const loginInfo = {\n      AccountName: account.value,\n      password: password.value,\n    };\n    try {\n      setIsLoginning(true);\n      const res = await loginApi.post(\"\", loginInfo);\n      if (res && res.data) {\n        //auth.login(res.data.userRole, res.data.user);\n        if (res.data.status !== 200) {\n          setErrMsg(\"帳號或密碼輸入錯誤\");\n        }\n        setAuthToken(res.data.AccessToken);\n        getMe().then((response) => {\n          //console.log(response);\n          if (response.status !== 200) {\n            // 在 getMe() 出錯代表還沒成功登入，因此要把 token 清空\n            //setAuthToken(\"\");\n            removeAuthToken();\n            auth.logout();\n\n            //setErrMsg(response.toString());\n          }\n          //setUser(response.data);\n          else {\n            auth.login(\n              res.data.Department,\n              res.data.Role,\n              res.data.AccountName,\n              res.data\n            );\n            //setIsLoginning(false);\n            //並導回首頁\n            history.push(\"/\");\n          }\n        });\n        //const toLocal = JSON.stringify(res.data);\n        //localStorage.setItem(\"user\", res.data.AccessToken);\n\n        // if (res.data.accessToken) {\n        //   localStorage.setItem(\"user\", JSON.stringify(res.data));\n        //   auth.login(res.data.userRole, res.data.user);\n        // }\n      } else {\n        setErrMsg(\"帳號或密碼輸入錯誤\");\n        setTimeout(() => {\n          setErrMsg(\"\");\n        }, 3000);\n        setIsLoginning(false);\n      }\n    } catch (err) {\n      console.log(err);\n      setErrMsg(\"帳號或密碼輸入錯誤\");\n      setTimeout(() => {\n        setErrMsg(\"\");\n      }, 3000);\n      /* return () => {\n        clearTimeout(timeoutTag);\n      };*/\n      setIsLoginning(false);\n    }\n  };\n\n  const _authSubmitHandler = async (e) => {\n    e.preventDefault();\n    const { account, password } = formState.inputs;\n    const loginInfo = {\n      user: account.value,\n      password: password.value,\n    };\n\n    if (account.value === \"user\" && password.value === \"user\") {\n      setIsLoginning(false);\n      auth.login(\"Admin\", loginInfo.user);\n    } else {\n      setErrMsg(\"帳密組合有誤\");\n      setTimeout(() => {\n        setErrMsg(\"\");\n      }, 3000);\n      setIsLoginning(false);\n    }\n    // try {\n    //   setIsLoginning(true);\n    //   const res = await loginApi.post(\"/\", loginInfo);\n    //   if (res && res.data.userRole) {\n    //     setIsLoginning(false);\n    //     auth.login(res.data.userRole);\n    //   } else {\n    //     setErrMsg(\"帳密組合有誤\");\n    //     setTimeout(() => {\n    //       setErrMsg(\"\");\n    //     }, 3000);\n    //     setIsLoginning(false);\n    //   }\n    // } catch (err) {\n    //   console.log(err);\n    //   setErrMsg(\"帳密組合有誤\");\n    //   setTimeout(() => {\n    //     setErrMsg(\"\");\n    //   }, 3000);\n    //   setIsLoginning(false);\n    // }\n  };\n\n  return (\n    <Card className=\"authentication\">\n      <img\n        src={konkaLogo}\n        //src={fstLogo}\n        alt=\"\"\n        style={{ width: \"50%\", paddingTop: \"5%\" /* height: \"10%\" */ }}\n      />\n      {/* <Avatar\n        //style={{ backgroundColor: \"#ff1744\", margin: \"5%\" }}\n        style={{ backgroundColor: \"transparent\", margin: \"3%\" }}\n        //icon={<LockOutlined />}\n        icon={<img src={fstLogo} alt=\"fireSpot\" />}\n        size={50}\n      /> */}\n      <Typography component=\"h3\" variant=\"h5\">\n        Engineering Data Analysis\n      </Typography>\n      {/* <Typography component=\"h2\" variant=\"h5\">\n        登入\n      </Typography> */}\n      <h2>登入介面</h2>\n      {errMsg && <h4 className=\"authentication__error\">{errMsg}</h4>}\n      {isLoginning ? (\n        <Spinner />\n      ) : (\n        <form className=\"authentication__form\" onSubmit={authSubmitHandler}>\n          <Input\n            id=\"account\"\n            type=\"text\"\n            //label=\"帳號\"\n            element=\"input\"\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(4)]}\n            errorText=\"最少四個字元\"\n            onInput={inputHandler}\n            placeholder=\"請輸入帳號\"\n            //autofocus\n          />\n\n          <Input\n            id=\"password\"\n            type=\"password\"\n            //label=\"密碼\"\n            element=\"input\"\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(4)]}\n            errorText=\"最少四個字元\"\n            onInput={inputHandler}\n            style={{ width: \"100%\" }}\n            placeholder=\"請輸入密碼\"\n          />\n\n          {/* <Input.Password\n            placeholder=\"input password\"\n            iconRender={(visible) =>\n              visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n            }\n            \n          /> */}\n\n          <Button\n            className=\"authentication__form__login\"\n            type=\"submit\"\n            //style={{ width: \"100%\" }}\n            disabled={!formState.isValid}\n          >\n            登入\n          </Button>\n          <Link to=\"/register\">\n            <p>我要註冊</p>\n          </Link>\n        </form>\n      )}\n    </Card>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\r\nimport { Button, notification, Popconfirm, message } from \"antd\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport {\r\n  postSchedulerDeletehApi,\r\n  getSchedulerListApi,\r\n} from \"../../api-list/api-list\";\r\nimport { PlusOutlined, EditFilled, DeleteFilled } from \"@ant-design/icons\";\r\nimport { getAuthToken, removeAuthToken } from \"../../shared/util/getAuth\";\r\n\r\nconst ControlBar = ({\r\n  changeData,\r\n  fetchingDataAsync,\r\n  setScheduleData,\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n}) => {\r\n  const openNotificationWithIcon = (type) => {\r\n    let name;\r\n    if (changeData.length !== 0) name = changeData[0].name;\r\n    notification[type]({\r\n      message: \"通知\",\r\n      description: `${name}已刪除`,\r\n      placement: \"bottomLeft\",\r\n    });\r\n  };\r\n  const history = useHistory();\r\n  const token = getAuthToken();\r\n  const config = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const handleOnDelete = async () => {\r\n    const postJson = {\r\n      name: changeData[0].name,\r\n    };\r\n    //console.log(postJson);\r\n    //console.log(postJson);\r\n    try {\r\n      await postSchedulerDeletehApi\r\n        .post(\"\", postJson, config)\r\n        .then((ress) => {\r\n          getReportsList();\r\n          //fetchingDataAsync();\r\n          openNotificationWithIcon(\"success\");\r\n        })\r\n        .catch((err) => {\r\n          //setStatusCheck(false)\r\n          console.log(err);\r\n          if (err.response.status === 401) {\r\n            removeAuthToken();\r\n            message.info(\"驗證過期，請重新登入\");\r\n            setUserData(null);\r\n            setIsLoggedIn(false);\r\n            setUserRole(null);\r\n            history.push(\"/\");\r\n          }\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getReportsList = async () => {\r\n    try {\r\n      const res = await getSchedulerListApi.get(\"\", config);\r\n\r\n      if (res.data) {\r\n        let arr = res.data.List.map((x, idx) => {\r\n          x.key = idx;\r\n          return x;\r\n        });\r\n\r\n        setScheduleData(arr);\r\n        //return res.data.Path;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 401) {\r\n        removeAuthToken();\r\n        message.info(\"驗證過期，請重新登入\");\r\n        setUserData(null);\r\n        setIsLoggedIn(false);\r\n        setUserRole(null);\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        float: \"right\",\r\n        //marginBottom: \"30px\",\r\n        margin: \"auto auto 3em auto\",\r\n        justifyContent: \"space-between\",\r\n        marginRight: \"5%\",\r\n      }}\r\n    >\r\n      <NavLink\r\n        to={{\r\n          pathname: \"/scheduler/add\",\r\n          //state: { fetchingDataAsync: fetchingDataAsync },\r\n        }}\r\n      >\r\n        <Button\r\n          size=\"large\"\r\n          key=\"3\"\r\n          style={{\r\n            backgroundColor: \"#1CC153\",\r\n            borderRadius: \"5px\",\r\n            color: \"white\",\r\n            marginRight: \"10px\",\r\n          }}\r\n          icon={<PlusOutlined />}\r\n        >\r\n          ADD\r\n        </Button>\r\n      </NavLink>\r\n      <NavLink\r\n        to={{\r\n          pathname: \"/scheduler/edit\",\r\n          state: {\r\n            changeData: changeData,\r\n            //fetchingDataAsync: fetchingDataAsync,\r\n          },\r\n        }}\r\n      >\r\n        <Button\r\n          size=\"large\"\r\n          key=\"2\"\r\n          type=\"primary\"\r\n          style={{ borderRadius: \"5px\", marginRight: \"10px\" }}\r\n          disabled={changeData.length === 0}\r\n          icon={<EditFilled />}\r\n        >\r\n          EDIT\r\n        </Button>\r\n      </NavLink>\r\n      <Popconfirm\r\n        placement=\"topLeft\"\r\n        title=\"是否確定刪除?\"\r\n        //onConfirm={message.info(\"Clicked on Yes.\")}\r\n        onConfirm={(e) => handleOnDelete(e)}\r\n        okText=\"確定\"\r\n        cancelText=\"取消\"\r\n      >\r\n        <Button\r\n          style={{ borderRadius: \"5px\", marginRight: \"10px\" }}\r\n          size=\"large\"\r\n          key=\"1\"\r\n          type=\"danger\"\r\n          disabled={changeData.length === 0}\r\n          icon={<DeleteFilled />}\r\n        >\r\n          DELETE\r\n        </Button>\r\n      </Popconfirm>\r\n      {/* <Button\r\n        size=\"large\"\r\n        key=\"1\"\r\n        type=\"danger\"\r\n        style={{ borderRadius: \"5px\", marginRight: \"10px\" }}\r\n        disabled={changeData.length === 0}\r\n        //onClick={() => openNotificationWithIcon(\"success\")}\r\n        onClick={() => handleOnDelete()}\r\n      >\r\n        DELETE\r\n      </Button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlBar;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Table, Button, Space, Input } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nfunction onlyUnique(value, index, self) {\r\n  return self.indexOf(value) === index;\r\n}\r\n\r\nconst DataTable = ({ setChangeData, scheduleData }) => {\r\n  let uniqueDep = scheduleData\r\n    .map((x) => x.department)\r\n    .filter(onlyUnique)\r\n    .map((x) => ({\r\n      text: x,\r\n      value: x,\r\n    }));\r\n  let uniqueGroup = scheduleData\r\n    .map((x) => x.group)\r\n    .filter(onlyUnique)\r\n    .map((x) => ({\r\n      text: x,\r\n      value: x,\r\n    }));\r\n  const [selectionType, setSelectionType] = useState(\"radio\");\r\n  const [nongId, setNongId] = useState([]);\r\n  const total = scheduleData.length;\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: nongId,\r\n    selectedRows: [],\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      //console.log(selectedRowKeys);\r\n      setChangeData(selectedRows);\r\n      setNongId(selectedRowKeys);\r\n      //   console.log(\r\n      //     record,\r\n      //     `selectedRowKeys: ${selectedRowKeys}`,\r\n      //     \"selectedRows: \",\r\n      //     selectedRows\r\n      //   );\r\n    },\r\n    // onSelect: (record, selected, selectedRows, nativeEvent) => {\r\n    //   console.log(record, selected, selectedRows, nativeEvent);\r\n    // },\r\n    // getCheckboxProps: (record) => ({\r\n    //   disabled: record.name === \"Disabled User\",\r\n    //   // Column configuration not to be checked\r\n    //   name: record.name,\r\n    // }),\r\n  };\r\n  const [searchTexts, setSearchText] = useState(\"\");\r\n  const [searchedColumns, setSearchedColumn] = useState(\"\");\r\n  const searchInput = useRef(null);\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText(\"\");\r\n  };\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n              //   this.setState({\r\n              //     searchText: selectedKeys[0],\r\n              //     searchedColumn: dataIndex,\r\n              //   });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumns === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchTexts]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Description Name\",\r\n      dataIndex: \"name\",\r\n      ...getColumnSearchProps(\"name\"),\r\n    },\r\n    {\r\n      title: \"Department\",\r\n      dataIndex: \"department\",\r\n      filters: uniqueDep,\r\n      onFilter: (value, record) => record.department.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Group\",\r\n      dataIndex: \"group\",\r\n      filters: uniqueGroup,\r\n      onFilter: (value, record) => record.group.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Script\",\r\n      dataIndex: \"script\",\r\n    },\r\n    {\r\n      title: \"Frequency\",\r\n      dataIndex: \"frequency\",\r\n      filters: [\r\n        {\r\n          text: \"By Day\",\r\n          value: \"By day\",\r\n        },\r\n        {\r\n          text: \"By Week\",\r\n          value: \"By week\",\r\n        },\r\n        {\r\n          text: \"By Month\",\r\n          value: \"By month\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.frequency.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Time Settings\",\r\n      dataIndex: \"timesetting\",\r\n      render: (text, record) => {\r\n        if (record.frequency === \"By month\") {\r\n          return \"每月第\" + record.dayindex + \"天 - \" + record.timesetting;\r\n        } else if (record.frequency === \"By week\") {\r\n          return \"每週\" + record.dayindex + \" - \" + record.timesetting;\r\n        } else return \"每日\" + record.timesetting;\r\n      },\r\n    },\r\n    {\r\n      title: \"Detail\",\r\n      dataIndex: \"scriptpath\",\r\n      render: (text, record) => {\r\n        if (text === \"Script is not exist.\") {\r\n          return text;\r\n        }\r\n      },\r\n      //...getColumnSearchProps(\"name\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      scroll={{ x: \"100%\" }}\r\n      style={{\r\n        width: \"90%\",\r\n        //height: \"95%\",\r\n        margin: \"auto\",\r\n        textAlign: \"center\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"lightgrey\",\r\n        borderWidth: \"1px\",\r\n        marginBottom: \"50px\",\r\n        boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.26)\",\r\n      }}\r\n      rowSelection={{\r\n        type: selectionType,\r\n        ...rowSelection,\r\n      }}\r\n      pagination={{\r\n        position: [\"bottomCenter\"],\r\n        pageSize: 8,\r\n        total: total,\r\n        showTotal: (total) => `Total ${total} scripts`,\r\n      }}\r\n      columns={columns}\r\n      dataSource={scheduleData}\r\n      rowKey={(record) => record.key}\r\n      onRow={(record) => ({\r\n        onClick: () => {\r\n          //console.log(record.key);\r\n          setNongId([record.key]);\r\n          setChangeData([record]);\r\n        },\r\n      })}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useContext } from \"react\";\r\nimport { Breadcrumb, Menu } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nconst menu = (userRole) => (\r\n  <Menu>\r\n    <Menu.Item>\r\n      <NavLink to=\"/scheduler\">Scheduler</NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <NavLink to=\"/report\">Report</NavLink>\r\n      {/* <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"./report\">\r\n        Report\r\n      </a> */}\r\n    </Menu.Item>\r\n    {userRole === \"Admin\" && (\r\n      <Menu.Item>\r\n        <NavLink to=\"/authority\">Authority</NavLink>\r\n      </Menu.Item>\r\n    )}\r\n  </Menu>\r\n);\r\n\r\nconst Breadcrumbs = ({ title }) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item>\r\n        <NavLink to=\"/\">Home</NavLink>\r\n      </Breadcrumb.Item>\r\n      <Breadcrumb.Item overlay={menu(auth.Role)}>\r\n        <NavLink to=\"/scheduler\">Scheduler</NavLink>\r\n        {/* <a>Scheduler</a> */}\r\n      </Breadcrumb.Item>\r\n      {title === \"Scheduler-Add\" && <Breadcrumb.Item>Add</Breadcrumb.Item>}\r\n      {title === \"Scheduler-Edit\" && <Breadcrumb.Item>Edit</Breadcrumb.Item>}\r\n    </Breadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","import React from \"react\";\r\nimport { PageHeader, Descriptions } from \"antd\";\r\nimport Breadcrumbs from \"./Breadcrumbs\";\r\n\r\nconst PageHeaders = ({ title }) => {\r\n  return (\r\n    <PageHeader\r\n      style={{\r\n        width: \"50%\",\r\n        margin: \"auto auto auto 5em\",\r\n        //textAlign: \"left\",\r\n        //borderStyle: \"solid\",\r\n        //borderWidth: \"0.5px\",\r\n        //borderColor: \"lightgrey\",\r\n      }}\r\n      //onBack={() => window.history.back()}\r\n      //className=\"site-page-header\"\r\n      // onBack={() => window.history.back()}\r\n      title={<h2>{title}</h2>}\r\n      //subTitle=\"This is a subtitle\"\r\n      // extra={[\r\n      //   <NavLink to=\"/scheduler/add\">\r\n      //     <Button\r\n      //       size=\"large\"\r\n      //       key=\"3\"\r\n      //       style={{\r\n      //         backgroundColor: \"#1CC153\",\r\n      //         borderRadius: \"10px\",\r\n      //         color: \"white\",\r\n      //       }}\r\n      //     >\r\n      //       ADD\r\n      //     </Button>\r\n      //   </NavLink>,\r\n      //   <NavLink to=\"/scheduler/edit\">\r\n      //     <Button\r\n      //       size=\"large\"\r\n      //       key=\"2\"\r\n      //       type=\"primary\"\r\n      //       style={{ borderRadius: \"10px\" }}\r\n      //     >\r\n      //       EDIT\r\n      //     </Button>\r\n      //   </NavLink>,\r\n      //   <Button\r\n      //     size=\"large\"\r\n      //     key=\"1\"\r\n      //     type=\"danger\"\r\n      //     style={{ borderRadius: \"10px\" }}\r\n      //   >\r\n      //     DELETE\r\n      //   </Button>,\r\n      // ]}\r\n    >\r\n      <Descriptions size=\"small\" column={2}>\r\n        <Descriptions.Item>\r\n          <Breadcrumbs title={title} />\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default PageHeaders;\r\n","import { useEffect, useState, useCallback } from \"react\";\n\nexport const useGetData = (apiInstance) => {\n  const [fetchData, setFetchData] = useState(null);\n  const fetchingDataAsync = useCallback(async () => {\n    try {\n      const res = await apiInstance.get(\"\");\n      setFetchData(res.data);\n    } catch (err) {\n      throw new Error(err);\n    }\n  }, [apiInstance]);\n  useEffect(() => {\n    fetchingDataAsync();\n  }, [fetchingDataAsync]);\n\n  return [fetchData, fetchingDataAsync, setFetchData];\n};\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport ControlBar from \"../components/ControlBar\";\r\nimport DataTable from \"../components/DataTable\";\r\nimport PageHeaders from \"../components/PageHeaders\";\r\nimport { getSchedulerListApi } from \"../../api-list/api-list\";\r\nimport { useGetData } from \"../../shared/hooks/get-hooks\";\r\nimport WithSpinner from \"../../shared/components/UIELements/WithSpinner\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport { getAuthToken, removeAuthToken } from \"../../shared/util/getAuth\";\r\nimport { message } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nconst DataTableWithSpinner = WithSpinner(DataTable);\r\nconst Scheduler = ({ setUserData, setIsLoggedIn, setUserRole }) => {\r\n  const [changeData, setChangeData] = useState([]);\r\n  const [scheduleData, setScheduleData] = useState();\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  /*let scheduleData = [];\r\n  const [fetchData, fetchingDataAsync] = useGetData(\r\n    getSchedulerListApi,\r\n    config\r\n  );\r\n  if (fetchData) {\r\n    scheduleData = fetchData.List.map((x, idx) => {\r\n      x.key = idx;\r\n      return x;\r\n    });\r\n  }*/\r\n\r\n  useEffect(() => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const getReportsList = async () => {\r\n      //Event.preventDefault();\r\n      try {\r\n        const res = await getSchedulerListApi.get(\"\", config);\r\n\r\n        if (res.data) {\r\n          let arr = res.data.List.map((x, idx) => {\r\n            x.key = idx;\r\n            return x;\r\n          });\r\n\r\n          setScheduleData(arr);\r\n          //return res.data.Path;\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        if (err.response.status === 401) {\r\n          removeAuthToken();\r\n          message.info(\"驗證過期，請重新登入\");\r\n          setUserData(null);\r\n          setIsLoggedIn(false);\r\n          setUserRole(null);\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    };\r\n    getReportsList();\r\n  }, [auth, setUserData, setIsLoggedIn, setUserRole, history]);\r\n  //console.log(changeData);\r\n  return (\r\n    <div style={{ width: \"90%\" }}>\r\n      <div style={{ display: \"flex\" }}>\r\n        <PageHeaders title={\"Scheduler\"} back={false} />\r\n        {/* <Divider style={{ marginBottom: \"30px\", width: \"50%\" }} /> */}\r\n        <ControlBar\r\n          changeData={changeData}\r\n          //fetchingDataAsync={fetchingDataAsync}\r\n          setScheduleData={setScheduleData}\r\n          setUserData={setUserData}\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setUserRole={setUserRole}\r\n        />\r\n      </div>\r\n      <DataTableWithSpinner\r\n        isLoading={!!!scheduleData}\r\n        setChangeData={setChangeData}\r\n        scheduleData={scheduleData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scheduler;\r\n","import React, { useContext } from \"react\";\r\nimport { Breadcrumb, Menu } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nconst menu = (userRole) => (\r\n  <Menu>\r\n    <Menu.Item>\r\n      <NavLink to=\"/scheduler\">Scheduler</NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <NavLink to=\"/report\">Report</NavLink>\r\n      {/* <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"./report\">\r\n        Report\r\n      </a> */}\r\n    </Menu.Item>\r\n    {userRole === \"Admin\" && (\r\n      <Menu.Item>\r\n        <NavLink to=\"/authority\">Authority</NavLink>\r\n      </Menu.Item>\r\n    )}\r\n  </Menu>\r\n);\r\n\r\nconst Breadcrumbs = ({ title }) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item>\r\n        <NavLink to=\"/\">Home</NavLink>\r\n      </Breadcrumb.Item>\r\n      {title !== \"Recent Reports\" && (\r\n        <Breadcrumb.Item overlay={menu(auth.Role)}>\r\n          <NavLink to=\"/report\">Report</NavLink>\r\n        </Breadcrumb.Item>\r\n      )}\r\n    </Breadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","import React from \"react\";\r\nimport { PageHeader, Descriptions } from \"antd\";\r\nimport Breadcrumbs from \"./Breadcrumbs\";\r\n\r\nconst PageHeaders = ({ title, back }) => {\r\n  return (\r\n    <PageHeader\r\n      style={{\r\n        width: \"50%\",\r\n        margin: \"auto auto auto 5em\",\r\n        //width: \"90%\",\r\n        //margin: \"auto\",\r\n        //borderStyle: \"solid\",\r\n        //borderWidth: \"0.5px\",\r\n        //borderColor: \"lightgrey\",\r\n      }}\r\n      //className=\"site-page-header\"\r\n      // onBack={() => window.history.back()}\r\n      title={<h2>{title}</h2>}\r\n      //subTitle=\"This is a subtitle\"\r\n      // extra={[\r\n      //   <RangePicker\r\n      //     defaultValue={[\r\n      //       moment(\"2021/07/01\", dateFormat),\r\n      //       moment(\"2021/07/05\", dateFormat),\r\n      //     ]}\r\n      //     size=\"large\"\r\n      //     format={dateFormat}\r\n      //   />,\r\n      // ]}\r\n    >\r\n      <Descriptions size=\"small\" column={2}>\r\n        <Descriptions.Item>\r\n          <Breadcrumbs title={title} />\r\n        </Descriptions.Item>\r\n        {/* <Descriptions.Item label=\"Created\">Lili Qu</Descriptions.Item>\r\n        <Descriptions.Item label=\"Association\">\r\n          <a>421421</a>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Creation Time\">2017-01-10</Descriptions.Item>\r\n        <Descriptions.Item label=\"Effective Time\">2017-10-10</Descriptions.Item>\r\n        <Descriptions.Item label=\"Remarks\">\r\n          Gonghu Road, Xihu District, Hangzhou, Zhejiang, China\r\n        </Descriptions.Item> */}\r\n      </Descriptions>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default PageHeaders;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Table, Input, Button, Space } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n//import ColumnSearch from \"./ColumnSearch\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nfunction onlyUnique(value, index, self) {\r\n  return self.indexOf(value) === index;\r\n}\r\n\r\nconst DataTable = ({ data, setChangeData, nongId, setNongId }) => {\r\n  const total = data.length;\r\n  const [selectionType, setSelectionType] = useState(\"radio\");\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: nongId,\r\n    selectedRows: [],\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      // console.log(\r\n      //   `selectedRowKeys: ${selectedRowKeys}`,\r\n      //   \"selectedRows: \",\r\n      //   selectedRows\r\n      // );\r\n      setChangeData(selectedRows);\r\n      setNongId(selectedRowKeys);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === \"Disabled User\",\r\n      // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const [searchTexts, setSearchText] = useState(\"\");\r\n  const [searchedColumns, setSearchedColumn] = useState(\"\");\r\n  const searchInput = useRef(null);\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText(\"\");\r\n  };\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n              //   this.setState({\r\n              //     searchText: selectedKeys[0],\r\n              //     searchedColumn: dataIndex,\r\n              //   });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumns === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchTexts]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  let uniqueDep = data\r\n    .map((x) => x.department)\r\n    .filter(onlyUnique)\r\n    .map((x) => ({\r\n      text: x,\r\n      value: x,\r\n    }));\r\n  let uniqueGroup = data\r\n    .map((x) => x.group)\r\n    .filter(onlyUnique)\r\n    .map((x) => ({\r\n      text: x,\r\n      value: x,\r\n    }));\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Description Name\",\r\n      dataIndex: \"name\",\r\n      //render: (text) => <a>{text}</a>,\r\n      ...getColumnSearchProps(\"name\"),\r\n    },\r\n    {\r\n      title: \"Department\",\r\n      dataIndex: \"department\",\r\n      filters: uniqueDep,\r\n      onFilter: (value, record) => record.department.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Group\",\r\n      dataIndex: \"group\",\r\n      filters: uniqueGroup,\r\n      onFilter: (value, record) => record.group.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Script\",\r\n      dataIndex: \"script\",\r\n    },\r\n    {\r\n      title: \"Frequency\",\r\n      dataIndex: \"frequency\",\r\n      filters: [\r\n        {\r\n          text: \"By Day\",\r\n          value: \"By day\",\r\n        },\r\n        {\r\n          text: \"By Week\",\r\n          value: \"By week\",\r\n        },\r\n        {\r\n          text: \"By Month\",\r\n          value: \"By month\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.frequency.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Time Settings\",\r\n      dataIndex: \"time\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {/* <Radio.Group\r\n        onChange={({ target: { value } }) => {\r\n          setSelectionType(value);\r\n        }}\r\n        value={selectionType}\r\n      >\r\n        <Radio value=\"checkbox\">Checkbox</Radio>\r\n        <Radio value=\"radio\">radio</Radio>\r\n      </Radio.Group>\r\n\r\n      <Divider /> */}\r\n\r\n      <Table\r\n        scroll={{ x: \"100%\" }}\r\n        style={{\r\n          width: \"90%\",\r\n          margin: \"auto\",\r\n          textAlign: \"center\",\r\n          borderStyle: \"solid\",\r\n          borderColor: \"lightgrey\",\r\n          borderWidth: \"1px\",\r\n          marginBottom: \"50px\",\r\n          boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.26)\",\r\n        }}\r\n        rowSelection={{\r\n          type: selectionType,\r\n          ...rowSelection,\r\n        }}\r\n        columns={columns}\r\n        dataSource={data}\r\n        //pagination={{ pageSize: 5, position: [\"bottomCenter\"] }}\r\n        pagination={{\r\n          position: [\"bottomCenter\"],\r\n          pageSize: 8,\r\n          total: total,\r\n          showTotal: (total) => `Total ${total} scripts`,\r\n        }}\r\n        onRow={(record) => ({\r\n          onClick: () => {\r\n            setNongId(record.key);\r\n            setChangeData([record]);\r\n          },\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\nimport { FileTextOutlined } from \"@ant-design/icons\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"SN\",\r\n    dataIndex: \"sn\",\r\n    //render: (text) => text + 1,\r\n  },\r\n  {\r\n    title: \"File Name\",\r\n    dataIndex: \"filename\",\r\n  },\r\n  {\r\n    title: \"Update Time\",\r\n    dataIndex: \"updatetime\",\r\n  },\r\n  {\r\n    title: \"Report\",\r\n    dataIndex: \"HtmlPath\",\r\n    render: (text) => (\r\n      <a href={text} target=\"_blank\" rel=\"noreferrer\">\r\n        <FileTextOutlined />\r\n      </a>\r\n    ),\r\n  },\r\n];\r\n\r\n// const rowSelection = {\r\n//   onChange: (selectedRowKeys, selectedRows) => {\r\n//     console.log(\r\n//       `selectedRowKeys: ${selectedRowKeys}`,\r\n//       \"selectedRows: \",\r\n//       selectedRows\r\n//     );\r\n//   },\r\n//   getCheckboxProps: (record) => ({\r\n//     disabled: record.name === \"Disabled User\",\r\n//     // Column configuration not to be checked\r\n//     name: record.name,\r\n//   }),\r\n// };\r\n\r\nconst DetailTable = ({ changeData, startTime, endTime }) => {\r\n  const total = changeData.length === 0 ? 0 : changeData[0].detail.length;\r\n\r\n  const dataSource =\r\n    changeData.length === 0\r\n      ? []\r\n      : changeData[0].detail.map((x, idx) => {\r\n          x.key = idx;\r\n          return x;\r\n        });\r\n  //const [selectionType, setSelectionType] = useState(\"checkbox\");\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        scroll={{ x: \"100%\" }}\r\n        style={{\r\n          width: \"90%\",\r\n          margin: \"auto\",\r\n          textAlign: \"center\",\r\n          borderStyle: \"solid\",\r\n          borderColor: \"lightgrey\",\r\n          borderWidth: \"1px\",\r\n          marginBottom: \"50px\",\r\n          boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.26)\",\r\n        }}\r\n        // rowSelection={{\r\n        //   type: selectionType,\r\n        //   ...rowSelection,\r\n        // }}\r\n        title={() =>\r\n          changeData.length !== 0\r\n            ? changeData[0].detail.length === 0\r\n              ? `No report detail between ${startTime} - ${endTime}`\r\n              : `${changeData[0].name} Details`\r\n            : null\r\n        }\r\n        bordered\r\n        //pagination={{ pageSize: 5, position: [\"bottomCenter\"] }}\r\n        pagination={{\r\n          position: [\"bottomCenter\"],\r\n          pageSize: 8,\r\n          total: total,\r\n          showTotal: (total) => `Total ${total} files`,\r\n        }}\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        //dataSource={changeData.length === 0 ? null : changeData[0].detail}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailTable;\r\n","import React from \"react\";\r\nimport { DatePicker } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst dateOriFormat = \"YYYYMMDD\";\r\nconst dateFormat = \"YYYY-MM-DD\";\r\n\r\nconst ControlBar = ({ startTime, setStartTime, endTime, setEndTime }) => {\r\n  const handleOnChange = (text, dateStr) => {\r\n    //console.log(text, dateStr, moment(startTime, dateFormat));\r\n\r\n    // setStartTime(dateStr[0]);\r\n    // setEndTime(dateStr[1]);\r\n    if (text !== null) {\r\n      setStartTime(text[0].format(dateOriFormat));\r\n      setEndTime(text[1].format(dateOriFormat));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        float: \"right\",\r\n        margin: \"auto auto 3em auto\",\r\n        //marginBottom: \"30px\",\r\n        justifyContent: \"space-between\",\r\n        marginRight: \"5%\",\r\n      }}\r\n    >\r\n      <RangePicker\r\n        defaultValue={[\r\n          moment(startTime, dateOriFormat),\r\n          moment(endTime, dateOriFormat),\r\n        ]}\r\n        size=\"large\"\r\n        format={dateFormat}\r\n        onChange={handleOnChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlBar;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport PageHeaders from \"../components/PageHeaders\";\r\nimport DataTable from \"../components/DataTable\";\r\nimport DetailTable from \"../components/DetailTable\";\r\nimport ControlBar from \"../components/ControlBar\";\r\nimport { getReportListDataApi, refreshTokenApi } from \"../../api-list/api-list\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport {\r\n  getAuthToken,\r\n  removeAuthToken,\r\n  setAuthToken,\r\n} from \"../../shared/util/getAuth\";\r\nimport { message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router\";\r\nconst dateFormat = \"YYYYMMDD\";\r\n\r\nconst Report = ({\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  setUserDepartment,\r\n}) => {\r\n  const auth = useContext(AuthContext);\r\n  const [listData, setListData] = useState([]);\r\n  const [changeData, setChangeData] = useState([]);\r\n  const [startTime, setStartTime] = useState(\r\n    moment().subtract(30, \"days\").format(dateFormat)\r\n  );\r\n  const [endTime, setEndTime] = useState(moment().format(dateFormat));\r\n  const history = useHistory();\r\n  // const [fetchData] = useGetData(\r\n  //   getReportListDataApi(\"Admin\", 20010701, 20211123)\r\n  // );\r\n\r\n  // let reportList = [];\r\n  // if (fetchData) {\r\n  //   reportList = fetchData.data;\r\n  // }\r\n  const [nongId, setNongId] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const getReportsList = async () => {\r\n      //Event.preventDefault();\r\n      try {\r\n        const res = await getReportListDataApi(\r\n          //auth.Role,\r\n          startTime,\r\n          endTime\r\n        ).get(\"\", config);\r\n\r\n        if (res.data) {\r\n          // console.log(res.data);\r\n          setNongId([]);\r\n          setChangeData([]);\r\n\r\n          // const arr = res.data.data.map((x, idx) => {\r\n          //   x.key = idx;\r\n          //   return x;\r\n          // });\r\n          //console.log(arr);\r\n          setListData(res.data.data);\r\n          //return res.data.Path;\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        if (err.response.status === 401) {\r\n          removeAuthToken();\r\n          message.info(\"驗證過期，請重新登入\");\r\n          setUserData(null);\r\n          setIsLoggedIn(false);\r\n          setUserDepartment(null);\r\n          setUserRole(null);\r\n          history.push(\"/\");\r\n        }\r\n        /*\r\n        if (err.response.status === 401) {\r\n          try {\r\n            await refreshTokenApi\r\n              .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n              .then((res) => {\r\n                //console.log(res.data);\r\n                setAuthToken(res.data.AccessToken);\r\n              })\r\n              .catch((errs) => {\r\n                //console.log(errs.response);\r\n                if (errs.response.status === 401) {\r\n                  removeAuthToken();\r\n                  message.info(\"驗證過期，請重新登入\");\r\n                  setUserData(null);\r\n                  setIsLoggedIn(false);\r\n                  setUserRole(null);\r\n                  history.push(\"/\");\r\n                  //return Promise.reject(err);\r\n                }\r\n              });\r\n          \r\n          } catch (_err) {\r\n            console.log(_err);\r\n          }\r\n        }*/\r\n      }\r\n    };\r\n    getReportsList();\r\n  }, [\r\n    startTime,\r\n    endTime,\r\n    auth,\r\n    history,\r\n    setUserData,\r\n    setIsLoggedIn,\r\n    setUserRole,\r\n    setUserDepartment,\r\n  ]);\r\n  //console.log(changeData);\r\n\r\n  return (\r\n    <div style={{ width: \"90%\" }}>\r\n      <div style={{ display: \"flex\" }}>\r\n        <PageHeaders title={\"Report\"} back={false} />\r\n        {/* <Divider style={{ marginBottom: \"30px\", width: \"50%\" }} /> */}\r\n        {/* <Divider style={{ margin: \"30px\", borderColor: \"lightgrey\" }} /> */}\r\n        <ControlBar\r\n          startTime={startTime}\r\n          setStartTime={setStartTime}\r\n          endTime={endTime}\r\n          setEndTime={setEndTime}\r\n        />\r\n      </div>\r\n      <DataTable\r\n        data={listData}\r\n        setChangeData={setChangeData}\r\n        nongId={nongId}\r\n        setNongId={setNongId}\r\n      />\r\n      <DetailTable\r\n        changeData={changeData}\r\n        startTime={startTime}\r\n        endTime={endTime}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n","import React, { useState } from \"react\";\r\nimport { Tree, Typography, Card } from \"antd\";\r\n//import Card from \"../../shared/components/UIELements/Card\";\r\nconst { Title } = Typography;\r\n\r\nconst ScriptTree = ({\r\n  treeData,\r\n  setSelectedScript,\r\n  setSelectedScriptPath,\r\n  selectedScript,\r\n  selectedScriptKey,\r\n}) => {\r\n  const [showLine, setShowLine] = useState({ showLeafIcon: false });\r\n  //const [showIcon, setShowIcon] = useState(false);\r\n  //const [showLeafIcon, setShowLeafIcon] = useState(false);\r\n  const [selectedKeys, setSelectedKeys] = useState([selectedScriptKey]);\r\n  //console.log([selectedScriptKey]);\r\n  // useEffect(() => {\r\n  //   if (selectedScript !== null) {\r\n  //   }\r\n  //   // return () => {\r\n  //   //   cleanup\r\n  //   // }\r\n  // }, [input]);\r\n\r\n  const onSelect = (selectedKeys, info) => {\r\n    //console.log(\"selected\", selectedKeys);\r\n    setSelectedScript(info.node.title);\r\n    setSelectedScriptPath(info.node.value);\r\n    setSelectedKeys(selectedKeys);\r\n  };\r\n  //console.log(treeData);\r\n  /*const onSetLeafIcon = (checked) => {\r\n    setShowLeafIcon(checked);\r\n    setShowLine({\r\n      showLeafIcon: checked,\r\n    });\r\n  };*/\r\n\r\n  //const onSetShowLine = (checked) => {\r\n  //setShowLine(checked);\r\n  // setShowLine(\r\n  //   checked\r\n  //     ? {\r\n  //         showLeafIcon,\r\n  //       }\r\n  //     : false\r\n  // );\r\n  //};\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <Title level={3} /*style={{ backgroundColor: \"lightgray\" }}*/>\r\n          Select Script\r\n        </Title>\r\n      }\r\n      style={{\r\n        height: \"600px\",\r\n        width: \"30%\",\r\n        overflowY: \"auto\",\r\n        overflowX: \"auto\",\r\n        position: \"relative\",\r\n        margin: 0,\r\n        boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.26)\",\r\n        borderRadius: \"6px\",\r\n        padding: \"1rem\",\r\n        //overflow: \"hidden\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      {/* <Title level={3} style={{ backgroundColor: \"lightgray\" }}>\r\n        Select Script\r\n      </Title> */}\r\n      {/* <div\r\n        style={{\r\n          marginBottom: 16,\r\n        }}\r\n      >\r\n         showLine: <Switch checked={!!showLine} onChange={onSetShowLine} /> \r\n        <br />\r\n        <br />\r\n        showIcon: <Switch checked={showIcon} onChange={setShowIcon} />\r\n        <br /> \r\n         <br />\r\n        showLeafIcon: <Switch checked={showLeafIcon} onChange={onSetLeafIcon} /> \r\n      </div> */}\r\n      <Tree\r\n        showLine={showLine}\r\n        //showIcon={showIcon}\r\n        // defaultExpandedKeys={[\"0-0-0\"]}\r\n        //defaultSelectedKeys={[\"0-3\"]}\r\n        defaultExpandAll\r\n        //defaultSelectedKeys={[selectedScriptKey]}\r\n        onSelect={onSelect}\r\n        treeData={treeData}\r\n        selectedKeys={selectedKeys}\r\n        //treeData={ttreeData}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ScriptTree;\r\n","import React, { useState } from \"react\";\r\n//import Card from \"../../shared/components/UIELements/Card\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  Radio,\r\n  Button,\r\n  Typography,\r\n  Card,\r\n  TimePicker,\r\n  message,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport {\r\n  postSchedulerAddApi,\r\n  postSchedulerUpdateApi,\r\n  getSchedulerGrouplistApi,\r\n} from \"../../api-list/api-list\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getAuthToken, removeAuthToken } from \"../../shared/util/getAuth\";\r\nconst TimePickerStyle = styled.div`\r\n  display: flex;\r\n  margin-bottom: 3%;\r\n`;\r\n\r\nconst FontStyle = styled.div`\r\n  font-size: large;\r\n  margin: auto 5px auto 0px;\r\n`;\r\n\r\nconst format = \"HH:mm\";\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst ScriptSetting = ({\r\n  data,\r\n  type,\r\n  selectedScript,\r\n  selectedScriptPath,\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  groupData,\r\n  //fetchingDataAsync,\r\n}) => {\r\n  const [descriptName, setDescriptName] = useState(\r\n    data.length !== 0 ? data[0].name : \"\"\r\n  );\r\n\r\n  const [dayIndex, setDayIndex] = useState(\r\n    data.length !== 0 ? data[0].dayindex : []\r\n  );\r\n  //const [hour, setHour] = useState();\r\n  const [value, setValue] = useState(\r\n    data.length !== 0 ? data[0].frequency : \"By day\"\r\n  );\r\n  const [time, setTime] = useState(\r\n    data.length !== 0 ? data[0].timesetting : \"00:00\"\r\n  );\r\n\r\n  const [department, setDepartment] = useState(\r\n    data.length !== 0 ? data[0].department : \"\"\r\n  );\r\n  const [group, setGroup] = useState(data.length !== 0 ? data[0].group : \"\");\r\n\r\n  const handleOnTime = (time, str) => {\r\n    //console.log(time, str);\r\n    if (str !== \"\") setTime(str);\r\n    else setTime(\"00:00\");\r\n  };\r\n\r\n  function handleChange(value) {\r\n    //console.log(`selected ${value}`);\r\n    setDayIndex(value);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    //console.log(\"radio checked\", e.target.value);\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  // const onHourChange = (e) => {\r\n  //   //console.log(\"hour:\", e.target.value);\r\n  //   setHour(e.target.value);\r\n  //   //setValue(e.target.value);\r\n  // };\r\n  const history = useHistory();\r\n  const handleOnSave = async (e) => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    if (selectedScript === \"\") {\r\n      message.warning(\"請選擇Script\");\r\n    } else if (descriptName === \"\") {\r\n      message.warning(\"請輸入Description Name\");\r\n    } else if (department === \"\") {\r\n      message.warning(\"請選擇Department名稱\");\r\n    } else if (group === \"\") {\r\n      message.warning(`請選擇Group名稱(若無Group選項請洽管理員)`);\r\n    } else {\r\n      if (type === \"add\") {\r\n        const postJson = {\r\n          name: descriptName,\r\n          script: selectedScript,\r\n          frequency: value,\r\n          scriptpath: selectedScriptPath,\r\n          dayindex: value === \"By day\" ? [] : dayIndex,\r\n          timesetting: time,\r\n          department: department,\r\n          group: group,\r\n        };\r\n        try {\r\n          await postSchedulerAddApi\r\n            .post(\"\", postJson, config)\r\n            .then((ress) => {\r\n              //console.log(ress.data);\r\n              if (type === \"edit\") message.success(\"修改成功\");\r\n              else message.success(\"新增成功\");\r\n\r\n              history.push(\"/scheduler\");\r\n              // fetchingDataAsync();\r\n              //if (ress.data !== \"\") setRows(ress.data);\r\n              /*setTimeout(() => {\r\n                handleOnCancel();\r\n              }, 3000)*/\r\n            })\r\n            .catch((err) => {\r\n              //setStatusCheck(false)\r\n              message.error(\"新增異常!\" + err);\r\n              console.log(err);\r\n              if (err.response.status === 401) {\r\n                removeAuthToken();\r\n                message.info(\"驗證過期，請重新登入\");\r\n                setUserData(null);\r\n                setIsLoggedIn(false);\r\n                setUserRole(null);\r\n                history.push(\"/\");\r\n              }\r\n            });\r\n        } catch (e) {\r\n          message.error(\"新增異常(\" + e + \")，請稍後再試\");\r\n          console.log(e);\r\n        }\r\n      } else {\r\n        const postJson = {\r\n          id: data[0].id,\r\n          name: data.length !== 0 ? data[0].name : \"\",\r\n          editname: descriptName,\r\n          script: selectedScript,\r\n          frequency: value,\r\n          scriptpath: selectedScriptPath,\r\n          dayindex: value === \"By day\" ? [] : dayIndex,\r\n          timesetting: time,\r\n          department: department,\r\n          group: group,\r\n        };\r\n        try {\r\n          await postSchedulerUpdateApi\r\n            .post(\"\", postJson, config)\r\n            .then((ress) => {\r\n              //console.log(ress.data);\r\n              if (type === \"edit\") message.success(\"修改成功\");\r\n              else message.success(\"新增成功\");\r\n\r\n              history.push(\"/scheduler\");\r\n              // fetchingDataAsync();\r\n              //if (ress.data !== \"\") setRows(ress.data);\r\n              /*setTimeout(() => {\r\n                handleOnCancel();\r\n              }, 3000)*/\r\n            })\r\n            .catch((err) => {\r\n              //setStatusCheck(false)\r\n              message.error(\"新增異常!\" + err);\r\n              console.log(err);\r\n              if (err.response.status === 401) {\r\n                removeAuthToken();\r\n                message.info(\"驗證過期，請重新登入\");\r\n                setUserData(null);\r\n                setIsLoggedIn(false);\r\n                setUserRole(null);\r\n                history.push(\"/\");\r\n              }\r\n            });\r\n        } catch (e) {\r\n          message.error(\"新增異常(\" + e + \")，請稍後再試\");\r\n          console.log(e);\r\n        }\r\n      }\r\n    }\r\n    //console.log(postJson);\r\n  };\r\n\r\n  const children = [];\r\n  for (let i = 1; i < 32; i++) {\r\n    children.push(<Option key={i.toString()}>{i.toString()}</Option>);\r\n  }\r\n\r\n  const handleDep = (value) => {\r\n    setDepartment(value);\r\n  };\r\n  const handleGrp = (value) => {\r\n    setGroup(value);\r\n  };\r\n  return (\r\n    <Card\r\n      //title=\"Script Schedule Setting\"\r\n      title={\r\n        <Title level={3} /*style={{ backgroundColor: \"lightgray\" }}*/>\r\n          Script Schedule Setting\r\n        </Title>\r\n      }\r\n      style={{\r\n        width: \"60%\",\r\n        paddingRight: \"50px\",\r\n        paddinLeft: \"50px\",\r\n        paddingBottom: \"50px\",\r\n        position: \"relative\",\r\n        margin: 0,\r\n        boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.26)\",\r\n        borderRadius: \"6px\",\r\n        padding: \"1rem\",\r\n        overflow: \"hidden\",\r\n        background: \"white\",\r\n        overflowY: \"auto\",\r\n        //backgroundColor: \"lightgray\",\r\n      }}\r\n    >\r\n      {/* <Title level={3} style={{ backgroundColor: \"lightgray\" }}>\r\n        Script Schedule Setting\r\n      </Title> */}\r\n      <div style={{ display: \"flex\" }}>\r\n        <h3 style={{ flexGrow: 0.5 }}>Department</h3>\r\n        <h3 style={{ flexGrow: 0.5 }}>Group</h3>\r\n      </div>\r\n      <div style={{ marginBottom: \"7%\", display: \"flex\" }}>\r\n        <Select\r\n          placeholder=\"department\"\r\n          size=\"large\"\r\n          //defaultValue=\"lucy\"\r\n          style={{ flexGrow: 0.5, border: \"0.1px solid lightgray\" }}\r\n          onChange={handleDep}\r\n          value={department}\r\n          //bordered={true}\r\n        >\r\n          {groupData.map((x) => (\r\n            <Option value={x.departmentname}>{x.departmentname}</Option>\r\n          ))}\r\n        </Select>\r\n        <Select\r\n          placeholder=\"group\"\r\n          size=\"large\"\r\n          //defaultValue=\"lucy\"\r\n          style={{ flexGrow: 0.5, border: \"0.1px solid lightgray\" }}\r\n          onChange={handleGrp}\r\n          value={group}\r\n          //bordered={true}\r\n        >\r\n          {groupData\r\n            .filter((x) => x.departmentname === department && department !== \"\")\r\n            .map((x) => x.grouplist.map((y) => <Option value={y}>{y}</Option>))}\r\n        </Select>\r\n        {/* {groupData.map((x) => (\r\n          <Select\r\n            placeholder=\"\"\r\n            size=\"large\"\r\n            //defaultValue=\"lucy\"\r\n            style={{ width: 120 }}\r\n            onChange={handleChange}\r\n            //value={x.}\r\n          >\r\n            {x.grouplist.map((y) => (\r\n              <Option value={y}>{y}</Option>\r\n            ))}\r\n          </Select>\r\n        ))} */}\r\n\r\n        {/* <Input\r\n          size=\"large\"\r\n          addonBefore=\"Department\"\r\n          //placeholder=\"Please input description name\"\r\n          //defaultValue={data.length !== 0 ? data[0].Description : \"\"}\r\n          //value={descriptName}\r\n          onChange={(e) => setDescriptName(e.target.value)}\r\n        /> */}\r\n        {/* <Input\r\n          size=\"large\"\r\n          addonBefore=\"Group\"\r\n          //placeholder=\"Please input description name\"\r\n          //defaultValue={data.length !== 0 ? data[0].Description : \"\"}\r\n          //value={descriptName}\r\n          onChange={(e) => setDescriptName(e.target.value)}\r\n        /> */}\r\n      </div>\r\n      <h3>Description Name</h3>\r\n      <div style={{ marginBottom: \"7%\" }}>\r\n        <Input\r\n          size=\"large\"\r\n          addonBefore=\"Description Name\"\r\n          placeholder=\"Please input description name\"\r\n          //defaultValue={data.length !== 0 ? data[0].Description : \"\"}\r\n          value={descriptName}\r\n          onChange={(e) => setDescriptName(e.target.value)}\r\n        />\r\n      </div>\r\n      <h3>Frequency</h3>\r\n      <div style={{ marginBottom: \"7%\" }}>\r\n        <Radio.Group onChange={onChange} value={value} size=\"large\">\r\n          <Radio style={{ fontSize: \"16px\" }} value={\"By day\"}>\r\n            By Day\r\n          </Radio>\r\n          <Radio style={{ fontSize: \"16px\" }} value={\"By week\"}>\r\n            By Week\r\n          </Radio>\r\n          <Radio style={{ fontSize: \"16px\" }} value={\"By month\"}>\r\n            By Month\r\n          </Radio>\r\n        </Radio.Group>\r\n      </div>\r\n      <h3>Time Setting</h3>\r\n      <div style={{ marginBottom: \"5%\" }}>\r\n        {value === \"By day\" && (\r\n          <TimePickerStyle>\r\n            <TimePicker\r\n              style={{ flexBasis: \"40%\" }}\r\n              // defaultValue={moment(\"12:00\", format)}\r\n              // format={format}\r\n              // onChange={handleOnTime}\r\n              // value={time}\r\n              //defaultValue={moment(time, format)}\r\n              format={format}\r\n              onChange={handleOnTime}\r\n              value={moment(time, format)}\r\n              size=\"large\"\r\n            />\r\n          </TimePickerStyle>\r\n        )}\r\n        {value === \"By week\" && (\r\n          <TimePickerStyle>\r\n            <FontStyle>每周&nbsp;&nbsp;</FontStyle>\r\n            <Select\r\n              mode=\"multiple\"\r\n              placeholder=\"\"\r\n              //defaultValue=\"mon\"\r\n              value={dayIndex}\r\n              style={{ flexBasis: \"50%\", border: \"1px solid #d9d9d9\" }}\r\n              onChange={handleChange}\r\n              size=\"large\"\r\n              optionLabelProp=\"label\"\r\n            >\r\n              <Option value=\"1\" label=\"Mon.\">\r\n                Monday (Mon.)\r\n              </Option>\r\n              <Option value=\"2\" label=\"Tue.\">\r\n                Tuesday (Tue.)\r\n              </Option>\r\n              <Option value=\"3\" label=\"Wed.\">\r\n                Wednesday (Wed.)\r\n              </Option>\r\n              <Option value=\"4\" label=\"Thur.\">\r\n                Thursday (Thur.)\r\n              </Option>\r\n              <Option value=\"5\" label=\"Fri.\">\r\n                Friday (Fri.)\r\n              </Option>\r\n              <Option value=\"6\" label=\"Sat.\">\r\n                Saturday (Sat.)\r\n              </Option>\r\n              <Option value=\"7\" label=\"Sun.\">\r\n                Sunday (Sun.)\r\n              </Option>\r\n            </Select>\r\n            &nbsp;&nbsp;\r\n            <TimePicker\r\n              style={{ flexBasis: \"35%\" }}\r\n              //defaultValue={moment(time, format)}\r\n              format={format}\r\n              onChange={handleOnTime}\r\n              value={moment(time, format)}\r\n              // value={moment(time, format)}\r\n              size=\"large\"\r\n            />\r\n          </TimePickerStyle>\r\n        )}\r\n        {value === \"By month\" && (\r\n          <div\r\n            style={{\r\n              marginBottom: \"3%\",\r\n              display: \"flex\",\r\n              flexWrap: \"nowrap\",\r\n            }}\r\n          >\r\n            <FontStyle>每月第&nbsp;&nbsp;</FontStyle>\r\n            <Select\r\n              mode=\"multiple\"\r\n              //defaultValue=\"mon\"\r\n              style={{ flexBasis: \"45%\", border: \"1px solid #d9d9d9\" }}\r\n              onChange={handleChange}\r\n              size=\"large\"\r\n              optionLabelProp=\"label\"\r\n              value={dayIndex}\r\n            >\r\n              {children}\r\n            </Select>\r\n            <FontStyle>&nbsp;&nbsp;天&nbsp;&nbsp;&nbsp;&nbsp;</FontStyle>\r\n            <TimePicker\r\n              style={{ flexBasis: \"35%\" }}\r\n              // defaultValue={moment(\"12:00\", format)}\r\n              // format={format}\r\n              // onChange={handleOnTime}\r\n              // value={time}\r\n              //defaultValue={moment(time, format)}\r\n              format={format}\r\n              onChange={handleOnTime}\r\n              value={moment(time, format)}\r\n              size=\"large\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <footer style={{ float: \"right\" }}>\r\n        <Button\r\n          size=\"large\"\r\n          onClick={() => history.push(\"/scheduler\")}\r\n          style={{\r\n            backgroundColor: \"gray\",\r\n            borderRadius: \"5px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        {/* <Link to=\"/scheduler\" onClick={() => handleOnSave()} > */}\r\n        <Button\r\n          size=\"large\"\r\n          key=\"3\"\r\n          onClick={() => handleOnSave()}\r\n          style={{\r\n            backgroundColor: \"#1CC153\",\r\n            borderRadius: \"5px\",\r\n            color: \"white\",\r\n          }}\r\n          disabled={\r\n            type === \"add\" && selectedScript === \"\" && descriptName === \"\"\r\n          }\r\n        >\r\n          {type === \"edit\" ? \"Save\" : \"Add Schedule\"}\r\n        </Button>\r\n        {/* </Link> */}\r\n        {/*type === \"edit\" ? (\r\n          <Button\r\n            size=\"large\"\r\n            key=\"3\"\r\n            style={{\r\n              backgroundColor: \"#1CC153\",\r\n              borderRadius: \"5px\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={() => handleOnSave()}\r\n          >\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            size=\"large\"\r\n            key=\"3\"\r\n            style={{\r\n              backgroundColor: \"#1CC153\",\r\n              borderRadius: \"5px\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={() => handleOnSave()}\r\n          >\r\n            Add Schedule\r\n          </Button>\r\n        )*/}\r\n      </footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ScriptSetting;\r\n","import React from \"react\";\r\nimport { PageHeader, Descriptions } from \"antd\";\r\n\r\nimport Breadcrumbs from \"./Breadcrumbs\";\r\n\r\nconst PageHeadersSub = ({ title }) => {\r\n  return (\r\n    <PageHeader\r\n      style={{\r\n        width: \"90%\",\r\n        margin: \"auto\",\r\n        //borderStyle: \"solid\",\r\n        //borderWidth: \"0.5px\",\r\n        //borderColor: \"lightgrey\",\r\n      }}\r\n      onBack={() => window.history.back()}\r\n      //tags={<Tag color=\"blue\">{title.split(\"-\")[1]}</Tag>}\r\n      //className=\"site-page-header\"\r\n      // onBack={() => window.history.back()}\r\n      title={<h2>{title}</h2>}\r\n      //subTitle=\"This is a subtitle\"\r\n      // extra={[\r\n      //   <NavLink to=\"/scheduler/add\">\r\n      //     <Button\r\n      //       size=\"large\"\r\n      //       key=\"3\"\r\n      //       style={{\r\n      //         backgroundColor: \"#1CC153\",\r\n      //         borderRadius: \"10px\",\r\n      //         color: \"white\",\r\n      //       }}\r\n      //     >\r\n      //       ADD\r\n      //     </Button>\r\n      //   </NavLink>,\r\n      //   <NavLink to=\"/scheduler/edit\">\r\n      //     <Button\r\n      //       size=\"large\"\r\n      //       key=\"2\"\r\n      //       type=\"primary\"\r\n      //       style={{ borderRadius: \"10px\" }}\r\n      //     >\r\n      //       EDIT\r\n      //     </Button>\r\n      //   </NavLink>,\r\n      //   <Button\r\n      //     size=\"large\"\r\n      //     key=\"1\"\r\n      //     type=\"danger\"\r\n      //     style={{ borderRadius: \"10px\" }}\r\n      //   >\r\n      //     DELETE\r\n      //   </Button>,\r\n      // ]}\r\n    >\r\n      <Descriptions size=\"small\" column={2}>\r\n        <Descriptions.Item>\r\n          <Breadcrumbs title={title} />\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default PageHeadersSub;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getAuthToken,\r\n  setAuthToken,\r\n  removeAuthToken,\r\n} from \"../../shared/util/getAuth\";\r\nimport ScriptTree from \"../components/ScriptTree\";\r\nimport ScriptSetting from \"../components/ScriptSetting\";\r\nimport PageHeadersSub from \"../components/PageHeadersSub\";\r\nimport {\r\n  getSchedulerTreeDataApi,\r\n  getSchedulerGrouplistApi,\r\n} from \"../../api-list/api-list\";\r\nimport { useGetData } from \"../../shared/hooks/get-hooks\";\r\nimport WithSpinner from \"../../shared/components/UIELements/WithSpinner\";\r\nconst ScriptSettingWithSpinner = WithSpinner(ScriptSetting);\r\nconst SchedulerAdd = (props) => {\r\n  let treeData = [];\r\n  const [groupData, setGroupData] = useState();\r\n  const [selectedScript, setSelectedScript] = useState(\"\");\r\n  const [selectedScriptPath, setSelectedScriptPath] = useState(\"\");\r\n  const [selectedScriptKey, setSelectedScriptKey] = useState(\"\");\r\n  const [fetchData] = useGetData(getSchedulerTreeDataApi);\r\n  //const [fetchGroupData] = useGetData(getSchedulerGrouplistApi);\r\n  if (fetchData) {\r\n    treeData = fetchData.children;\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      const getGroupInfoList = async () => {\r\n        const token = getAuthToken();\r\n        const config = {\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n        try {\r\n          const res = await getSchedulerGrouplistApi.get(\"\", config);\r\n          if (res.data) {\r\n            setGroupData(res.data.departmentlist);\r\n          }\r\n        } catch (err) {\r\n          console.log(err.response);\r\n          //message.info(\"驗證過期，請重新登入\");\r\n          //history.push(\"/auth\");\r\n          //auth.isLoggedIn\r\n          //auth.logout();\r\n          //RefreshToken(\"test\", \"test\");\r\n          /*setUserData(null);\r\n            setIsLoggedIn(false);\r\n            setUserRole(null);\r\n            history.push(\"/\");*/\r\n\r\n          // if (err.response.status === 401) {\r\n          //   try {\r\n          //     await refreshTokenApi\r\n          //       .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n          //       .then((res) => {\r\n          //         //console.log(res.data);\r\n          //         setAuthToken(res.data.AccessToken);\r\n          //       })\r\n          //       .catch((errs) => {\r\n          //         //console.log(errs.response);\r\n          //         if (errs.response.status === 401) {\r\n          //           removeAuthToken();\r\n          //           message.info(\"驗證過期，請重新登入\");\r\n          //           setUserData(null);\r\n          //           setIsLoggedIn(false);\r\n          //           setUserRole(null);\r\n          //           history.push(\"/\");\r\n          //           //return Promise.reject(err);\r\n          //         }\r\n          //       });\r\n          //     /*if (res) setAuthToken(res.data.AccessToken);\r\n          //       else setAuthToken(\"\");*/\r\n          //   } catch (_err) {\r\n          //     console.log(_err);\r\n          //   }\r\n          // }\r\n        }\r\n      };\r\n      getGroupInfoList();\r\n    },\r\n    [\r\n      // setUserData,\r\n      // history,\r\n      // setIsLoggedIn,\r\n      // setUserRole,\r\n      // auth.UserData.RefreshToken,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <div style={{ width: \"90%\" }}>\r\n      <PageHeadersSub title={\"Scheduler-Add\"} back={true} />\r\n      {/* <Divider style={{ marginBottom: \"30px\", width: \"50%\" }} /> */}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          height: \"600px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ScriptTree\r\n          treeData={treeData}\r\n          setSelectedScript={setSelectedScript}\r\n          setSelectedScriptPath={setSelectedScriptPath}\r\n          selectedScriptKey={selectedScriptKey}\r\n        />\r\n        <ScriptSettingWithSpinner\r\n          isLoading={!!!groupData}\r\n          data={[]}\r\n          type=\"add\"\r\n          selectedScript={selectedScript}\r\n          selectedScriptPath={selectedScriptPath}\r\n          setUserData={props.setUserData}\r\n          setIsLoggedIn={props.setIsLoggedIn}\r\n          setUserRole={props.setUserRole}\r\n          groupData={groupData}\r\n          //fetchingDataAsync={props.location.state.fetchingDataAsync}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchedulerAdd;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ScriptTree from \"../components/ScriptTree\";\r\nimport ScriptSetting from \"../components/ScriptSetting\";\r\nimport PageHeadersSub from \"../components/PageHeadersSub\";\r\nimport {\r\n  getSchedulerTreeDataApi,\r\n  getSchedulerGrouplistApi,\r\n} from \"../../api-list/api-list\";\r\nimport { useGetData } from \"../../shared/hooks/get-hooks\";\r\nimport {\r\n  getAuthToken,\r\n  setAuthToken,\r\n  removeAuthToken,\r\n} from \"../../shared/util/getAuth\";\r\nimport WithSpinner from \"../../shared/components/UIELements/WithSpinner\";\r\nconst ScriptSettingWithSpinner = WithSpinner(ScriptSetting);\r\n\r\nconst SchedulerEdit = (props) => {\r\n  const [groupData, setGroupData] = useState();\r\n  let treeData = [];\r\n  // const [selectedScriptKey, setSelectedScriptKey] = useState(\r\n  //   props.location.state.changeData[0].scriptkey\r\n  // );\r\n\r\n  const [selectedScript, setSelectedScript] = useState(\r\n    props.location.state.changeData[0].script\r\n  );\r\n  const [selectedScriptPath, setSelectedScriptPath] = useState(\r\n    props.location.state.changeData[0].scriptpath\r\n  );\r\n  const [fetchData] = useGetData(getSchedulerTreeDataApi);\r\n  if (fetchData) {\r\n    treeData = fetchData.children;\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      const getGroupInfoList = async () => {\r\n        const token = getAuthToken();\r\n        const config = {\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n        try {\r\n          const res = await getSchedulerGrouplistApi.get(\"\", config);\r\n          if (res.data) {\r\n            setGroupData(res.data.departmentlist);\r\n          }\r\n        } catch (err) {\r\n          console.log(err.response);\r\n          //message.info(\"驗證過期，請重新登入\");\r\n          //history.push(\"/auth\");\r\n          //auth.isLoggedIn\r\n          //auth.logout();\r\n          //RefreshToken(\"test\", \"test\");\r\n          /*setUserData(null);\r\n            setIsLoggedIn(false);\r\n            setUserRole(null);\r\n            history.push(\"/\");*/\r\n\r\n          // if (err.response.status === 401) {\r\n          //   try {\r\n          //     await refreshTokenApi\r\n          //       .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n          //       .then((res) => {\r\n          //         //console.log(res.data);\r\n          //         setAuthToken(res.data.AccessToken);\r\n          //       })\r\n          //       .catch((errs) => {\r\n          //         //console.log(errs.response);\r\n          //         if (errs.response.status === 401) {\r\n          //           removeAuthToken();\r\n          //           message.info(\"驗證過期，請重新登入\");\r\n          //           setUserData(null);\r\n          //           setIsLoggedIn(false);\r\n          //           setUserRole(null);\r\n          //           history.push(\"/\");\r\n          //           //return Promise.reject(err);\r\n          //         }\r\n          //       });\r\n          //     /*if (res) setAuthToken(res.data.AccessToken);\r\n          //       else setAuthToken(\"\");*/\r\n          //   } catch (_err) {\r\n          //     console.log(_err);\r\n          //   }\r\n          // }\r\n        }\r\n      };\r\n      getGroupInfoList();\r\n    },\r\n    [\r\n      // setUserData,\r\n      // history,\r\n      // setIsLoggedIn,\r\n      // setUserRole,\r\n      // auth.UserData.RefreshToken,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <div style={{ width: \"90%\" }}>\r\n      <PageHeadersSub title={\"Scheduler-Edit\"} back={true} />\r\n      {/* <Divider style={{ marginBottom: \"30px\", width: \"50%\" }} /> */}\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", height: \"600px\" }}\r\n      >\r\n        <ScriptTree\r\n          treeData={treeData}\r\n          setSelectedScript={setSelectedScript}\r\n          setSelectedScriptPath={setSelectedScriptPath}\r\n          selectedScript={selectedScript}\r\n          //setSelectedScriptKey={setSelectedScriptKey}\r\n          selectedScriptKey={props.location.state.changeData[0].scriptkey}\r\n        />\r\n        <ScriptSettingWithSpinner\r\n          isLoading={!!!groupData}\r\n          data={props.location.state.changeData}\r\n          type=\"edit\"\r\n          selectedScript={selectedScript}\r\n          selectedScriptPath={selectedScriptPath}\r\n          setUserData={props.setUserData}\r\n          setIsLoggedIn={props.setIsLoggedIn}\r\n          setUserRole={props.setUserRole}\r\n          groupData={groupData}\r\n          //fetchingDataAsync={props.location.state.fetchingDataAsync}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchedulerEdit;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Table, Input, Space, Button } from \"antd\";\r\nimport FormData from \"./FormData\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { getUserInfoApi, getGroupInfoApi } from \"../../api-list/api-list\";\r\nimport {\r\n  getAuthToken,\r\n  setAuthToken,\r\n  removeAuthToken,\r\n} from \"../../shared/util/getAuth\";\r\nimport WithSpinner from \"../../shared/components/UIELements/WithSpinner\";\r\nconst FormDataWithSpinner = WithSpinner(FormData);\r\n\r\nfunction onlyUnique(value, index, self) {\r\n  return self.indexOf(value) === index;\r\n}\r\n\r\nconst DataTable = ({\r\n  setChangeData,\r\n  scheduleData,\r\n  setUseInfo,\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  setUserDepartment,\r\n}) => {\r\n  let uniqueGroup = scheduleData\r\n    .map((x) => x.department)\r\n    .filter(onlyUnique)\r\n    .map((x) => ({\r\n      text: x,\r\n      value: x,\r\n    }));\r\n  ///const [selectionType, setSelectionType] = useState(\"radio\");\r\n  const total = scheduleData.length;\r\n  const [groupInfo, setGroupInfo] = useState();\r\n  // const [nongId, setNongId] = useState([]);\r\n  // const userRoleData = scheduleData\r\n  //   .map((x) => ({ [x.account]: x.department }))\r\n  //   .reduce((a, b) => {\r\n  //     return Object.assign(a, b);\r\n  //   });\r\n\r\n  //const [userRole, setUserRole] = useState(userRoleData);\r\n\r\n  // const checkData = scheduleData\r\n  //   .map((x) => ({ [x.account]: x.check }))\r\n  //   .reduce((a, b) => {\r\n  //     return Object.assign(a, b);\r\n  //   });\r\n\r\n  //const [checked, setChecked] = useState(checkData);\r\n\r\n  const [ModalOpen, setModalOpen] = useState(false);\r\n\r\n  const [editData, setEditData] = useState({\r\n    account: \"\",\r\n    department: \"\",\r\n    check: false,\r\n  });\r\n  //const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  // const rowSelection = {\r\n  //   selectedRowKeys: nongId,\r\n  //   selectedRows: [],\r\n  //   onChange: (selectedRowKeys, selectedRows) => {\r\n  //     //console.log(selectedRowKeys);\r\n  //     setChangeData(selectedRows);\r\n  //     setNongId(selectedRowKeys);\r\n  //     //   console.log(\r\n  //     //     record,\r\n  //     //     `selectedRowKeys: ${selectedRowKeys}`,\r\n  //     //     \"selectedRows: \",\r\n  //     //     selectedRows\r\n  //     //   );\r\n  //   },\r\n  //   // onSelect: (record, selected, selectedRows, nativeEvent) => {\r\n  //   //   console.log(record, selected, selectedRows, nativeEvent);\r\n  //   // },\r\n  //   // getCheckboxProps: (record) => ({\r\n  //   //   disabled: record.name === \"Disabled User\",\r\n  //   //   // Column configuration not to be checked\r\n  //   //   name: record.name,\r\n  //   // }),\r\n  // };\r\n  // //selectedRowKeys\r\n\r\n  // const handleChange = (text, record) => {\r\n  //   //console.log(text, record);\r\n  //   setUserRole({ ...userRole, [record.account]: text });\r\n  // };\r\n\r\n  // const handleOnClick = (e) => {\r\n  //   //console.log(checked);\r\n  //   setChecked({ ...checked, [e.target.name]: e.target.checked });\r\n  //   //handleOnSendCheck(e);\r\n  // };\r\n\r\n  // const handleOnSendCheck = async (e) => {\r\n  //   const postJson = {\r\n  //     account: e.target.name,\r\n  //     department: userRole[e.target.name],\r\n  //     check: e.target.checked, //checked[name],\r\n  //   };\r\n  //   console.log(checked, postJson);\r\n  //   //console.log(postJson);\r\n  //   try {\r\n  //     await postAuthorizeApi\r\n  //       .post(\"\", postJson)\r\n  //       .then((ress) => {\r\n  //         //console.log(ress.data);\r\n  //         getUserInfoList();\r\n  //         //fetchingDataAsync();\r\n\r\n  //         /*setTimeout(() => {\r\n  //           handleOnCancel();\r\n  //         }, 3000)*/\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         //setStatusCheck(false)\r\n  //         console.log(err);\r\n  //       });\r\n  //   } catch (e) {\r\n  //     console.log(e);\r\n  //   }\r\n  // };\r\n\r\n  const handleOnEdit = (e, record) => {\r\n    //console.log(record);\r\n    setModalOpen(true);\r\n    setEditData(record);\r\n  };\r\n\r\n  const [searchTexts, setSearchText] = useState(\"\");\r\n  const [searchedColumns, setSearchedColumn] = useState(\"\");\r\n  const searchInput = useRef(null);\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText(\"\");\r\n  };\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n              //   this.setState({\r\n              //     searchText: selectedKeys[0],\r\n              //     searchedColumn: dataIndex,\r\n              //   });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumns === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchTexts]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: \"User ID\",\r\n      dataIndex: \"account\",\r\n      ...getColumnSearchProps(\"account\"),\r\n      //render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Department\",\r\n      dataIndex: \"department\",\r\n      filters: uniqueGroup,\r\n      onFilter: (value, record) => record.department.indexOf(value) === 0,\r\n      // render: (text, record) => {\r\n      //   return (\r\n      //     <Select\r\n      //       //mode=\"multiple\"\r\n      //       placeholder=\"department\"\r\n      //       //defaultValue=\"mon\"\r\n      //       style={{ width: \"50%\" }}\r\n      //       //defaultChecked={text}\r\n      //       value={userRole[record.account]}\r\n      //       onChange={() => handleChange(text, record)}\r\n      //       size=\"large\"\r\n      //       optionLabelProp=\"label\"\r\n      //     >\r\n      //       <Option value=\"CIM\" label=\"CIM\">\r\n      //         CIM\r\n      //       </Option>\r\n      //       <Option value=\"QA\" label=\"QA\">\r\n      //         QA\r\n      //       </Option>\r\n      //       <Option value=\"Admin\" label=\"Admin\">\r\n      //         Admin\r\n      //       </Option>\r\n      //     </Select>\r\n      //   );\r\n      // },\r\n    },\r\n    {\r\n      title: \"Role\",\r\n      dataIndex: \"role\",\r\n      filters: [\r\n        {\r\n          text: \"Leader\",\r\n          value: \"Leader\",\r\n        },\r\n        {\r\n          text: \"Member\",\r\n          value: \"Member\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.role.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Group\",\r\n      dataIndex: \"group\",\r\n    },\r\n    {\r\n      title: \"Check\",\r\n      dataIndex: \"check\",\r\n      render: (text, record) => {\r\n        if (text) return <div style={{ color: \"blue\" }}>已審核</div>;\r\n        else return <div style={{ color: \"red\" }}>待審核</div>;\r\n        // return (\r\n        //   <Checkbox\r\n        //     //defaultChecked={text}\r\n        //     name={record.account}\r\n        //     checked={checked[record.account]}\r\n        //     onChange={handleOnClick}\r\n        //   />\r\n        // );\r\n      },\r\n    },\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => {\r\n        return <Button onClick={(e) => handleOnEdit(e, record)}>Edit</Button>;\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(\r\n    () => {\r\n      const token = getAuthToken();\r\n      const config = {\r\n        headers: {\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const getGroupInfoList = async () => {\r\n        //Event.preventDefault();\r\n        try {\r\n          const res = await getGroupInfoApi.get(\"\", config);\r\n          if (res.data) {\r\n            //console.log(res.data.departmentlist);\r\n            //   let userArr = res.data.departmentlist.map((x, idx) => {\r\n            //     x.key = idx;\r\n            //     return x;\r\n            //   });\r\n\r\n            setGroupInfo(res.data.departmentlist);\r\n            //return res.data.Path;\r\n          }\r\n        } catch (err) {\r\n          console.log(err.response);\r\n          //message.info(\"驗證過期，請重新登入\");\r\n          //history.push(\"/auth\");\r\n          //auth.isLoggedIn\r\n          //auth.logout();\r\n          //RefreshToken(\"test\", \"test\");\r\n          /*setUserData(null);\r\n            setIsLoggedIn(false);\r\n            setUserRole(null);\r\n            history.push(\"/\");*/\r\n\r\n          // if (err.response.status === 401) {\r\n          //   try {\r\n          //     await refreshTokenApi\r\n          //       .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n          //       .then((res) => {\r\n          //         //console.log(res.data);\r\n          //         setAuthToken(res.data.AccessToken);\r\n          //       })\r\n          //       .catch((errs) => {\r\n          //         //console.log(errs.response);\r\n          //         if (errs.response.status === 401) {\r\n          //           removeAuthToken();\r\n          //           message.info(\"驗證過期，請重新登入\");\r\n          //           setUserData(null);\r\n          //           setIsLoggedIn(false);\r\n          //           setUserRole(null);\r\n          //           history.push(\"/\");\r\n          //           //return Promise.reject(err);\r\n          //         }\r\n          //       });\r\n          //     /*if (res) setAuthToken(res.data.AccessToken);\r\n          //       else setAuthToken(\"\");*/\r\n          //   } catch (_err) {\r\n          //     console.log(_err);\r\n          //   }\r\n          // }\r\n        }\r\n      };\r\n      getGroupInfoList();\r\n    },\r\n    [\r\n      // setUserData,\r\n      // history,\r\n      // setIsLoggedIn,\r\n      // setUserRole,\r\n      // auth.UserData.RefreshToken,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        scroll={{ x: \"100%\" }}\r\n        style={{\r\n          width: \"90%\",\r\n          margin: \"auto\",\r\n          textAlign: \"center\",\r\n          borderStyle: \"solid\",\r\n          borderColor: \"lightgrey\",\r\n          borderWidth: \"1px\",\r\n          marginBottom: \"50px\",\r\n          boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.26)\",\r\n        }}\r\n        // rowSelection={{\r\n        //   type: selectionType,\r\n        //   ...rowSelection,\r\n        // }}\r\n        pagination={{\r\n          position: [\"bottomCenter\"],\r\n          pageSize: 8,\r\n          total: total,\r\n          showTotal: (total) => `Total ${total} members`,\r\n        }}\r\n        columns={columns}\r\n        dataSource={scheduleData}\r\n        rowKey={(record) => record.key}\r\n        // onRow={(record) => ({\r\n        //   onClick: () => {\r\n        //     //console.log(record.key);\r\n        //     setNongId([record.key]);\r\n        //     setChangeData([record]);\r\n        //   },\r\n        // })}\r\n      />\r\n\r\n      <FormDataWithSpinner\r\n        isLoading={!!!groupInfo}\r\n        editData={editData}\r\n        ModalOpen={ModalOpen}\r\n        setModalOpen={setModalOpen}\r\n        setUseInfo={setUseInfo}\r\n        setUserData={setUserData}\r\n        setIsLoggedIn={setIsLoggedIn}\r\n        setUserRole={setUserRole}\r\n        groupInfo={groupInfo}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Radio,\r\n  Form,\r\n  Select,\r\n  Modal,\r\n  Input,\r\n  message,\r\n  Tooltip,\r\n  Typography,\r\n  Space,\r\n} from \"antd\";\r\nimport { postAuthorizeApi, getUserInfoApi } from \"../../api-list/api-list\";\r\nimport { getAuthToken, removeAuthToken } from \"../../shared/util/getAuth\";\r\nimport \"./FormData.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst FormData = ({\r\n  editData,\r\n  setUseInfo,\r\n  ModalOpen,\r\n  setModalOpen,\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  groupInfo,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  //form.setFieldsValue(editData);\r\n  useEffect(() => {\r\n    form.setFieldsValue(editData);\r\n  }, [editData, form, ModalOpen]);\r\n  //form.setFieldsValue(editData);\r\n  const auth = useContext(AuthContext);\r\n  //const [department, setDepartment] = useState(\"\");\r\n  const [disabledRole, setDisabledRole] = useState(false);\r\n  const [disabledGroup, setDisabledGroup] = useState(false);\r\n  const history = useHistory();\r\n  const token = getAuthToken();\r\n  const config = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  const handleOk = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        //console.log(values);\r\n        handleOnSendCheck(values);\r\n        //   values.WeightDate = woDateTime;\r\n        //   values.WeightTest = values.ProcTest;\r\n        //   values.WeightResult = values.ProcResult;\r\n        //   values.WeightSigner = auth.account;\r\n\r\n        //Object去重複\r\n        // let aa = Object.keys(values)\r\n        //   .filter((x) => x !== \"ProcTest\" && x !== \"ProcResult\")\r\n        //   .reduce((obj, key) => {\r\n        //     obj[key] = values[key];\r\n        //     return obj;\r\n        //   }, {});\r\n\r\n        // form.resetFields();\r\n        //setIsModalVisible(false);\r\n        //handleOnExcute(aa);\r\n      })\r\n      .catch((info) => {\r\n        console.log(\"Validate Failed:\", info);\r\n      });\r\n  };\r\n\r\n  const handleOnSendCheck = async (values) => {\r\n    //const postJson = values\r\n    //console.log(checked, postJson);\r\n    //console.log(postJson);\r\n    //if(values.group)\r\n    try {\r\n      await postAuthorizeApi\r\n        .post(\"\", values, config)\r\n        .then((ress) => {\r\n          //console.log(ress.data);\r\n          getUserInfoList();\r\n          setModalOpen(false);\r\n          //fetchingDataAsync();\r\n\r\n          /*setTimeout(() => {\r\n            handleOnCancel();\r\n          }, 3000)*/\r\n        })\r\n        .catch((err) => {\r\n          //setStatusCheck(false)\r\n          console.log(err);\r\n          if (err.response.status === 401) {\r\n            removeAuthToken();\r\n            message.info(\"驗證過期，請重新登入\");\r\n            setUserData(null);\r\n            setIsLoggedIn(false);\r\n            setUserRole(null);\r\n            history.push(\"/\");\r\n          }\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getUserInfoList = async () => {\r\n    //Event.preventDefault();\r\n    try {\r\n      const res = await getUserInfoApi.get(\"\", config);\r\n      if (res.data) {\r\n        // console.log(res.data);\r\n        let userArr = res.data.users.map((x, idx) => {\r\n          x.key = idx;\r\n          return x;\r\n        });\r\n        setUseInfo(userArr);\r\n        //return res.data.Path;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    //setEditData({ account: \"\", department: \"\", check: false });\r\n    // form.setFieldsValue({\r\n    //   account: \"\",\r\n    //   department: \"\",\r\n    //   group: \"\",\r\n    //   role: \"\",\r\n    //   check: false,\r\n    // });\r\n    //setEditData();\r\n    setModalOpen(false);\r\n    form.resetFields();\r\n  };\r\n\r\n  //const onCurrencyChange = (newCurrency) => {\r\n  // if (!(\"currency\" in value)) {\r\n  //   setCurrency(newCurrency);\r\n  // }\r\n  // triggerChange({\r\n  //   currency: newCurrency,\r\n  // });\r\n  //};\r\n  //const\r\n  const change = (changedValues, allValues) => {\r\n    //console.log(changedValues, allValues);\r\n    if (allValues.role === \"Leader\") setDisabledGroup(true);\r\n    else if (allValues.role === \"Member\") setDisabledGroup(false);\r\n    //if (changedValues[0].value === \"Leader\") setDisabledGroup(true);\r\n    //else if (changedValues[0].value === \"Member\") setDisabledGroup(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editData.department === \"Admin\") {\r\n      setDisabledRole(true);\r\n      setDisabledGroup(true);\r\n    } else {\r\n      setDisabledRole(false);\r\n      //setDisabledGroup(false);\r\n      /*if (editData.role === \"Leader\") {\r\n        setDisabledGroup(true);\r\n      } else setDisabledGroup(false);*/\r\n    }\r\n  }, [editData.department, editData.role]);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Edit\"\r\n      visible={ModalOpen}\r\n      onOk={handleOk}\r\n      okText=\"Save\"\r\n      onCancel={handleCancel}\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        // initialValues={{\r\n        //   account: editData.account,\r\n        //   department: editData.department,\r\n        //   check: editData.check,\r\n        //   role: editData.role,\r\n        //   group: editData.group,\r\n        // }}\r\n        onValuesChange={change}\r\n        //onFieldsChange={change}\r\n      >\r\n        <Form.Item label=\"帳號\" name=\"account\">\r\n          <Input disabled /*defaultValue={editData.account}*/ size=\"middle\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"部門\" name=\"department\">\r\n          <Select\r\n            disabled={\r\n              auth.Department !== \"Admin\"\r\n              //(auth.Department === \"Admin\" && auth.Role === \"Leader\")\r\n            }\r\n            //mode=\"multiple\"\r\n            className=\"select-department\"\r\n            placeholder=\"department\"\r\n            style={{\r\n              width: \"50%\",\r\n              border: \"1px solid #d9d9d9\",\r\n            }}\r\n            //defaultChecked={editData.department}\r\n            //defaultValue={editData.department}\r\n            //value={value.currency || currency}\r\n            //onChange={onCurrencyChange}\r\n            //onChange={() => handleChange(text, record)}\r\n            size=\"middle\"\r\n            optionLabelProp=\"label\"\r\n          >\r\n            {groupInfo.map((x) => (\r\n              <Select.Option value={x.departmentname}>\r\n                {x.departmentname}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"權限\"\r\n          name=\"role\"\r\n          rules={[{ required: true, message: \"權限為必選選項!\" }]}\r\n        >\r\n          <Select\r\n            disabled={disabledRole}\r\n            //mode=\"multiple\"\r\n            className=\"select-role\"\r\n            placeholder=\"role\"\r\n            style={{\r\n              width: \"50%\",\r\n              border: \"1px solid #d9d9d9\",\r\n            }}\r\n            //defaultChecked={editData.department}\r\n            //defaultValue={editData.department}\r\n            //value={value.currency || currency}\r\n            //onChange={onCurrencyChange}\r\n            //onChange={() => handleChange(text, record)}\r\n            size=\"middle\"\r\n            optionLabelProp=\"label\"\r\n          >\r\n            <Select.Option value=\"Leader\" label=\"Leader\">\r\n              Leader\r\n            </Select.Option>\r\n            <Select.Option value=\"Member\" label=\"Member\">\r\n              Member\r\n            </Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        {/* <Form.Item label=\"群組\">\r\n          <Space> */}\r\n        <Form.Item\r\n          label=\"群組\"\r\n          name=\"group\"\r\n          rules={[{ required: !disabledGroup, message: \"群組為必選選項!\" }]}\r\n        >\r\n          <Select\r\n            placeholder=\"Please select group\"\r\n            size=\"middle\"\r\n            optionLabelProp=\"label\"\r\n            disabled={disabledGroup}\r\n            //defaultValue=\"lucy\"\r\n            style={{ width: 200, border: \"0.1px solid lightgray\" }}\r\n            //onChange={handleGrp}\r\n            //value={group}\r\n            //bordered={true}\r\n          >\r\n            {groupInfo\r\n              .filter(\r\n                (x) =>\r\n                  x.departmentname === editData.department &&\r\n                  editData.department !== \"\"\r\n              )\r\n              .map((x) =>\r\n                x.grouplist.map((y) => (\r\n                  <Select.Option value={y} label={y}>\r\n                    {y}\r\n                  </Select.Option>\r\n                ))\r\n              )}\r\n          </Select>\r\n          {/* <Select\r\n            //disabled\r\n            //mode=\"multiple\"\r\n            className=\"select-department\"\r\n            placeholder=\"department\"\r\n            style={{\r\n              width: \"50%\",\r\n              border: \"1px solid #d9d9d9\",\r\n            }}\r\n            //defaultChecked={editData.department}\r\n            //defaultValue={editData.department}\r\n            //value={value.currency || currency}\r\n            //onChange={onCurrencyChange}\r\n            //onChange={() => handleChange(text, record)}\r\n            size=\"middle\"\r\n            optionLabelProp=\"label\"\r\n          >\r\n            <Select.Option value=\"CIM\" label=\"CIM\">\r\n              CIM\r\n            </Select.Option>\r\n            <Select.Option value=\"QA\" label=\"QA\">\r\n              QA\r\n            </Select.Option>\r\n            <Select.Option value=\"Admin\" label=\"Admin\">\r\n              Admin\r\n            </Select.Option>\r\n          </Select> */}\r\n        </Form.Item>\r\n        {/* <Tooltip title=\"若權限為Member，需將該成員加入群組\">\r\n              <Typography.Link href=\"#API\" style={{ paddingLeft: \"10px\" }}>\r\n                <InfoCircleOutlined />\r\n              </Typography.Link>\r\n            </Tooltip>\r\n          </Space>\r\n        </Form.Item> */}\r\n        <Form.Item label=\"審核\" name=\"check\">\r\n          {/* <Checkbox\r\n              style={{ textAlign: \"center\", paddingLeft: \"30px\" }}\r\n              //defaultChecked={text}\r\n              //name={record.account}\r\n              //checked={checked[record.account]}\r\n              onChange={handleOnClick}\r\n            /> */}\r\n          <Radio.Group\r\n            //options={optionsWithDisabled}\r\n            //onChange={onChange4}\r\n            //value={value4}\r\n            //defaultValue={editData.check}\r\n            optionType=\"button\"\r\n            buttonStyle=\"solid\"\r\n            size=\"middle\"\r\n          >\r\n            <Radio.Button value={true}>已審核</Radio.Button>\r\n            <Radio.Button value={false} disabled={editData.check}>\r\n              待審核\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FormData;\r\n","import React, { useContext } from \"react\";\r\nimport { Breadcrumb, Menu } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nconst menu = (userRole) => (\r\n  <Menu>\r\n    <Menu.Item>\r\n      <NavLink to=\"/scheduler\">Scheduler</NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <NavLink to=\"/report\">Report</NavLink>\r\n      {/* <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"./report\">\r\n        Report\r\n      </a> */}\r\n    </Menu.Item>\r\n    {userRole === \"Admin\" && (\r\n      <>\r\n        <Menu.Item>\r\n          <NavLink to=\"/authority\">Authority</NavLink>\r\n        </Menu.Item>\r\n      </>\r\n    )}\r\n  </Menu>\r\n);\r\n\r\nconst Breadcrumbs = ({ title }) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item>\r\n        <NavLink to=\"/\">Home</NavLink>\r\n      </Breadcrumb.Item>\r\n      {title !== \"Recent Reports\" && (\r\n        <>\r\n          <Breadcrumb.Item overlay={menu(auth.Role)}>\r\n            {\" \"}\r\n            <NavLink to=\"/authority\">Authority</NavLink>\r\n          </Breadcrumb.Item>\r\n          {title === \"Group Setting\" && (\r\n            <Breadcrumb.Item>Group Setting</Breadcrumb.Item>\r\n          )}\r\n          {title === \"Auth Setting\" && (\r\n            <Breadcrumb.Item>Auth Setting</Breadcrumb.Item>\r\n          )}\r\n        </>\r\n      )}\r\n    </Breadcrumb>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","import React from \"react\";\r\nimport { PageHeader, Descriptions } from \"antd\";\r\nimport Breadcrumbs from \"./Breadcrumbs\";\r\n\r\nconst PageHeaders = ({ title, back }) => {\r\n  return (\r\n    <PageHeader\r\n      style={{\r\n        width: \"50%\",\r\n        margin: \"auto auto auto 5em\",\r\n        // width: \"90%\",\r\n        // margin: \"auto\",\r\n      }}\r\n      //className=\"site-page-header\"\r\n      title={<h2>{title}</h2>}\r\n      //subTitle=\"This is a subtitle\"\r\n      // extra={[\r\n      //   <RangePicker\r\n      //     defaultValue={[\r\n      //       moment(\"2021/07/01\", dateFormat),\r\n      //       moment(\"2021/07/05\", dateFormat),\r\n      //     ]}\r\n      //     size=\"large\"\r\n      //     format={dateFormat}\r\n      //   />,\r\n      // ]}\r\n    >\r\n      <Descriptions size=\"small\" column={2}>\r\n        <Descriptions.Item>\r\n          <Breadcrumbs title={title} />\r\n        </Descriptions.Item>\r\n        {/* <Descriptions.Item label=\"Created\">Lili Qu</Descriptions.Item>\r\n        <Descriptions.Item label=\"Association\">\r\n          <a>421421</a>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Creation Time\">2017-01-10</Descriptions.Item>\r\n        <Descriptions.Item label=\"Effective Time\">2017-10-10</Descriptions.Item>\r\n        <Descriptions.Item label=\"Remarks\">\r\n          Gonghu Road, Xihu District, Hangzhou, Zhejiang, China\r\n        </Descriptions.Item> */}\r\n      </Descriptions>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default PageHeaders;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Transfer, message } from \"antd\";\r\nimport {\r\n  postAssigngroupApi,\r\n  getUserInfoApi,\r\n  refreshTokenApi,\r\n} from \"../../api-list/api-list\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  getAuthToken,\r\n  setAuthToken,\r\n  removeAuthToken,\r\n} from \"../../shared/util/getAuth\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\n\r\nconst GroupTransfer = ({\r\n  json,\r\n  chooseGroup,\r\n  setUseInfo,\r\n  chooseDepartment,\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  setUserDepartment,\r\n}) => {\r\n  //const [useInfo, setUseInfo] = useState();\r\n  //const [state, setState] = useState({ mockData: [], targetKeys: [] });\r\n  //const [mockData, setMockData] = useState([])\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  let target = [];\r\n  json.forEach((element) => {\r\n    if (element.groupchosen) {\r\n      target.push(element.key);\r\n    }\r\n  });\r\n  const [targetKeys, setTargetKeys] = useState(target);\r\n  //const getMock = () => {\r\n  // const target = [];\r\n  // const mockData = [];\r\n  // json.forEach((x) => {\r\n  //   if (x.chosen) {\r\n  //     target.push(x.key);\r\n  //   } //else\r\n  //   mockData.push(x.key);\r\n  // });\r\n  let dataSource =\r\n    chooseGroup !== \"\"\r\n      ? json.filter(\r\n          (x) =>\r\n            (x.group === chooseGroup || x.group === \"\") &&\r\n            x.department === chooseDepartment &&\r\n            x.role !== \"Leader\" &&\r\n            x.department !== \"Admin\"\r\n        )\r\n      : json.filter(\r\n          (x) =>\r\n            x.role !== \"Leader\" &&\r\n            x.department !== \"Admin\" &&\r\n            x.department === chooseDepartment\r\n        );\r\n  //console.log(dataSource);\r\n  // for (let i = 0; i < 20; i++) {\r\n  //   const data = {\r\n  //     key: i.toString(),\r\n  //     title: `User${i + 1}`,\r\n  //     //title: `content${i + 1}`,\r\n  //     //description: `description of content${i + 1}`,\r\n  //     chosen: Math.random() * 2 > 1,\r\n  //   };\r\n  //   if (data.chosen) {\r\n  //     targetKeys.push(data.key);\r\n  //   }\r\n  //   mockData.push(data);\r\n  // }\r\n  //console.log(mockData);\r\n  //setState({ ...state, mockData: mockData, targetKeys: targetKeys });\r\n  //};\r\n\r\n  // useEffect(() => {\r\n  //   if (chooseDepartment) {\r\n  //   }\r\n  // }, []);\r\n\r\n  const handleChange = (targetKeys, direction, moveKeys) => {\r\n    //console.log(targetKeys, direction, moveKeys);\r\n    setTargetKeys(targetKeys);\r\n    moveKeys.forEach((y) => {\r\n      let idx = json.findIndex((x) => x.key === y);\r\n      //加入Group\r\n      if (direction === \"right\") {\r\n        if (idx !== -1) {\r\n          let postJson = {\r\n            ...json[idx],\r\n            group: chooseGroup,\r\n            groupchosen: true,\r\n          };\r\n          // console.log(postJson);\r\n          handleTransfer(postJson);\r\n        }\r\n      } else {\r\n        if (idx !== -1) {\r\n          let postJson = { ...json[idx], group: \"\", groupchosen: false };\r\n          // console.log(postJson);\r\n          handleTransfer(postJson);\r\n        }\r\n      }\r\n    });\r\n\r\n    //setState({ ...state, targetKeys: targetKeys });\r\n  };\r\n\r\n  const handleTransfer = async (postJson, action, groupchosen) => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await postAssigngroupApi.post(\"\", postJson, config);\r\n      if (res.data.result) {\r\n        //console.log(res.data);\r\n        message.info(\"設定成功\");\r\n        getUserInfoList();\r\n        //getGroupInfoList();\r\n        //return res.data.Path;\r\n      } else {\r\n        message.warning(\"設定失敗，請稍等再重試一次\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n      //message.info(\"驗證過期，請重新登入\");\r\n      //history.push(\"/auth\");\r\n      //auth.isLoggedIn\r\n      //auth.logout();\r\n      //RefreshToken(\"test\", \"test\");\r\n      /*setUserData(null);\r\n      setIsLoggedIn(false);\r\n      setUserRole(null);\r\n      history.push(\"/\");*/\r\n\r\n      if (err.response.status === 401) {\r\n        try {\r\n          await refreshTokenApi\r\n            .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n            .then((res) => {\r\n              //console.log(res.data);\r\n              setAuthToken(res.data.AccessToken);\r\n            })\r\n            .catch((errs) => {\r\n              //console.log(errs.response);\r\n              if (errs.response.status === 401) {\r\n                removeAuthToken();\r\n                setUserData(null);\r\n                setIsLoggedIn(false);\r\n                setUserDepartment(null);\r\n                setUserRole(null);\r\n                history.push(\"/\");\r\n                message.info(\"驗證過期，請重新登入\");\r\n                //return Promise.reject(err);\r\n              }\r\n            });\r\n          /*if (res) setAuthToken(res.data.AccessToken);\r\n          else setAuthToken(\"\");*/\r\n        } catch (_err) {\r\n          console.log(_err);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getUserInfoList = async () => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    try {\r\n      const res = await getUserInfoApi.get(\"\", config);\r\n      if (res.data) {\r\n        // console.log(res.data);\r\n        let userArr = res.data.users.map((x, idx) => {\r\n          x.key = idx;\r\n          return x;\r\n        });\r\n        setUseInfo(userArr);\r\n        //return res.data.Path;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n      // if (err.response.status === 401) {\r\n      //   try {\r\n      //     await refreshTokenApi\r\n      //       .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n      //       .then((res) => {\r\n      //         //console.log(res.data);\r\n      //         setAuthToken(res.data.AccessToken);\r\n      //       })\r\n      //       .catch((errs) => {\r\n      //         //console.log(errs.response);\r\n      //         if (errs.response.status === 401) {\r\n      //           removeAuthToken();\r\n      //           message.info(\"驗證過期，請重新登入\");\r\n      //           setUserData(null);\r\n      //           setIsLoggedIn(false);\r\n      //           setUserRole(null);\r\n      //           history.push(\"/\");\r\n      //           //return Promise.reject(err);\r\n      //         }\r\n      //       });\r\n      //     /*if (res) setAuthToken(res.data.AccessToken);\r\n      //   else setAuthToken(\"\");*/\r\n      //   } catch (_err) {\r\n      //     console.log(_err);\r\n      //   }\r\n      // }\r\n    }\r\n  };\r\n\r\n  // const renderFooter = (props) => {\r\n  //   if (direction === \"left\") {\r\n  //     return (\r\n  //       <Button\r\n  //         size=\"small\"\r\n  //         style={{ float: \"left\", margin: 5 }}\r\n  //         onClick={this.getMock}\r\n  //       >\r\n  //         Left button reload\r\n  //       </Button>\r\n  //     );\r\n  //   }\r\n  //   return (\r\n  //     <Button\r\n  //       size=\"small\"\r\n  //       style={{ float: \"right\", margin: 5 }}\r\n  //       onClick={getMock}\r\n  //     >\r\n  //       Right button reload\r\n  //     </Button>\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {chooseGroup !== \"\" ? (\r\n        <Transfer\r\n          style={{ width: \"90%\", margin: \"auto\", paddingLeft: \"20px\" }}\r\n          dataSource={dataSource}\r\n          showSearch\r\n          listStyle={{\r\n            width: \"100%\",\r\n            height: 450,\r\n          }}\r\n          titles={[\"未選群\", \"已選群\"]}\r\n          operations={[\"to right\", \"to left\"]}\r\n          //selectedKeys={}\r\n          targetKeys={chooseGroup !== \"\" ? targetKeys : []}\r\n          onChange={handleChange}\r\n          render={(item) => `${item.account}`}\r\n          //footer={renderFooter}\r\n        />\r\n      ) : (\r\n        <h1 style={{ width: \"90%\", /*margin: \"auto\",*/ textAlign: \"center\" }}>\r\n          請選擇左側部門\r\n        </h1>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupTransfer;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst AuthControlBar = ({ scheduleData }) => {\r\n  const target = [];\r\n  const dep = [];\r\n\r\n  scheduleData.map((x, idx) => {\r\n    x.key = idx;\r\n    x.title = x.account;\r\n    if (x.groupchosen) {\r\n      target.push(x.key);\r\n    }\r\n\r\n    const depIdx = dep.findIndex((y) => y.dep === x.department);\r\n    if (depIdx === -1) {\r\n      dep.push({ dep: x.department, group: [x.group] });\r\n    } else {\r\n      const groupIdx = dep[depIdx].group.findIndex((y) => y === x.group);\r\n      if (groupIdx === -1) {\r\n        dep[depIdx].group.push(x.group);\r\n      }\r\n    }\r\n    return x;\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        float: \"right\",\r\n        margin: \"auto auto 3em auto\",\r\n        justifyContent: \"space-between\",\r\n        marginRight: \"5%\",\r\n      }}\r\n    >\r\n      <NavLink\r\n        to={{\r\n          pathname: \"/groupsetting\",\r\n          state: dep,\r\n        }}\r\n      >\r\n        <Button>Group Setting</Button>\r\n      </NavLink>\r\n      <NavLink\r\n        to={{\r\n          pathname: \"/authsetting\",\r\n          state: {\r\n            dep: dep,\r\n            target: target,\r\n            userInfo: scheduleData,\r\n          },\r\n        }}\r\n      >\r\n        <Button>Auth Setting</Button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthControlBar;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n//import styled from \"styled-components\";\r\nimport DataTable from \"../components/DataTable\";\r\n//import CardComponent from \"../../component-first/pages/CardComponent\";\r\nimport PageHeaders from \"../components/PageHeaders\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport WithSpinner from \"../../shared/components/UIELements/WithSpinner\";\r\nimport { getUserInfoApi, refreshTokenApi } from \"../../api-list/api-list\";\r\nimport {\r\n  getAuthToken,\r\n  setAuthToken,\r\n  removeAuthToken,\r\n} from \"../../shared/util/getAuth\";\r\nimport { Button, message } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RefreshToken } from \"../../Auth/pages/RefreshToken\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport GroupTransfer from \"../components/GroupTransfer\";\r\nimport AuthControlBar from \"../components/AuthControlBar\";\r\nconst DataTableWithSpinner = WithSpinner(DataTable);\r\nconst AuthControlBarWithSpinner = WithSpinner(AuthControlBar);\r\n/*const THStyle = styled.th`\r\n  border-width: 1px;\r\n  border-color: gray;\r\n  border-collapse: collapse;\r\n  padding: 4em;\r\n`;\r\n\r\nconst TDStyle = styled.td`\r\n  border-bottom-style: solid;\r\n  border-width: 1px;\r\n  border-color: lightgray;\r\n  border-collapse: collapse;\r\n  padding: 4em;\r\n`;*/\r\n\r\nconst Authority = ({\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  setUserDepartment,\r\n}) => {\r\n  const [changeData, setChangeData] = useState([]);\r\n  const [useInfo, setUseInfo] = useState();\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const getUserInfoList = async () => {\r\n      //Event.preventDefault();\r\n      try {\r\n        const res = await getUserInfoApi.get(\"\", config);\r\n        if (res.data) {\r\n          // console.log(res.data);\r\n          let userArr = res.data.users.map((x, idx) => {\r\n            x.key = idx;\r\n            return x;\r\n          });\r\n          setUseInfo(userArr);\r\n          //return res.data.Path;\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        //message.info(\"驗證過期，請重新登入\");\r\n        //history.push(\"/auth\");\r\n        //auth.isLoggedIn\r\n        //auth.logout();\r\n        //RefreshToken(\"test\", \"test\");\r\n        /*setUserData(null);\r\n        setIsLoggedIn(false);\r\n        setUserRole(null);\r\n        history.push(\"/\");*/\r\n        if (err.response.status === 401) {\r\n          try {\r\n            await refreshTokenApi\r\n              .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n              .then((res) => {\r\n                //console.log(res.data);\r\n                setAuthToken(res.data.AccessToken);\r\n              })\r\n              .catch((errs) => {\r\n                //console.log(errs.response);\r\n                if (errs.response.status === 401) {\r\n                  removeAuthToken();\r\n                  message.info(\"驗證過期，請重新登入\");\r\n                  setUserData(null);\r\n                  setIsLoggedIn(false);\r\n                  setUserDepartment(null);\r\n                  setUserRole(null);\r\n                  history.push(\"/\");\r\n                  //return Promise.reject(err);\r\n                }\r\n              });\r\n            /*if (res) setAuthToken(res.data.AccessToken);\r\n          else setAuthToken(\"\");*/\r\n          } catch (_err) {\r\n            console.log(_err);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    getUserInfoList();\r\n  }, [\r\n    setUserData,\r\n    history,\r\n    setIsLoggedIn,\r\n    setUserRole,\r\n    setUserDepartment,\r\n    auth.UserData.RefreshToken,\r\n  ]);\r\n\r\n  // const checkData = memberList\r\n  //   .map((x) => ({ [x.userId]: x.check }))\r\n  //   .reduce((a, b) => {\r\n  //     return Object.assign(a, b);\r\n  //   });\r\n\r\n  // const [checked, setChecked] = useState(checkData);\r\n\r\n  // const handleOnClick = (e, id) => {\r\n  //   setChecked({ ...checked, [id]: e.target.checked });\r\n  // };\r\n\r\n  return (\r\n    <div style={{ width: \"90%\" }}>\r\n      <div style={{ display: \"flex\" }}>\r\n        <PageHeaders title={\"Authority\"} back={false} />\r\n        <AuthControlBarWithSpinner\r\n          isLoading={!!!useInfo}\r\n          scheduleData={useInfo}\r\n        />\r\n        {/* <CardComponent\r\n        color={\"info\"}\r\n        title={\"test_component\"}\r\n        content={\"test_component\"}\r\n        styles={\"result-fixed\"}\r\n      /> */}\r\n      </div>\r\n      <DataTableWithSpinner\r\n        isLoading={!!!useInfo}\r\n        setChangeData={setChangeData}\r\n        scheduleData={useInfo}\r\n        setUseInfo={setUseInfo}\r\n        setUserData={setUserData}\r\n        setIsLoggedIn={setIsLoggedIn}\r\n        setUserRole={setUserRole}\r\n        setUserDepartment={setUserDepartment}\r\n      />\r\n\r\n      {/* <form\r\n        style={{\r\n          display: \"flex\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <table\r\n          style={{\r\n            borderWidth: \"1px\",\r\n            boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.26)\",\r\n            borderCollapse: \"collapse\",\r\n            borderRadius: \"3px\",\r\n            alignItems: \"center\",\r\n            margin: \"auto\",\r\n            // display: \"flex\", textAlign: \"center\"\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr style={{ backgroundColor: \"lightgray\" }}>\r\n              <THStyle>User ID</THStyle>\r\n              <THStyle>User Role</THStyle>\r\n              <THStyle>Check</THStyle>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {memberList.map((item) => (\r\n              <tr>\r\n                <TDStyle>{item.id}</TDStyle>\r\n                <TDStyle>{item.role}</TDStyle>\r\n                <TDStyle>\r\n                  {checked[item.id] ? (\r\n                    \"已審核\"\r\n                  ) : (\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={checked[item.id]}\r\n                      defaultChecked={item.check}\r\n                      onClick={(e) => handleOnClick(e, item.id)}\r\n                    />\r\n                  )}\r\n                </TDStyle>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n         <button type=\"submit\">儲存</button> \r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authority;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { Select } from \"antd\";\r\n\r\nimport styled from \"styled-components\";\r\n//import { validate } from \"../../util/validators\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\r\nconst { Option } = Select;\r\nconst icon = (props) => (\r\n  <FontAwesomeIcon\r\n    style={{ margin: \"0.5rem 0.5rem\" }}\r\n    icon={faBriefcase}\r\n    size=\"1x\"\r\n  />\r\n);\r\n\r\n// styles\r\nconst PrefixListIcon = styled(icon)`\r\n  padding: 8px;\r\n  border: 1px solid #d9d9d9;\r\n  //border-right: none;\r\n  border-bottom-left-radius: 2px;\r\n  border-top-left-radius: 2px !important;\r\n  background: #fff;\r\n  //padding: 0.15rem 0.25rem;\r\n`;\r\n\r\nconst InputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: true, //validate(action.val, action.validators),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//<FontAwesomeIcon icon={faBriefcase} size=\"1x\" />\r\n\r\nconst InputGroup = (props) => {\r\n  const [inputState, dispatch] = useReducer(InputReducer, {\r\n    value: props.initialValue || undefined,\r\n    //isTouched: false,\r\n    isValid: true, //props.initialValid || false,\r\n  });\r\n  const { id, onInput, className } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, isValid, onInput, value]);\r\n\r\n  const changeHandler = (depart) => {\r\n    //dispatch action obj\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: depart,\r\n      validators: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    // <div\r\n    //   className={`form-control ${\r\n    //     !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n    //   } ${className && className}`}\r\n    // >\r\n    //   <label htmlFor={props.id} style={{ textAlign: \"left\" }}>\r\n    //     {props.label}\r\n    //   </label>\r\n    //   {element}\r\n    //   {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    // </div>\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        margin: \"1.5rem 0\",\r\n        padding: \"3px 6px\",\r\n        border: \"1px solid #d9d9d9\",\r\n        //borderRight: \"none\",\r\n        borderBottomLeftRadius: \"2px\",\r\n        borderTopLeftRadius: \"2px !important\",\r\n        background: \"#fff\",\r\n        //padding: 0.15rem 0.25rem;\r\n      }}\r\n    >\r\n      <PrefixListIcon />\r\n      <Select\r\n        id=\"department\"\r\n        style={{\r\n          width: \"100%\",\r\n          textAlign: \"left\",\r\n          fontSize: \"0.98rem\",\r\n          borderLeft: \"none\",\r\n          //padding: \"0.15rem 0.25rem\",\r\n        }}\r\n        value={inputState.value}\r\n        placeholder=\"請選擇所在部門\"\r\n        onChange={changeHandler}\r\n        //defaultValue=\"Home\"\r\n      >\r\n        {props.groupData.map((x) => (\r\n          <Option value={x.departmentname}>{x.departmentname}</Option>\r\n        ))}\r\n        {/* <Option value=\"CIM\">CIM</Option>\r\n        <Option value=\"QA\">QA</Option> */}\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputGroup;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Card from \"../../shared/components/UIELements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Inputs\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport { useForm } from \"../../shared/hooks/form-hooks\";\r\nimport { registerApi, getGroupInfoApi } from \"../../api-list/api-list\";\r\nimport { Spinner } from \"../../shared/components/UIELements/WithSpinner\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { Avatar, Typography } from \"antd\";\r\n//import CryptoJS from \"crypto-js\";\r\nimport \"./Auth.css\";\r\nimport konkaLogo from \"../../images/konka.jpeg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport InputGroup from \"../../shared/components/FormElements/InputGroup\";\r\nimport fstLogo from \"../../images/logo.png\";\r\nconst Register = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginning, setIsLoginning] = useState(false);\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      account: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      department: {\r\n        value: \"\",\r\n        isValid: true,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  // const rrgisterSubmitHandler = async (e) => {\r\n  //   e.preventDefault();\r\n  //   const { account, password, department } = formState.inputs;\r\n\r\n  //   const pwd = CryptoJS.AES.encrypt(\r\n  //     JSON.stringify(password.value),\r\n  //     \"fst2009\"\r\n  //   ).toString();\r\n\r\n  //   //https://www.npmjs.com/package/crypto-js\r\n  //   //https://cryptojs.gitbook.io/docs/\r\n  //   console.log(pwd);\r\n  //   const loginInfo = {\r\n  //     account: account.value,\r\n  //     password: password.value,\r\n  //     department: department.value,\r\n  //   };\r\n\r\n  //   //https://jwt.io/#debugger-io?token=eyJhbGciOiJIUzI1NiJ9.eyJBQ0NPVU5UIjoidXNlciIsIlBBU1NXT1JEIjoidXNlciJ9.8H_2QW9fFw3O3WhysTvknxDpLJSuTJX1BYWJyuPY5s0\r\n\r\n  //   if (account.value === \"12345\" && password.value === \"12345\") {\r\n  //     setIsLoginning(false);\r\n  //     auth.login(\"supervisor\");\r\n  //   } else if (account.value === \"tina88\" && password.value === \"tina88\") {\r\n  //     setIsLoginning(false);\r\n  //     auth.login(\"workerA\");\r\n  //   } else {\r\n  //     setErrMsg(\"帳密組合有誤\");\r\n  //     setTimeout(() => {\r\n  //       setErrMsg(\"\");\r\n  //     }, 3000);\r\n  //   }\r\n  //   /*try {\r\n  //         //setIsLoginning(true);\r\n  //         const res = await loginApi.post(\"/\", loginInfo);\r\n  //          //if (res.data && res.data.userRole) {\r\n  //         if (res.data ) {\r\n  //           //console.log(res);\r\n  //           setIsLoginning(false);\r\n  //           auth.login(\"supervisor\");\r\n  //           handleCheckCombinationInfo();\r\n  //           //auth.login(res.data.userRole);\r\n  //         } else {\r\n  //           setErrMsg(\"帳密組合有誤\");\r\n  //           setTimeout(() => {\r\n  //             setErrMsg(\"\");\r\n  //           }, 3000);\r\n  //           setIsLoginning(false);\r\n  //         }\r\n  //       } catch (err) {\r\n  //         console.log(err);\r\n  //         setErrMsg(\"帳密組合有誤\");\r\n  //         setTimeout(() => {\r\n  //           setErrMsg(\"\");\r\n  //         }, 3000);\r\n  //         setIsLoginning(false);\r\n  //       }*/\r\n  // };\r\n  const [groupData, setGroupData] = useState([]);\r\n  useEffect(\r\n    () => {\r\n      const getGroupInfoList = async () => {\r\n        try {\r\n          const res = await getGroupInfoApi.get(\"\");\r\n          if (res.data) {\r\n            setGroupData(res.data.departmentlist);\r\n          }\r\n        } catch (err) {\r\n          console.log(err.response);\r\n          //message.info(\"驗證過期，請重新登入\");\r\n          //history.push(\"/auth\");\r\n          //auth.isLoggedIn\r\n          //auth.logout();\r\n          //RefreshToken(\"test\", \"test\");\r\n          /*setUserData(null);\r\n            setIsLoggedIn(false);\r\n            setUserRole(null);\r\n            history.push(\"/\");*/\r\n\r\n          // if (err.response.status === 401) {\r\n          //   try {\r\n          //     await refreshTokenApi\r\n          //       .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n          //       .then((res) => {\r\n          //         //console.log(res.data);\r\n          //         setAuthToken(res.data.AccessToken);\r\n          //       })\r\n          //       .catch((errs) => {\r\n          //         //console.log(errs.response);\r\n          //         if (errs.response.status === 401) {\r\n          //           removeAuthToken();\r\n          //           message.info(\"驗證過期，請重新登入\");\r\n          //           setUserData(null);\r\n          //           setIsLoggedIn(false);\r\n          //           setUserRole(null);\r\n          //           history.push(\"/\");\r\n          //           //return Promise.reject(err);\r\n          //         }\r\n          //       });\r\n          //     /*if (res) setAuthToken(res.data.AccessToken);\r\n          //       else setAuthToken(\"\");*/\r\n          //   } catch (_err) {\r\n          //     console.log(_err);\r\n          //   }\r\n          // }\r\n        }\r\n      };\r\n      getGroupInfoList();\r\n    },\r\n    [\r\n      // setUserData,\r\n      // history,\r\n      // setIsLoggedIn,\r\n      // setUserRole,\r\n      // auth.UserData.RefreshToken,\r\n    ]\r\n  );\r\n\r\n  const registerSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const { account, password, department } = formState.inputs;\r\n\r\n    const loginInfo = {\r\n      account: account.value,\r\n      password: password.value,\r\n      department: department.value,\r\n    };\r\n    //console.log(loginInfo);\r\n    try {\r\n      //setIsLoginning(true);\r\n      const res = await registerApi.post(\"/\", loginInfo);\r\n      //if (res.data && res.data.userRole) {\r\n      if (res.data) {\r\n        setSuccessMsg(\"註冊成功，請等待審核\");\r\n        //console.log(res);\r\n        //setIsLoginning(false);\r\n        // auth.login(\"supervisor\");\r\n        //handleCheckCombinationInfo();\r\n        //auth.login(res.data.userRole);\r\n      } else {\r\n        setErrMsg(\"註冊失敗，請稍後再試\");\r\n        setTimeout(() => {\r\n          setErrMsg(\"\");\r\n        }, 3000);\r\n        setIsLoginning(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      setErrMsg(\"註冊失敗，請稍後再試\");\r\n      setTimeout(() => {\r\n        setErrMsg(\"\");\r\n      }, 3000);\r\n      setIsLoginning(false);\r\n    }\r\n  };\r\n  const [clickNum, setClickNum] = useState(0);\r\n  const handleQuickLogin = (e) => {\r\n    //console.log(clickNum);\r\n    setClickNum(clickNum + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timeoutTag;\r\n    if (clickNum >= 10) {\r\n      setIsLoginning(false);\r\n      auth.login(\"Admin\");\r\n      timeoutTag = setTimeout(() => {\r\n        setClickNum(0);\r\n      }, 10000);\r\n    }\r\n    return () => {\r\n      clearTimeout(timeoutTag);\r\n    };\r\n  }, [clickNum, auth]);\r\n\r\n  return (\r\n    <Card className=\"register\">\r\n      <img\r\n        src={konkaLogo}\r\n        //src={fstLogo}\r\n        alt=\"\"\r\n        style={{ width: \"50%\", paddingTop: \"5%\" /* height: \"10%\" */ }}\r\n      />\r\n      {/* <Avatar\r\n        //style={{ backgroundColor: \"#ff1744\", margin: \"5%\" }}\r\n        style={{ backgroundColor: \"transparent\", margin: \"3%\" }}\r\n        //icon={<LockOutlined />}\r\n        icon={<img src={fstLogo} alt=\"fireSpot\" />}\r\n        size={50}\r\n      /> */}\r\n      <Typography component=\"h3\" variant=\"h5\">\r\n        Engineering Data Analysis\r\n      </Typography>\r\n      <h2 onClick={(e) => handleQuickLogin(e)}>註冊介面</h2>\r\n      {successMsg && <h4 className=\"authentication__success\">{successMsg}</h4>}\r\n      {errMsg && <h4 className=\"authentication__error\">{errMsg}</h4>}\r\n      {isLoginning ? (\r\n        <Spinner />\r\n      ) : (\r\n        <form className=\"authentication__form\" onSubmit={registerSubmitHandler}>\r\n          {/* <Input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            //label=\"帳號\"\r\n            element=\"input\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(3)]}\r\n            //errorText=\"最少五個字元\"\r\n            onInput={inputHandler}\r\n            placeholder=\"請輸入姓名\"\r\n          /> */}\r\n          <Input\r\n            id=\"account\"\r\n            type=\"text\"\r\n            //label=\"帳號\"\r\n            element=\"input\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(3)]}\r\n            //errorText=\"最少五個字元\"\r\n            onInput={inputHandler}\r\n            placeholder=\"請輸入帳號\"\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            //label=\"密碼\"\r\n            element=\"input\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(3)]}\r\n            //errorText=\"最少五個字元\"\r\n            onInput={inputHandler}\r\n            placeholder=\"請輸入密碼\"\r\n          />\r\n          <InputGroup\r\n            id=\"department\"\r\n            onInput={inputHandler}\r\n            groupData={groupData}\r\n          />\r\n          {/* <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            //label=\"密碼\"\r\n            element=\"input\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(3)]}\r\n            //errorText=\"最少五個字元\"\r\n            onInput={inputHandler}\r\n            placeholder=\"請再次確認密碼\"\r\n          /> */}\r\n          {/* <Selects /> */}\r\n          <Button\r\n            className=\"authentication__form__login\"\r\n            type=\"submit\"\r\n            disabled={!formState.isValid}\r\n          >\r\n            註冊\r\n          </Button>\r\n          <Link to=\"/\">\r\n            <p>我要登入</p>\r\n          </Link>\r\n        </form>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Result, Button, Card } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Error404Page = () => {\r\n  return (\r\n    <Card style={{ width: \"50%\", backgroundColor: \"rgba(255,255,255,0.5)\" }}>\r\n      <Result\r\n        status=\"404\"\r\n        title=\"404\"\r\n        subTitle=\"Sorry, the page you visited does not exist.\"\r\n        extra={\r\n          <NavLink to=\"/\">\r\n            <Button type=\"primary\">Back Home</Button>\r\n          </NavLink>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Error404Page;\r\n","import React from \"react\";\r\nimport { Result, Button, Card } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Error403Page = () => {\r\n  return (\r\n    <Card style={{ width: \"50%\", backgroundColor: \"rgba(255,255,255,0.5)\" }}>\r\n      <Result\r\n        status=\"403\"\r\n        title=\"401\"\r\n        subTitle=\"Sorry, you are not authorized to access this page.\"\r\n        extra={\r\n          <NavLink to=\"/\">\r\n            <Button type=\"primary\">Back Home</Button>\r\n          </NavLink>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Error403Page;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Card, Row, Col, Skeleton } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\n\r\nconst ReportPage = ({ repoData, minValue, maxValue }) => {\r\n  //const [minValue, setMinValue] = useState(0);\r\n  //const [maxValue, setMaxValue] = useState(6);\r\n  const [loading, setLoading] = useState(false);\r\n  const imageRef = useRef(null);\r\n  const [size, setSize] = useState({});\r\n  // const [url, setUrl] = useState(\"\");\r\n\r\n  /*const getUrl = async (reportName) => {\r\n    //Event.preventDefault();\r\n    try {\r\n      //setIsLoginning(true);\r\n      const res = await getRecentReportsDetailApi(\"CIM\", reportName).get();\r\n\r\n      if (res.data) {\r\n        console.log(res.data.Path);\r\n        return res.data.Path;\r\n        //return res.data.Path;\r\n        //setIsLoginning(false);\r\n        // auth.login(res.data.user_role, res.data.uid);\r\n      } else {\r\n        // setErrMsg(\"帳密組合有誤\");\r\n        // setTimeout(() => {\r\n        //   setErrMsg(\"\");\r\n        // }, 3000);\r\n        // setIsLoginning(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      // setErrMsg(\"帳密組合有誤\");\r\n      // setTimeout(() => {\r\n      //   setErrMsg(\"\");\r\n      // }, 3000);\r\n      // setIsLoginning(false);\r\n    }\r\n  };*/\r\n  return (\r\n    <div\r\n      style={{\r\n        // display: \"flex\" /*, width: \"1200px\",*/,\r\n        width: \"90%\",\r\n        margin: \"auto\",\r\n      }}\r\n    >\r\n      <Row gutter={[24, 24]}>\r\n        {repoData &&\r\n          repoData.length > 0 &&\r\n          repoData.slice(minValue, maxValue).map((x, idx) => (\r\n            <Col span={8} key={idx + \"-col\"}>\r\n              <a\r\n                //href={getUrl(x.ReportName)}\r\n                href={x.HtmlPath}\r\n                /*{x.Path}*/\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n                //={() => getUrl(x.ReportName)}\r\n              >\r\n                <Card\r\n                  loading={loading}\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    //flexBasis: \"30%\",\r\n                    width: \"100%\",\r\n                    //width: 500,\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                  key={idx + \"-card\"}\r\n                  hoverable\r\n                  //getUrl(x.ReportName)\r\n                  // cover={\r\n                  //   // <Skeleton.Image loading={loading} active>\r\n                  //   <img\r\n                  //     style={{ height: \"300px\" }}\r\n                  //     alt=\"example\"\r\n                  //     src={x.Path}\r\n                  //     ref={imageRef}\r\n                  //     onLoad={(event) => {\r\n                  //       setSize({\r\n                  //         height: event.target.naturalHeight,\r\n                  //         width: event.target.naturalWidth,\r\n                  //       });\r\n                  //     }}\r\n                  //   />\r\n                  //   // </Skeleton.Image>\r\n                  // }\r\n                  //style={{ width: \"500px\" }}\r\n                  // actions={[\r\n                  //   <SearchOutlined\r\n                  //     key=\"edit\"\r\n                  //     onClick={(event) => {\r\n                  //       event.stopPropagation();\r\n                  //       //this.popupModal;\r\n                  //     }}\r\n                  //   />,\r\n                  // ]}\r\n                >\r\n                  <Skeleton\r\n                    loading={loading}\r\n                    active\r\n                    style={{ height: \"350px\", width: \"100%\" }}\r\n                  >\r\n                    <img\r\n                      style={{ height: \"300px\", width: \"100%\" }}\r\n                      alt=\"example\"\r\n                      src={x.Path}\r\n                      //src={getUrl(x.ReportName)}\r\n                      ref={imageRef}\r\n                      onLoad={(event) => {\r\n                        setSize({\r\n                          height: event.target.naturalHeight,\r\n                          width: event.target.naturalWidth,\r\n                        });\r\n                      }}\r\n                    />\r\n                    <Meta\r\n                      style={{ marginTop: \"20px\" }}\r\n                      title={x.ReportName}\r\n                      description={x.TimeStamp}\r\n                    />\r\n                  </Skeleton>\r\n                </Card>\r\n              </a>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n","import React, { useContext } from \"react\";\r\nimport { Radio, Button, message } from \"antd\";\r\nimport { ReloadOutlined } from \"@ant-design/icons\";\r\nimport { getRecentReportsPicsApi } from \"../../api-list/api-list\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport { getAuthToken, removeAuthToken } from \"../../shared/util/getAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst RecentReportControlBar = ({\r\n  setRecentReportDays,\r\n  setFetchData,\r\n  recentReportDays,\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  setUserDepartment,\r\n}) => {\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const handleOnChange = (e) => {\r\n    setRecentReportDays(e.target.value);\r\n    //setStartTime(dateStr[0]);\r\n    //setEndTime(dateStr[1]);\r\n  };\r\n\r\n  const getRecentReportsPics = async () => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    //Event.preventDefault();\r\n    try {\r\n      const res = await getRecentReportsPicsApi(\r\n        //auth.Role,\r\n        recentReportDays\r\n      ).get(\"\", config);\r\n\r\n      if (res.data) {\r\n        const arr = res.data.ReportList.map((x, idx) => {\r\n          x.key = idx;\r\n          return x;\r\n        });\r\n        setFetchData(arr);\r\n      } else {\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 401) {\r\n        removeAuthToken();\r\n        message.info(\"驗證過期，請重新登入\");\r\n        setUserData(null);\r\n        setIsLoggedIn(false);\r\n        setUserRole(null);\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        float: \"right\",\r\n        margin: \"auto auto 3em auto\",\r\n        //marginBottom: \"30px\",\r\n        justifyContent: \"space-between\",\r\n        marginRight: \"5%\",\r\n      }}\r\n    >\r\n      <Radio.Group\r\n        defaultValue=\"30\"\r\n        buttonStyle=\"solid\"\r\n        onChange={handleOnChange}\r\n      >\r\n        <Radio.Button value=\"7\">7 days</Radio.Button>\r\n        <Radio.Button value=\"14\">14 days</Radio.Button>\r\n        <Radio.Button value=\"30\">1 month</Radio.Button>\r\n        <Radio.Button value=\"90\">3 month</Radio.Button>\r\n      </Radio.Group>\r\n\r\n      <Button\r\n        type=\"default\"\r\n        style={{ marginLeft: \"20px\" }}\r\n        //shape=\"circle\"\r\n        icon={<ReloadOutlined />}\r\n        //size=\"small\"\r\n        onClick={() => getRecentReportsPics()}\r\n      />\r\n\r\n      {/* <RangePicker\r\n        defaultValue={[\r\n          moment(startTime, dateFormat),\r\n          moment(endTime, dateFormat),\r\n        ]}\r\n        size=\"large\"\r\n        format={dateFormat}\r\n        onChange={handleOnChange}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentReportControlBar;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport WithSpinner from \"../../shared/components/UIELements/WithSpinner\";\r\nimport { getRecentReportsPicsApi } from \"../../api-list/api-list\";\r\nimport RecentReport from \"./RecentReport\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport { getAuthToken, removeAuthToken } from \"../../shared/util/getAuth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { message } from \"antd\";\r\nconst RecentReportWithSpinner = WithSpinner(RecentReport);\r\n/*const data = {\r\n  ReportList: [\r\n    {\r\n      ReportName: \"EDA_Data_Daily\",\r\n      TimeStamp: \"20210607073000\",\r\n      path: \"D:KONKAAIE_EDA SystemReport_imageWAT-20210705_15_39.PNG\",\r\n      HtmlPath:\r\n        \"////192.168.0.32/Account/QA/Yield-Box_Quantiles_Plot/Yield-Box_Quantiles_Plot-20210705/Yield-Box_Quantiles_Plot-20210705.html\",\r\n    },\r\n    {\r\n      ReportName: \"Daily\",\r\n      TimeStamp: \"20210607073000\",\r\n      path: \"D:KONKAAIE_EDA SystemReport_imageWAT-20210705_15_40.PNG\",\r\n      HtmlPath:\r\n        \"////192.168.0.32/Account/QA/Yield-Box_Quantiles_Plot/Yield-Box_Quantiles_Plot-20210705/Yield-Box_Quantiles_Plot-20210705.html\",\r\n    },\r\n  ],\r\n};*/\r\n\r\nconst RecentReportContainer = (\r\n  props,\r\n  { setUserData, setIsLoggedIn, setUserRole, setUserDepartment }\r\n) => {\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [recentReportDays, setRecentReportDays] = useState(30);\r\n  const [fetchData, setFetchData] = useState();\r\n\r\n  useEffect(() => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const getRecentReportsPics = async () => {\r\n      //Event.preventDefault();\r\n      try {\r\n        const res = await getRecentReportsPicsApi(\r\n          // auth.Role,\r\n          recentReportDays\r\n        ).get(\"\", config);\r\n\r\n        if (res.data) {\r\n          const arr = res.data.ReportList.map((x, idx) => {\r\n            x.key = idx;\r\n            return x;\r\n          });\r\n          setFetchData(arr);\r\n        } else {\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        if (err.response.status === 401) {\r\n          removeAuthToken();\r\n          message.info(\"驗證過期，請重新登入\");\r\n          setUserData(null);\r\n          setIsLoggedIn(false);\r\n          setUserRole(null);\r\n          setUserDepartment(null);\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    };\r\n    if (auth.Role !== null) getRecentReportsPics();\r\n  }, [\r\n    recentReportDays,\r\n    auth.Role,\r\n    setUserData,\r\n    setIsLoggedIn,\r\n    setUserRole,\r\n    setUserDepartment,\r\n    history,\r\n  ]);\r\n\r\n  return (\r\n    <RecentReportWithSpinner\r\n      isLoading={!!!fetchData}\r\n      repoData={fetchData}\r\n      setRecentReportDays={setRecentReportDays}\r\n      setFetchData={setFetchData}\r\n      recentReportDays={recentReportDays}\r\n      setUserData={setUserData}\r\n      setIsLoggedIn={setIsLoggedIn}\r\n      setUserRole={setUserRole}\r\n      setUserDepartment={setUserDepartment}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RecentReportContainer;\r\n","import React, { useState } from \"react\";\r\nimport { Pagination } from \"antd\";\r\nimport PageHeaders from \"../components/PageHeaders\";\r\nimport ReportPage from \"../components/ReportPage\";\r\nimport RecentReportControlBar from \"../components/RecentReportControlBar\";\r\n\r\nconst RecentReport = ({\r\n  repoData,\r\n  setRecentReportDays,\r\n  setFetchData,\r\n  recentReportDays,\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  setUserDepartment,\r\n}) => {\r\n  //console.log(repoData);\r\n  //const [minValue, setMinValue] = useState(0);\r\n  //const [maxValue, setMaxValue] = useState(6);\r\n\r\n  //const [loading, setLoading] = useState(false);\r\n  //const imageRef = useRef(null);\r\n  //const [size, setSize] = useState({});\r\n  // console.log(size);\r\n\r\n  const [changeData, setChangeData] = useState([]);\r\n  const [minValue, setMinValue] = useState(0);\r\n  const [maxValue, setMaxValue] = useState(6);\r\n  const numEachPage = 6;\r\n  const total = repoData.length / numEachPage + 1;\r\n  const handleChange = (value) => {\r\n    setMinValue((value - 1) * numEachPage);\r\n    setMaxValue(value * numEachPage);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"90%\" }}>\r\n      <div style={{ display: \"flex\" }}>\r\n        <PageHeaders title={\"Recent Reports\"} back={false} />\r\n        <RecentReportControlBar\r\n          changeData={changeData}\r\n          setRecentReportDays={setRecentReportDays}\r\n          setFetchData={setFetchData}\r\n          recentReportDays={recentReportDays}\r\n          //fetchingDataAsync={fetchingDataAsync}\r\n          setUserData={setUserData}\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          setUserRole={setUserRole}\r\n          setUserDepartment={setUserDepartment}\r\n        />\r\n      </div>\r\n      {/* <button onClick={() => setLoading(!loading)}>Click For Test!</button> */}\r\n      {/* <Divider style={{ margin: \"30px\", borderColor: \"white\" }} /> */}\r\n      <ReportPage repoData={repoData} minValue={minValue} maxValue={maxValue} />\r\n      <Pagination\r\n        defaultCurrent={1}\r\n        total={total}\r\n        //defaultPageSize={numEachPage} //default size of page\r\n        onChange={handleChange}\r\n        style={{ textAlign: \"center\", padding: \"5%\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentReport;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  Table,\r\n  Modal,\r\n  Popconfirm,\r\n  message,\r\n} from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { UsergroupAddOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  postAddGroupApi,\r\n  getGroupInfoApi,\r\n  postDeleteGroupApi,\r\n  postUpdateGroupApi,\r\n} from \"../../api-list/api-list\";\r\nimport {\r\n  getAuthToken,\r\n  setAuthToken,\r\n  removeAuthToken,\r\n} from \"../../shared/util/getAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst GroupTabContent = ({\r\n  title,\r\n  dep,\r\n  setGroupInfo,\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  setUserDepartment,\r\n}) => {\r\n  //console.log(dep);\r\n  let group =\r\n    dep.grouplist !== undefined\r\n      ? dep.grouplist.map((x) => ({ key: x, group: x }))\r\n      : [];\r\n  const [open, setOpen] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form:\", values);\r\n  };\r\n  const [dataSource, setDataSource] = useState(group);\r\n  const [openEditGroup, setOpenEditGroup] = useState(false);\r\n  const [groupRename, setGroupRename] = useState(\"\");\r\n  const [groupOriname, setGroupOriname] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Group\",\r\n      dataIndex: \"group\",\r\n      key: \"name\",\r\n      width: \"70%\",\r\n      //render: (text) => <a>{text}</a>,\r\n    },\r\n    // {\r\n    //   title: \"Tags\",\r\n    //   key: \"tags\",\r\n    //   dataIndex: \"tags\",\r\n    //   render: (tags) => (\r\n    //     <>\r\n    //       {tags.map((tag) => {\r\n    //         let color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n    //         if (tag === \"loser\") {\r\n    //           color = \"volcano\";\r\n    //         }\r\n    //         return (\r\n    //           <Tag color={color} key={tag}>\r\n    //             {tag.toUpperCase()}\r\n    //           </Tag>\r\n    //         );\r\n    //       })}\r\n    //     </>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: \"30%\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a\r\n            onClick={() => {\r\n              setOpenEditGroup(true);\r\n              setGroupRename(record.group);\r\n              setGroupOriname(record.group);\r\n            }}\r\n          >\r\n            Edit\r\n          </a>\r\n          <Popconfirm\r\n            placement=\"topLeft\"\r\n            title={`是否確定刪除${record.group}?(與該群組相關Report會全部刪除)`}\r\n            //onConfirm={message.info(\"Clicked on Yes.\")}\r\n            onConfirm={(e) => handleRemoveGroup(e, record)}\r\n            okText=\"確定\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <a>Delete</a>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleRemoveGroup = (e, record) => {\r\n    let tempIdx = dep.grouplist.findIndex((x) => x === record.group);\r\n    if (tempIdx !== -1) {\r\n      let removeStr = dep.grouplist.splice(tempIdx, 1);\r\n      let removeJson = {\r\n        grouplist: removeStr,\r\n        departmentname: dep.departmentname,\r\n      };\r\n      //console.log(removeJson);\r\n      postRemoveGroupInfoList(removeJson);\r\n    }\r\n  };\r\n\r\n  const postRemoveGroupInfoList = async (removeJson) => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await postDeleteGroupApi.post(\"\", removeJson, config);\r\n      if (res.data.result) {\r\n        //console.log(res.data);\r\n        getGroupInfoList();\r\n        //return res.data.Path;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      //message.info(\"驗證過期，請重新登入\");\r\n      //history.push(\"/auth\");\r\n      //auth.isLoggedIn\r\n      //auth.logout();\r\n      //RefreshToken(\"test\", \"test\");\r\n      /*setUserData(null);\r\n      setIsLoggedIn(false);\r\n      setUserRole(null);\r\n      history.push(\"/\");*/\r\n\r\n      //   if (err.response.status === 401) {\r\n      //     try {\r\n      //       await refreshTokenApi\r\n      //         .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n      //         .then((res) => {\r\n      //           //console.log(res.data);\r\n      //           setAuthToken(res.data.AccessToken);\r\n      //         })\r\n      //         .catch((errs) => {\r\n      //           //console.log(errs.response);\r\n      //           if (errs.response.status === 401) {\r\n      //             removeAuthToken();\r\n      //             message.info(\"驗證過期，請重新登入\");\r\n      //             setUserData(null);\r\n      //             setIsLoggedIn(false);\r\n      //             setUserRole(null);\r\n      //             history.push(\"/\");\r\n      //             //return Promise.reject(err);\r\n      //           }\r\n      //         });\r\n      //       /*if (res) setAuthToken(res.data.AccessToken);\r\n      //     else setAuthToken(\"\");*/\r\n      //     } catch (_err) {\r\n      //       console.log(_err);\r\n      //     }\r\n      //   }\r\n    }\r\n  };\r\n\r\n  const add = () => {\r\n    const newData = {\r\n      key: dep.grouplist.length,\r\n      group: ``,\r\n    };\r\n    setDataSource([...dataSource, newData]);\r\n  };\r\n\r\n  const modalEditConfirm = () => {\r\n    let renameJson = {\r\n      //grouplist: [groupName],\r\n      group: groupOriname,\r\n      newgroupname: groupRename,\r\n      departmentname: dep.departmentname,\r\n    };\r\n    // console.log(renameJson);\r\n    postEditGroupInfoList(renameJson);\r\n    //postUpdateGroupApi\r\n  };\r\n\r\n  const modalConfirm = () => {\r\n    // const tempDataSource = [...dataSource];\r\n\r\n    // let array = dep.grouplist.push(groupName);\r\n    // let addJson = {\r\n    //   grouplist: array,\r\n    //   departmentname: dep.departmentname,\r\n    // };\r\n    let tempGroupArr = dep.grouplist.concat([groupName]);\r\n    let addJson = {\r\n      grouplist: [groupName], //tempGroupArr,\r\n      departmentname: dep.departmentname,\r\n    };\r\n    //console.log(addJson);\r\n    postGroupInfoList(addJson);\r\n    // let newData = {\r\n    //     key: dep.grouplist.length,\r\n    //     group: groupName,\r\n    //   };\r\n    // setDataSource([...tempDataSource, newData]);\r\n    modalClose();\r\n  };\r\n\r\n  const modalClose = () => {\r\n    setOpen(false);\r\n    setGroupName(\"\");\r\n    setOpenEditGroup(false);\r\n  };\r\n\r\n  const postEditGroupInfoList = async (addJson) => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    if (addJson.group === addJson.newgroupname) {\r\n      message.warning(\"Did not change the group name.\");\r\n    } else {\r\n      try {\r\n        const res = await postUpdateGroupApi.post(\"\", addJson, config);\r\n        if (res.data.result) {\r\n          getGroupInfoList();\r\n          setOpenEditGroup(false);\r\n          //return res.data.Path;\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        //message.info(\"驗證過期，請重新登入\");\r\n        //history.push(\"/auth\");\r\n        //auth.isLoggedIn\r\n        //auth.logout();\r\n        //RefreshToken(\"test\", \"test\");\r\n        /*setUserData(null);\r\n        setIsLoggedIn(false);\r\n        setUserRole(null);\r\n        history.push(\"/\");*/\r\n\r\n        //   if (err.response.status === 401) {\r\n        //     try {\r\n        //       await refreshTokenApi\r\n        //         .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n        //         .then((res) => {\r\n        //           //console.log(res.data);\r\n        //           setAuthToken(res.data.AccessToken);\r\n        //         })\r\n        //         .catch((errs) => {\r\n        //           //console.log(errs.response);\r\n        //           if (errs.response.status === 401) {\r\n        //             removeAuthToken();\r\n        //             message.info(\"驗證過期，請重新登入\");\r\n        //             setUserData(null);\r\n        //             setIsLoggedIn(false);\r\n        //             setUserRole(null);\r\n        //             history.push(\"/\");\r\n        //             //return Promise.reject(err);\r\n        //           }\r\n        //         });\r\n        //       /*if (res) setAuthToken(res.data.AccessToken);\r\n        //     else setAuthToken(\"\");*/\r\n        //     } catch (_err) {\r\n        //       console.log(_err);\r\n        //     }\r\n        //   }\r\n      }\r\n    }\r\n  };\r\n\r\n  const postGroupInfoList = async (addJson) => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await postAddGroupApi.post(\"\", addJson, config);\r\n      if (res.data.result) {\r\n        getGroupInfoList();\r\n        setOpenEditGroup(false);\r\n        //return res.data.Path;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      removeAuthToken();\r\n      message.info(\"驗證過期，請重新登入\");\r\n      setUserData(null);\r\n      setIsLoggedIn(false);\r\n      setUserRole(null);\r\n      setUserDepartment(null);\r\n      history.push(\"/\");\r\n\r\n      //   if (err.response.status === 401) {\r\n      //     try {\r\n      //       await refreshTokenApi\r\n      //         .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n      //         .then((res) => {\r\n      //           //console.log(res.data);\r\n      //           setAuthToken(res.data.AccessToken);\r\n      //         })\r\n      //         .catch((errs) => {\r\n      //           //console.log(errs.response);\r\n      //           if (errs.response.status === 401) {\r\n      //             removeAuthToken();\r\n      //             message.info(\"驗證過期，請重新登入\");\r\n      //             setUserData(null);\r\n      //             setIsLoggedIn(false);\r\n      //             setUserRole(null);\r\n      //             history.push(\"/\");\r\n      //             //return Promise.reject(err);\r\n      //           }\r\n      //         });\r\n      //       /*if (res) setAuthToken(res.data.AccessToken);\r\n      //     else setAuthToken(\"\");*/\r\n      //     } catch (_err) {\r\n      //       console.log(_err);\r\n      //     }\r\n      //   }\r\n    }\r\n  };\r\n\r\n  const getGroupInfoList = async () => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    try {\r\n      const res = await getGroupInfoApi.get(\"\", config);\r\n      if (res.data) {\r\n        // let panes = /*new Array(dep).fill(null)*/ res.data.departmentlist\r\n        //   .filter((y) => y.departmentname !== \"Admin\")\r\n        //   .map((x, index) => {\r\n        //     const id = String(index + 1);\r\n        //     return {\r\n        //       title: x.departmentname, //`Tab ${id}`,\r\n        //       //content: `Content of Tab Pane ${id}`,\r\n        //       key: id,\r\n        //     };\r\n        //   });\r\n        // setPane(panes);\r\n        setGroupInfo(res.data.departmentlist);\r\n        //return res.data.Path;\r\n      }\r\n    } catch (err) {\r\n      console.log(err.response);\r\n      //message.info(\"驗證過期，請重新登入\");\r\n      //history.push(\"/auth\");\r\n      //auth.isLoggedIn\r\n      //auth.logout();\r\n      //RefreshToken(\"test\", \"test\");\r\n      /*setUserData(null);\r\n            setIsLoggedIn(false);\r\n            setUserRole(null);\r\n            history.push(\"/\");*/\r\n\r\n      // if (err.response.status === 401) {\r\n      //   try {\r\n      //     await refreshTokenApi\r\n      //       .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n      //       .then((res) => {\r\n      //         //console.log(res.data);\r\n      //         setAuthToken(res.data.AccessToken);\r\n      //       })\r\n      //       .catch((errs) => {\r\n      //         //console.log(errs.response);\r\n      //         if (errs.response.status === 401) {\r\n      //           removeAuthToken();\r\n      //           message.info(\"驗證過期，請重新登入\");\r\n      //           setUserData(null);\r\n      //           setIsLoggedIn(false);\r\n      //           setUserRole(null);\r\n      //           history.push(\"/\");\r\n      //           //return Promise.reject(err);\r\n      //         }\r\n      //       });\r\n      //     /*if (res) setAuthToken(res.data.AccessToken);\r\n      //       else setAuthToken(\"\");*/\r\n      //   } catch (_err) {\r\n      //     console.log(_err);\r\n      //   }\r\n      // }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        name=\"dynamic_form_nest_item\"\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n        style={{ width: \"100%\", margin: \"auto\" }}\r\n      >\r\n        <Table columns={columns} dataSource={group} pagination={false} />\r\n        <Form.List name=\"users\">\r\n          {(fields) => (\r\n            <Button\r\n              type=\"dashed\"\r\n              //onClick={() => add()}\r\n              onClick={() => setOpen(true)}\r\n              block\r\n              icon={<PlusOutlined />}\r\n            >\r\n              Add group\r\n            </Button>\r\n          )}\r\n        </Form.List>\r\n        {/* {dep.group.map((x) => (\r\n        <Form.Item>{x}</Form.Item>\r\n      ))} \r\n      <Form.List name=\"users\">\r\n        {(fields, { add, remove }) => (\r\n          <>\r\n            {fields.map(({ key, name, ...restField }) => (\r\n              <Space\r\n                key={key}\r\n                style={{ display: \"flex\" }}\r\n                align=\"baseline\"\r\n              >\r\n               \r\n                <Form.Item\r\n                  {...restField}\r\n                  name={[name, \"last\"]}\r\n                  rules={[{ required: true, message: \"Missing last name\" }]}\r\n                >\r\n                  <Input placeholder=\"Group Name\" />\r\n                </Form.Item>\r\n                <MinusCircleOutlined onClick={() => remove(name)} />\r\n              </Space>\r\n            ))}\r\n            <Form.Item>\r\n              <Button\r\n                type=\"dashed\"\r\n                onClick={() => add()}\r\n                block\r\n                icon={<PlusOutlined />}\r\n              >\r\n                Add field\r\n              </Button>\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n      </Form.List>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>*/}\r\n      </Form>\r\n      <Modal\r\n        title=\"Add Group\"\r\n        width={400}\r\n        visible={open}\r\n        onOk={modalConfirm}\r\n        //okButtonProps=\r\n        //   <Popconfirm\r\n        //     placement=\"topLeft\"\r\n        //     title={\"送出無法修改\"}\r\n        //     onConfirm={modalConfirm}\r\n        //     okText=\"Yes\"\r\n        //     cancelText=\"No\"\r\n        //   ></Popconfirm>\r\n        // }\r\n        onCancel={modalClose}\r\n        closable={false}\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          placeholder=\"Please input new group name.\"\r\n          prefix={<UsergroupAddOutlined />}\r\n          value={groupName}\r\n          onChange={(e) => setGroupName(e.target.value)}\r\n        />\r\n      </Modal>\r\n      <Modal\r\n        title=\"Edit Group\"\r\n        width={400}\r\n        visible={openEditGroup}\r\n        onOk={modalEditConfirm}\r\n        onCancel={modalClose}\r\n        closable={false}\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          placeholder=\"Please rename group name.\"\r\n          prefix={<UsergroupAddOutlined />}\r\n          value={groupRename}\r\n          onChange={(e) => setGroupRename(e.target.value)}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupTabContent;\r\n","import React, { useState } from \"react\";\r\nimport { Tabs, Button, Modal, Input, message } from \"antd\";\r\nimport { UsergroupAddOutlined } from \"@ant-design/icons\";\r\nimport GroupTabContent from \"./GroupTabContent\";\r\nimport WithSpinner from \"../../shared/components/UIELements/WithSpinner\";\r\nimport { postAddDepartmentApi, getGroupInfoApi } from \"../../api-list/api-list\";\r\nimport {\r\n  getAuthToken,\r\n  setAuthToken,\r\n  removeAuthToken,\r\n} from \"../../shared/util/getAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst { TabPane } = Tabs;\r\nconst GroupTabContentWithSpinner = WithSpinner(GroupTabContent);\r\n\r\nconst GroupClassify = ({\r\n  dep,\r\n  groupInfo,\r\n  setGroupInfo,\r\n  pane,\r\n  setPane,\r\n  setUserData,\r\n  setIsLoggedIn,\r\n  setUserRole,\r\n  setUserDepartment,\r\n  department,\r\n}) => {\r\n  //console.log(dep, groupInfo);\r\n  //const [newTabIndex, setNewTabIndex] = useState(0);\r\n  //   let panes = /*new Array(dep).fill(null)*/ groupInfo\r\n  //     .filter((y) => y.departmentname !== \"Admin\")\r\n  //     .map((x, index) => {\r\n  //       const id = String(index + 1);\r\n  //       return {\r\n  //         title: x.departmentname, //`Tab ${id}`,\r\n  //         //content: `Content of Tab Pane ${id}`,\r\n  //         key: id,\r\n  //       };\r\n  //     });\r\n  const history = useHistory();\r\n  const [activeKey, setActiveKey] = useState(\r\n    pane.length !== 0 ? pane[0].key : 0\r\n  );\r\n  //const [pane, setPane] = useState(panes);\r\n  const [open, setOpen] = useState(false);\r\n  const [departmentName, setDepartmentName] = useState(\"\");\r\n\r\n  const onChange = (activeKey) => {\r\n    //console.log(activeKey);\r\n    setActiveKey(activeKey);\r\n    //this.setState({ activeKey });\r\n  };\r\n\r\n  const onEdit = (targetKey, action) => {\r\n    //console.log(action, targetKey);\r\n    remove(targetKey);\r\n    //this[action](targetKey);\r\n  };\r\n\r\n  /*const add = () => {\r\n    const p = [...pane];\r\n    //const idx=newTabIndex\r\n    let key = `newTab${p.length + 1}`;\r\n    p.push({ title: \"New Tab\", content: \"New Tab Pane\", key: key });\r\n\r\n    setPane(p);\r\n    setActiveKey(key);\r\n    //this.setState({ panes, activeKey });\r\n  };*/\r\n\r\n  const remove = (targetKey) => {\r\n    // const key = activeKey.toString();\r\n    let lastIndex;\r\n    pane.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = pane.filter((pane) => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        //key = panes[lastIndex].key;\r\n        setActiveKey(panes[lastIndex].key);\r\n      } else {\r\n        //key = panes[0].key;\r\n        setActiveKey(panes[0].key);\r\n      }\r\n    }\r\n    setPane(panes);\r\n    //setActiveKey(key);\r\n    //this.setState({ panes, activeKey });\r\n  };\r\n\r\n  const modalConfirm = () => {\r\n    const tempPane = [...pane];\r\n    let key = `newTab${tempPane.length + 1}`;\r\n    tempPane.push({\r\n      title: departmentName,\r\n      content: departmentName + \"Pane\",\r\n      key: key + \"dep\",\r\n    });\r\n\r\n    let addJson = { grouplist: [], departmentname: departmentName };\r\n    postGroupInfoList(addJson);\r\n    //setPane(tempPane);\r\n    //setActiveKey(key);\r\n    modalClose();\r\n  };\r\n  const modalClose = () => {\r\n    setOpen(false);\r\n    setDepartmentName(\"\");\r\n  };\r\n\r\n  const postGroupInfoList = async (addJson) => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await postAddDepartmentApi.post(\"\", addJson, config);\r\n      if (res.data.result) {\r\n        //console.log(res.data);\r\n        getGroupInfoList();\r\n        //return res.data.Path;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      removeAuthToken();\r\n\r\n      setUserData(null);\r\n      setIsLoggedIn(false);\r\n      setUserRole(null);\r\n      setUserDepartment(null);\r\n      message.info(\"驗證過期，請重新登入\");\r\n      history.push(\"/\");\r\n      //history.push(\"/auth\");\r\n      //auth.isLoggedIn\r\n      //auth.logout();\r\n      //RefreshToken(\"test\", \"test\");\r\n      /*setUserData(null);\r\n      setIsLoggedIn(false);\r\n      setUserRole(null);\r\n      history.push(\"/\");*/\r\n\r\n      //   if (err.response.status === 401) {\r\n      //     try {\r\n      //       await refreshTokenApi\r\n      //         .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n      //         .then((res) => {\r\n      //           //console.log(res.data);\r\n      //           setAuthToken(res.data.AccessToken);\r\n      //         })\r\n      //         .catch((errs) => {\r\n      //           //console.log(errs.response);\r\n      //           if (errs.response.status === 401) {\r\n      //             removeAuthToken();\r\n      //             message.info(\"驗證過期，請重新登入\");\r\n      //             setUserData(null);\r\n      //             setIsLoggedIn(false);\r\n      //             setUserRole(null);\r\n      //             history.push(\"/\");\r\n      //             //return Promise.reject(err);\r\n      //           }\r\n      //         });\r\n      //       /*if (res) setAuthToken(res.data.AccessToken);\r\n      //     else setAuthToken(\"\");*/\r\n      //     } catch (_err) {\r\n      //       console.log(_err);\r\n      //     }\r\n      //   }\r\n    }\r\n  };\r\n\r\n  const getGroupInfoList = async () => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    try {\r\n      const res = await getGroupInfoApi.get(\"\", config);\r\n      if (res.data) {\r\n        let panes = /*new Array(dep).fill(null)*/ res.data.departmentlist\r\n          .filter((y) => y.departmentname !== \"Admin\")\r\n          .map((x, index) => {\r\n            const id = String(index + 1);\r\n            return {\r\n              title: x.departmentname, //`Tab ${id}`,\r\n              //content: `Content of Tab Pane ${id}`,\r\n              key: id,\r\n            };\r\n          });\r\n        setPane(panes);\r\n        setGroupInfo(res.data.departmentlist);\r\n        //return res.data.Path;\r\n      }\r\n    } catch (err) {\r\n      console.log(err.response);\r\n      //message.info(\"驗證過期，請重新登入\");\r\n      //history.push(\"/auth\");\r\n      //auth.isLoggedIn\r\n      //auth.logout();\r\n      //RefreshToken(\"test\", \"test\");\r\n      /*setUserData(null);\r\n            setIsLoggedIn(false);\r\n            setUserRole(null);\r\n            history.push(\"/\");*/\r\n\r\n      // if (err.response.status === 401) {\r\n      //   try {\r\n      //     await refreshTokenApi\r\n      //       .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n      //       .then((res) => {\r\n      //         //console.log(res.data);\r\n      //         setAuthToken(res.data.AccessToken);\r\n      //       })\r\n      //       .catch((errs) => {\r\n      //         //console.log(errs.response);\r\n      //         if (errs.response.status === 401) {\r\n      //           removeAuthToken();\r\n      //           message.info(\"驗證過期，請重新登入\");\r\n      //           setUserData(null);\r\n      //           setIsLoggedIn(false);\r\n      //           setUserRole(null);\r\n      //           history.push(\"/\");\r\n      //           //return Promise.reject(err);\r\n      //         }\r\n      //       });\r\n      //     /*if (res) setAuthToken(res.data.AccessToken);\r\n      //       else setAuthToken(\"\");*/\r\n      //   } catch (_err) {\r\n      //     console.log(_err);\r\n      //   }\r\n      // }\r\n    }\r\n  };\r\n  const slot = React.useMemo(() => {\r\n    if (department !== \"Admin\") return null;\r\n    else return <Button onClick={() => setOpen(true)}>ADD</Button>;\r\n  }, [department]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"90%\",\r\n        margin: \"auto\",\r\n      }}\r\n    >\r\n      {/* <div style={{ marginBottom: 16 }}>\r\n        <Button onClick={() => setOpen(true)}>ADD</Button>\r\n      </div> */}\r\n      <Tabs\r\n        style={{\r\n          borderStyle: \"solid\",\r\n          padding: \"20px\",\r\n          borderColor: \"lightgray\",\r\n          height: \"65vh\",\r\n          borderRadius: \"3px\",\r\n          borderWidth: \"0.5px\",\r\n          boxShadow: \"0 3px 7px rgba(0, 0, 0, 0.3)\",\r\n          overflowY: \"auto\",\r\n        }}\r\n        hideAdd\r\n        size=\"large\"\r\n        onChange={onChange}\r\n        activeKey={activeKey}\r\n        //type=\"editable-card\"\r\n        //type=\"card\"\r\n        onEdit={onEdit}\r\n        tabPosition=\"left\"\r\n        tabBarExtraContent={\r\n          slot\r\n          //department === \"Admin\" ?right: <Button onClick={() => setOpen(true)}>ADD</Button>:null,\r\n        }\r\n      >\r\n        {pane.map((pane) => (\r\n          <TabPane tab={pane.title} key={pane.key} closable={false}>\r\n            {/* {pane.content} */}\r\n            <GroupTabContentWithSpinner\r\n              isLoading={!!!groupInfo}\r\n              title={pane.title}\r\n              // dep={dep.filter((x) => x.dep === pane.title)[0]}\r\n              dep={groupInfo.filter((x) => x.departmentname === pane.title)[0]}\r\n              setGroupInfo={setGroupInfo}\r\n              setUserData={setUserData}\r\n              setIsLoggedIn={setIsLoggedIn}\r\n              setUserRole={setUserRole}\r\n              setUserDepartment={setUserDepartment}\r\n            />\r\n          </TabPane>\r\n        ))}\r\n      </Tabs>\r\n      <Modal\r\n        title=\"Add Department\"\r\n        width={400}\r\n        visible={open}\r\n        onOk={modalConfirm}\r\n        //okButtonProps=\r\n        //   <Popconfirm\r\n        //     placement=\"topLeft\"\r\n        //     title={\"送出無法修改\"}\r\n        //     onConfirm={modalConfirm}\r\n        //     okText=\"Yes\"\r\n        //     cancelText=\"No\"\r\n        //   ></Popconfirm>\r\n        // }\r\n        onCancel={modalClose}\r\n        closable={false}\r\n      >\r\n        <Input\r\n          size=\"large\"\r\n          placeholder=\"Please input new department name.\"\r\n          prefix={<UsergroupAddOutlined />}\r\n          value={departmentName}\r\n          onChange={(e) => setDepartmentName(e.target.value)}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupClassify;\r\n","import React from \"react\";\r\nimport { PageHeader, Descriptions } from \"antd\";\r\nimport Breadcrumbs from \"./Breadcrumbs\";\r\n\r\nconst PageHeaders = ({ title, back }) => {\r\n  return (\r\n    <PageHeader\r\n      style={{\r\n        width: \"50%\",\r\n        margin: \"auto auto auto 5em\",\r\n        // width: \"90%\",\r\n        // margin: \"auto\",\r\n      }}\r\n      //className=\"site-page-header\"\r\n      onBack={() => window.history.back()}\r\n      title={<h2>{title}</h2>}\r\n      //subTitle=\"This is a subtitle\"\r\n      // extra={[\r\n      //   <RangePicker\r\n      //     defaultValue={[\r\n      //       moment(\"2021/07/01\", dateFormat),\r\n      //       moment(\"2021/07/05\", dateFormat),\r\n      //     ]}\r\n      //     size=\"large\"\r\n      //     format={dateFormat}\r\n      //   />,\r\n      // ]}\r\n    >\r\n      <Descriptions size=\"small\" column={2}>\r\n        <Descriptions.Item>\r\n          <Breadcrumbs title={title} />\r\n        </Descriptions.Item>\r\n        {/* <Descriptions.Item label=\"Created\">Lili Qu</Descriptions.Item>\r\n        <Descriptions.Item label=\"Association\">\r\n          <a>421421</a>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Creation Time\">2017-01-10</Descriptions.Item>\r\n        <Descriptions.Item label=\"Effective Time\">2017-10-10</Descriptions.Item>\r\n        <Descriptions.Item label=\"Remarks\">\r\n          Gonghu Road, Xihu District, Hangzhou, Zhejiang, China\r\n        </Descriptions.Item> */}\r\n      </Descriptions>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default PageHeaders;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  getAuthToken,\r\n  setAuthToken,\r\n  removeAuthToken,\r\n} from \"../../shared/util/getAuth\";\r\nimport { getGroupInfoApi, refreshTokenApi } from \"../../api-list/api-list\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport { message } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GroupClassify from \"../components/GroupClassify\";\r\nimport PageHeaders from \"../components/PageHeadersSub\";\r\nimport WithSpinner from \"../../shared/components/UIELements/WithSpinner\";\r\nimport AuthControlBar from \"../components/AuthControlBar\";\r\nconst GroupClassifyWithSpinner = WithSpinner(GroupClassify);\r\n//const AuthControlBarWithSpinner = WithSpinner(AuthControlBar);\r\n\r\nconst test = {\r\n  departmentlist: [\r\n    {\r\n      grouplist: [],\r\n      departmentname: \"Other\",\r\n    },\r\n    {\r\n      grouplist: [],\r\n      departmentname: \"Admin\",\r\n    },\r\n    {\r\n      grouplist: [\"TESTGROUP2\", \"TESTGROUP1\"],\r\n      departmentname: \"CIM\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst GroupSetting = (\r\n  props\r\n  //{ setUserData, setIsLoggedIn, setUserRole, setUserDepartment }\r\n) => {\r\n  //console.log(props.location.state);\r\n  const [groupInfo, setGroupInfo] = useState();\r\n  const auth = useContext(AuthContext);\r\n  //console.log(auth.Department, auth.Role);\r\n  const history = useHistory();\r\n  const [pane, setPane] = useState();\r\n\r\n  useEffect(() => {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const getGroupInfoList = async () => {\r\n      //Event.preventDefault();\r\n      try {\r\n        const res = await getGroupInfoApi.get(\"\", config);\r\n        if (res.data) {\r\n          //console.log(res.data.departmentlist);\r\n          //   let userArr = res.data.departmentlist.map((x, idx) => {\r\n          //     x.key = idx;\r\n          //     return x;\r\n          //   });\r\n          let panes = [];\r\n          if (res.data.departmentlist.length !== 0) {\r\n            if (auth.Department === \"Admin\") {\r\n              panes = res.data.departmentlist\r\n                .filter(\r\n                  (y) =>\r\n                    y.departmentname !== \"Admin\" && y.departmentname !== \"Other\"\r\n                )\r\n                .map((x, index) => {\r\n                  const id = String(index + 1);\r\n                  return {\r\n                    title: x.departmentname,\r\n                    key: id,\r\n                  };\r\n                });\r\n            } else if (auth.Department !== \"Admin\" && auth.Role === \"Leader\") {\r\n              panes = res.data.departmentlist\r\n                .filter((y) => y.departmentname === auth.Department)\r\n                .map((x, index) => {\r\n                  const id = String(index + 1);\r\n                  return {\r\n                    title: x.departmentname,\r\n                    key: id,\r\n                  };\r\n                });\r\n            }\r\n          }\r\n          setPane(panes);\r\n\r\n          setGroupInfo(res.data.departmentlist);\r\n          //return res.data.Path;/*new Array(dep).fill(null)*/\r\n        }\r\n      } catch (err) {\r\n        console.log(err.response);\r\n        if (err.response.status === 401) {\r\n          removeAuthToken();\r\n          message.info(\"驗證過期，請重新登入\");\r\n          props.setUserData(null);\r\n          props.setIsLoggedIn(false);\r\n          props.setUserDepartment(null);\r\n          props.setUserRole(null);\r\n          history.push(\"/\");\r\n        }\r\n\r\n        // if (err.response.status === 401) {\r\n        //   try {\r\n        //     await refreshTokenApi\r\n        //       .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n        //       .then((res) => {\r\n        //         //console.log(res.data);\r\n        //         setAuthToken(res.data.AccessToken);\r\n        //       })\r\n        //       .catch((errs) => {\r\n        //         //console.log(errs.response);\r\n        //         if (errs.response.status === 401) {\r\n        //           removeAuthToken();\r\n        //           message.info(\"驗證過期，請重新登入\");\r\n        //           setUserData(null);\r\n        //           setIsLoggedIn(false);\r\n        //           setUserDepartment(null);\r\n        //           setUserRole(null);\r\n        //           history.push(\"/\");\r\n        //           //return Promise.reject(err);\r\n        //         }\r\n        //       });\r\n        //     /*if (res) setAuthToken(res.data.AccessToken);\r\n        //       else setAuthToken(\"\");*/\r\n        //   } catch (_err) {\r\n        //     console.log(_err);\r\n        //   }\r\n        // }\r\n      }\r\n    };\r\n    getGroupInfoList();\r\n  }, [\r\n    props,\r\n    //setUserData,\r\n    history,\r\n    auth.Department,\r\n    auth.Role,\r\n    //setIsLoggedIn,\r\n    //setUserRole,\r\n    //setUserDepartment,\r\n    //auth.UserData.RefreshToken,\r\n  ]);\r\n\r\n  return (\r\n    <div style={{ width: \"90%\" }}>\r\n      <div style={{ display: \"flex\" }}>\r\n        <PageHeaders title={\"Group Setting\"} back={true} />\r\n        <AuthControlBar\r\n          //isLoading={!!!useInfo}\r\n          scheduleData={props.location.state}\r\n        />\r\n      </div>\r\n      <GroupClassifyWithSpinner\r\n        isLoading={!!!groupInfo}\r\n        dep={props.location.state}\r\n        groupInfo={groupInfo}\r\n        setGroupInfo={setGroupInfo}\r\n        pane={pane}\r\n        setPane={setPane}\r\n        setUserData={props.setUserData}\r\n        setIsLoggedIn={props.setIsLoggedIn}\r\n        setUserRole={props.setUserRole}\r\n        setUserDepartment={props.setUserDepartment}\r\n        department={auth.Department}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupSetting;\r\n","import React, { useContext } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport {\r\n  AppstoreOutlined,\r\n  MailOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nconst { SubMenu } = Menu;\r\n\r\nconst GroupDistribute = ({\r\n  dep,\r\n  setChooseGroup,\r\n  groupInfo,\r\n  setChooseDepartment,\r\n}) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const handleClick = ({ item, key, keyPath, domEvent }) => {\r\n    //console.log(keyPath);\r\n    setChooseGroup(keyPath[0]);\r\n    setChooseDepartment(keyPath[1]);\r\n  };\r\n  const Template = () => {\r\n    if (auth.Department === \"Admin\") {\r\n      groupInfo\r\n        .filter(\r\n          (y) => y.departmentname !== \"Admin\" && y.departmentname !== \"Other\"\r\n        )\r\n        .map((x, index) => {\r\n          const id = String(index + 1);\r\n          return {\r\n            title: x.departmentname,\r\n            key: id,\r\n          };\r\n        });\r\n    } else if (auth.Department !== \"Admin\" && auth.Role === \"Leader\") {\r\n      groupInfo\r\n        .filter((y) => y.departmentname === auth.Department)\r\n        .map((x, index) => {\r\n          const id = String(index + 1);\r\n          return {\r\n            title: x.departmentname,\r\n            key: id,\r\n          };\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      onClick={handleClick}\r\n      style={{ width: 256 }}\r\n      defaultSelectedKeys={[\"1\"]}\r\n      //defaultOpenKeys={[\"sub1\"]}\r\n      mode=\"inline\"\r\n    >\r\n      <>\r\n        {auth.Department === \"Admin\" &&\r\n          groupInfo\r\n            .filter(\r\n              (x) =>\r\n                x.departmentname !== \"Admin\" && x.departmentname !== \"Other\"\r\n            )\r\n            .map((x) => (\r\n              <SubMenu\r\n                key={x.departmentname}\r\n                icon={<AppstoreOutlined />}\r\n                title={x.departmentname}\r\n                // onTitleClick={({ key, domEvent }) => console.log(key, domEvent)}\r\n              >\r\n                {x.grouplist.map((y) => (\r\n                  <Menu.Item key={y}>{y}</Menu.Item>\r\n                ))}\r\n              </SubMenu>\r\n            ))}\r\n        {auth.Department !== \"Admin\" &&\r\n          auth.Role === \"Leader\" &&\r\n          groupInfo\r\n            .filter((y) => y.departmentname === auth.Department)\r\n            .map((x) => (\r\n              <SubMenu\r\n                key={x.departmentname}\r\n                icon={<AppstoreOutlined />}\r\n                title={x.departmentname}\r\n                // onTitleClick={({ key, domEvent }) => console.log(key, domEvent)}\r\n              >\r\n                {x.grouplist.map((y) => (\r\n                  <Menu.Item key={y}>{y}</Menu.Item>\r\n                ))}\r\n              </SubMenu>\r\n            ))}\r\n      </>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default GroupDistribute;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthControlBar from \"../components/AuthControlBar\";\r\nimport GroupDistribute from \"../components/GroupDistribute\";\r\nimport GroupTransfer from \"../components/GroupTransfer\";\r\nimport PageHeaders from \"../components/PageHeadersSub\";\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getAuthToken, removeAuthToken } from \"../../shared/util/getAuth\";\r\nimport { Button, message } from \"antd\";\r\nimport {\r\n  getGroupInfoApi,\r\n  refreshTokenApi,\r\n  getUserInfoApi,\r\n} from \"../../api-list/api-list\";\r\nimport WithSpinner from \"../../shared/components/UIELements/WithSpinner\";\r\nconst GroupDistributeWithSpinner = WithSpinner(GroupDistribute);\r\nconst GroupTransferWithSpinner = WithSpinner(GroupTransfer);\r\n\r\nconst AuthSetting = (\r\n  props\r\n  //{ setUserData, setIsLoggedIn, setUserRole, setUserDepartment }\r\n) => {\r\n  //console.log(setUserData);\r\n  const [groupInfo, setGroupInfo] = useState();\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [pane, setPane] = useState();\r\n  const [useInfo, setUseInfo] = useState();\r\n  const [chooseGroup, setChooseGroup] = useState(\"\");\r\n  const [chooseDepartment, setChooseDepartment] = useState(\"\");\r\n  useEffect(() => {\r\n    // let mounted = true;\r\n    //if (mounted) {\r\n    const token = getAuthToken();\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const getUserInfoList = async () => {\r\n      try {\r\n        const res = await getUserInfoApi.get(\"\", config);\r\n        if (res.data) {\r\n          // console.log(res.data);\r\n          let userArr = res.data.users.map((x, idx) => {\r\n            x.key = idx;\r\n            return x;\r\n          });\r\n          setUseInfo(userArr);\r\n          //return res.data.Path;\r\n        }\r\n      } catch (err) {\r\n        //console.log(err.response);\r\n        if (err.response.status === 401) {\r\n          removeAuthToken();\r\n          message.info(\"驗證過期，請重新登入\");\r\n          props.setUserData(null);\r\n          props.setIsLoggedIn(false);\r\n          props.setUserRole(null);\r\n          props.setUserDepartment(null);\r\n          history.push(\"/\");\r\n        }\r\n        // if (err.response.status === 401) {\r\n        //   try {\r\n        //     await refreshTokenApi\r\n        //       .post(\"\", { refreshtoken: auth.UserData.RefreshToken }, config)\r\n        //       .then((res) => {\r\n        //         //console.log(res.data);\r\n        //         setAuthToken(res.data.AccessToken);\r\n        //       })\r\n        //       .catch((errs) => {\r\n        //         //console.log(errs.response);\r\n        //         if (errs.response.status === 401) {\r\n        //           removeAuthToken();\r\n        //           message.info(\"驗證過期，請重新登入\");\r\n        //           setUserData(null);\r\n        //           setIsLoggedIn(false);\r\n        //           setUserRole(null);\r\n        //           setUserDepartment(null);\r\n        //           history.push(\"/\");\r\n        //           //return Promise.reject(err);\r\n        //         }\r\n        //       });\r\n        //     /*if (res) setAuthToken(res.data.AccessToken);\r\n        // else setAuthToken(\"\");*/\r\n        //   } catch (_err) {\r\n        //     console.log(_err);\r\n        //     removeAuthToken();\r\n        //     message.info(\"驗證過期，請重新登入\");\r\n        //     setUserData(null);\r\n        //     setIsLoggedIn(false);\r\n        //     setUserRole(null);\r\n        //     setUserDepartment(null);\r\n        //     history.push(\"/\");\r\n        //   }\r\n        // }\r\n      }\r\n    };\r\n    getUserInfoList();\r\n    // }\r\n\r\n    // return function cleanup() {\r\n    //   mounted = false;\r\n    // };\r\n  }, [\r\n    props,\r\n    //props.setUserData,\r\n    history,\r\n    //props.setIsLoggedIn,\r\n    //props.setUserRole,\r\n    //props.setUserDepartment,\r\n    //auth.UserData.RefreshToken,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const getGroupInfoList = async () => {\r\n      try {\r\n        const res = await getGroupInfoApi.get(\"\");\r\n        if (res.data) {\r\n          let panes = [];\r\n          if (res.data.departmentlist.length !== 0) {\r\n            panes = res.data.departmentlist /*new Array(dep).fill(null)*/\r\n              .filter(\r\n                (y) =>\r\n                  y.departmentname !== \"Admin\" && y.departmentname !== \"Other\"\r\n              )\r\n              .map((x, index) => {\r\n                const id = String(index + 1);\r\n                return {\r\n                  title: x.departmentname, //`Tab ${id}`,\r\n                  //content: `Content of Tab Pane ${id}`,\r\n                  key: id,\r\n                };\r\n              });\r\n          }\r\n\r\n          setPane(panes);\r\n          setGroupInfo(res.data.departmentlist);\r\n          //return res.data.Path;\r\n        }\r\n      } catch (err) {\r\n        console.log(err.response);\r\n      }\r\n    };\r\n    getGroupInfoList();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"90%\" }}>\r\n      <div style={{ display: \"flex\" }}>\r\n        <PageHeaders title={\"Auth Setting\"} back={true} />\r\n        <AuthControlBar\r\n          //isLoading={!!!useInfo}\r\n          scheduleData={props.location.state.dep}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          margin: \"auto\",\r\n          borderStyle: \"solid\",\r\n          padding: \"20px\",\r\n          borderColor: \"lightgray\",\r\n          height: \"65vh\",\r\n          borderRadius: \"3px\",\r\n          borderWidth: \"0.5px\",\r\n          boxShadow: \"0 3px 7px rgba(0, 0, 0, 0.3)\",\r\n          overflowY: \"auto\",\r\n          width: \"90%\",\r\n        }}\r\n      >\r\n        <GroupDistributeWithSpinner\r\n          isLoading={!!!groupInfo}\r\n          dep={props.location.state.dep}\r\n          setChooseGroup={setChooseGroup}\r\n          groupInfo={groupInfo}\r\n          setChooseDepartment={setChooseDepartment}\r\n        />\r\n        <GroupTransferWithSpinner\r\n          isLoading={!!!useInfo}\r\n          json={useInfo}\r\n          target={props.location.state.target}\r\n          chooseGroup={chooseGroup}\r\n          setUseInfo={setUseInfo}\r\n          chooseDepartment={chooseDepartment}\r\n          setUserData={props.setUserData}\r\n          setIsLoggedIn={props.setIsLoggedIn}\r\n          setUserRole={props.setUserRole}\r\n          setUserDepartment={props.setUserDepartment}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthSetting;\r\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\nimport { AuthContext } from \"./shared/contexts/auth-context\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport Auth from \"./Auth/pages/Auth\";\nimport \"./App.css\";\nimport Scheduler from \"./Scheduler/pages/Scheduler\";\nimport Report from \"./HistoryReports/pages/Report\";\nimport SchedulerAdd from \"./Scheduler/pages/SchedulerAdd\";\nimport SchedulerEdit from \"./Scheduler/pages/SchedulerEdit\";\nimport Authority from \"./Authority/pages/Authority\";\nimport Register from \"./Auth/pages/Register\";\nimport Error404Page from \"./Auth/pages/Error404Page\";\nimport Error403Page from \"./Auth/pages/Error403Page\";\nimport RecentReportContainer from \"./HistoryReports/pages/RecentReportContainer\";\nimport {\n  setAuthToken,\n  getAuthToken,\n  removeAuthToken,\n} from \"./shared/util/getAuth\";\nimport { getMe } from \"./Auth/pages/Authenticated\";\nimport GroupSetting from \"./Authority/pages/GroupSetting\";\nimport AuthSetting from \"./Authority/pages/AuthSetting\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //const [isLoading, setIsLoading] = useState(true);\n  const [userDepartment, setUserDepartment] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(true);\n  // const [userRole, setUserRole] = useState(\"Admin\");\n  // const [user, setUser] = useState(\"Admin\");\n\n  // useEffect(() => {\n  //   const userId = localStorage.getItem(\"user\");\n  //   //console.log(userId);\n  //   let user = null;\n  //   if (userId && userId !== \"null\" && userId !== \"undefined\") {\n  //     user = JSON.parse(userId);\n  //     if (user.user) {\n  //       fetch(getUserInfoApi, {\n  //         method: \"GET\",\n  //         // body: JSON.stringify({\n  //         //   user: user.user,\n  //         // }),\n  //         headers: {\n  //           \"Content-type\": \"application/json\",\n  //         },\n  //       })\n  //         .then((res) => res.json())\n  //         .then((data) => {\n  //           if (data.users.length !== 0) {\n  //             const updatedUser = data.users.find(\n  //               (cuser) => cuser.account === user.user\n  //             );\n  //             /*if (updatedUser.TITLE === \"default\") {\n  //               localStorage.removeItem(\"user\");\n  //               return setUser(null);\n  //             }*/\n  //             localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n  //             // const userObj = { userId: updatedUser.USERID };\n  //             // fetchOverviewAsync(userObj);\n  //             // fetchHistoryAsync(userObj);\n  //             setIsLoggedIn(true);\n  //             setUser(updatedUser.user);\n  //           } else {\n  //             throw new Error(\"something wrong\");\n  //           }\n  //         })\n  //         .catch((err) => {\n  //           localStorage.removeItem(\"user\");\n  //           setUser(null);\n  //           console.log(err);\n  //         });\n  //     } else {\n  //       localStorage.removeItem(\"user\");\n  //       setUser(null);\n  //     }\n  //   } else {\n  //     localStorage.removeItem(\"user\");\n  //     setUser(null);\n  //   }\n  // }, []);\n\n  //const history = useHistory();\n  //const location = useLocation();\n  const login = (userDepartment, userRole, userName, userDatas) => {\n    setUserDepartment(userDepartment);\n    setUserData(userDatas);\n    setUserRole(userRole);\n    setUser(userName);\n    setIsLoggedIn(true);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n    // 以 getAuthToken 從 localStorage 讀取 token\n    if (getAuthToken()) {\n      // 有 token 才 call API\n      getMe()\n        .then((response) => {\n          if (mounted) {\n            if (response) {\n              //console.log(response.data);\n              setUserData(response.data);\n              setUser(response.data.AccountName);\n              setUserRole(response.data.Role);\n              setUserDepartment(response.data.Department);\n              setIsLoggedIn(true);\n              // setIsLoading(false);\n              //history.push(\"/\");\n            }\n          }\n        })\n        .catch((err) => {\n          //console.log(err);\n          setUserData(null);\n          setIsLoggedIn(false);\n          setUserRole(null);\n          setUserDepartment(null);\n          setUser(null);\n          //setAuthToken(\"\");\n          removeAuthToken();\n        });\n    } else {\n      setUserData(null);\n      setIsLoggedIn(false);\n      setUserRole(null);\n      setUserDepartment(null);\n      setUser(null);\n      //setAuthToken(\"\");\n      removeAuthToken();\n      //setIsLoggedIn(false);\n      //setIsLoading(false);\n    }\n    return function cleanup() {\n      mounted = false;\n    };\n  }, []);\n\n  /*useEffect(() => {\n    console.log(isLoggedIn, userRole, user, userData);\n  }, [isLoggedIn, userRole, user, userData]);*/\n\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUserRole(null);\n    setUser(null);\n    //setAuthToken(\"\");\n    removeAuthToken();\n    setUserData(null);\n    setUserDepartment(null);\n    //history.push(\"/auth\");\n  };\n  const test = \"this is test\";\n\n  let routes;\n  if (!userData /*!isLoggedIn*/) {\n    routes = (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          // render={(props) => !userData?<Redirect to=\"/auth\" />:<Auth {...props} />}\n          component={Auth} /*render={(props) => <Auth {...props} />}*/\n        >\n          {/* <Auth /> */}\n        </Route>\n        <Route exact path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/error\" exact component={Error404Page} />\n        <Route component={Error403Page} />\n        {/* <Redirect to=\"/auth\" /> */}\n      </Switch>\n    );\n  }\n  if (\n    !!userData &&\n    //isLoggedIn &&\n    userData.Department === \"Admin\" /*isLoggedIn && userRole === \"Admin\"*/\n  ) {\n    routes = (\n      <Switch>\n        <Route\n          exact\n          path=\"/scheduler\"\n          render={() => {\n            if (!!userData) {\n              return (\n                <Scheduler\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n        >\n          {/* <Scheduler /> */}\n        </Route>\n        <Route\n          exact\n          path=\"/scheduler/add\"\n          render={() => {\n            if (!!userData) {\n              return (\n                <SchedulerAdd\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n        ></Route>\n        <Route\n          exact\n          path=\"/scheduler/edit\"\n          //render={(props) => <SchedulerEdit {...props} />}\n          render={(props) => {\n            if (!!userData) {\n              return (\n                <SchedulerEdit\n                  {...props}\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n        />\n        <Route\n          exact\n          path=\"/report\"\n          //render={(props) => <Report {...props} />}\n          render={(props) => {\n            if (!!userData) {\n              return (\n                <Report\n                  {...props}\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n        />\n        <Route\n          exact\n          replace\n          path=\"/\"\n          //component={RecentReportContainer}\n          render={() => {\n            if (userData) {\n              return (\n                <RecentReportContainer\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n          //render={(props) => <RecentReportContainer {...props} />}\n          // render={(props) => {\n          //   if (user) {\n          //     return <RecentReportContainer {...props} />;\n          //   }\n          //   return <Redirect to=\"/auth\" />;\n          // }}\n        />\n        <Route\n          exact\n          path=\"/authority\"\n          render={() => {\n            if (userData) {\n              return (\n                <Authority\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n          // render={() => {\n          //   if (user) {\n          //     return <Authority />;\n          //   }\n          //   return <Redirect to=\"/auth\" />;\n          // }}\n        >\n          {/* <Authority /> */}\n        </Route>\n        <Route\n          exact\n          path=\"/groupsetting\"\n          render={(props) => {\n            if (userData) {\n              return (\n                <GroupSetting\n                  {...props}\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n        ></Route>\n        <Route\n          exact\n          path=\"/authsetting\"\n          render={(props) => {\n            if (userData) {\n              return (\n                <AuthSetting\n                  {...props}\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n        ></Route>\n        <Route path=\"/error\" exact component={Error404Page} />\n        <Route component={Error404Page} />\n        {/* <Route\n          exact\n          path=\"/send-success\"\n          render={(props) => <SendConfirm {...props} />}\n        /> */}\n        {/* <Redirect to=\"/\" /> */}\n      </Switch>\n    );\n  }\n  if (isLoggedIn && userDepartment !== \"Admin\") {\n    routes = (\n      <Switch>\n        <Route exact path=\"/scheduler\">\n          <Scheduler />\n        </Route>\n        <Route\n          exact\n          path=\"/scheduler/add\"\n          render={(props) => {\n            if (userData) {\n              return (\n                <SchedulerAdd\n                  {...props}\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n        ></Route>\n        <Route\n          exact\n          path=\"/scheduler/edit\"\n          render={(props) => {\n            if (userData) {\n              return (\n                <SchedulerEdit\n                  {...props}\n                  setUserData={setUserData}\n                  setIsLoggedIn={setIsLoggedIn}\n                  setUserRole={setUserRole}\n                  setUserDepartment={setUserDepartment}\n                />\n              );\n            }\n            return <Redirect exact to=\"/\" />;\n          }}\n        />\n        <Route\n          exact\n          path=\"/report\"\n          render={(props) => (\n            <Report\n              {...props}\n              setUserData={setUserData}\n              setIsLoggedIn={setIsLoggedIn}\n              setUserRole={setUserRole}\n              setUserDepartment={setUserDepartment}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <RecentReportContainer\n              {...props}\n              setUserData={setUserData}\n              setIsLoggedIn={setIsLoggedIn}\n              setUserRole={setUserRole}\n              setUserDepartment={setUserDepartment}\n            />\n          )}\n        />\n        {userRole === \"Leader\" ? (\n          <>\n            <Route\n              exact\n              path=\"/authority\"\n              render={() => {\n                if (userData) {\n                  return (\n                    <Authority\n                      setUserData={setUserData}\n                      setIsLoggedIn={setIsLoggedIn}\n                      setUserRole={setUserRole}\n                      setUserDepartment={setUserDepartment}\n                    />\n                  );\n                }\n                return <Redirect exact to=\"/\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/groupsetting\"\n              render={(props) => {\n                if (userData) {\n                  return (\n                    <GroupSetting\n                      {...props}\n                      setUserData={setUserData}\n                      setIsLoggedIn={setIsLoggedIn}\n                      setUserRole={setUserRole}\n                      setUserDepartment={setUserDepartment}\n                    />\n                  );\n                }\n                return <Redirect exact to=\"/\" />;\n              }}\n            ></Route>\n            <Route\n              exact\n              path=\"/authsetting\"\n              render={(props) => {\n                if (userData) {\n                  return (\n                    <AuthSetting\n                      {...props}\n                      setUserData={setUserData}\n                      setIsLoggedIn={setIsLoggedIn}\n                      setUserRole={setUserRole}\n                      setUserDepartment={setUserDepartment}\n                      test={test}\n                    />\n                  );\n                }\n                return <Redirect exact to=\"/\" />;\n              }}\n            ></Route>\n          </>\n        ) : null}\n        {/* <Redirect to=\"/home\" /> */}\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        UserData: userData,\n        isLoggedIn: isLoggedIn,\n        login: login,\n        logout: logout,\n        Role: userRole,\n        UserName: user,\n        Department: userDepartment,\n      }}\n    >\n      <Router>\n        <MainNavigation login={isLoggedIn} />\n        <main>{routes}</main>\n        {/* <ChangeMode /> */}\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}